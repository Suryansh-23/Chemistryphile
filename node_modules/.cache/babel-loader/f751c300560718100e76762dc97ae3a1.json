{"ast":null,"code":"\"use strict\";\n\nvar validateNames = require(\"./helpers/validate-names\");\n\nmodule.exports = function (core) {\n  core.Document.prototype.createProcessingInstruction = function (target, data) {\n    target = String(target);\n    data = String(data);\n    validateNames.name(target, core);\n\n    if (data.indexOf(\"?>\") !== -1) {\n      throw new core.DOMException(core.DOMException.INVALID_CHARACTER_ERR, \"Processing instruction data cannot contain the string \\\"?>\\\"\");\n    }\n\n    return new core.ProcessingInstruction(this._ownerDocument, target, data);\n  };\n\n  core.Document.prototype.createTextNode = function (data) {\n    return new core.Text(this, String(data));\n  };\n\n  core.Document.prototype.createComment = function (data) {\n    return new core.Comment(this, String(data));\n  };\n};","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/lib/jsdom/living/document.js"],"names":["validateNames","require","module","exports","core","Document","prototype","createProcessingInstruction","target","data","String","name","indexOf","DOMException","INVALID_CHARACTER_ERR","ProcessingInstruction","_ownerDocument","createTextNode","Text","createComment","Comment"],"mappings":"AAAA;;AACA,IAAIA,aAAa,GAAGC,OAAO,CAAC,0BAAD,CAA3B;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAC/BA,EAAAA,IAAI,CAACC,QAAL,CAAcC,SAAd,CAAwBC,2BAAxB,GAAsD,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC5ED,IAAAA,MAAM,GAAGE,MAAM,CAACF,MAAD,CAAf;AACAC,IAAAA,IAAI,GAAGC,MAAM,CAACD,IAAD,CAAb;AAEAT,IAAAA,aAAa,CAACW,IAAd,CAAmBH,MAAnB,EAA2BJ,IAA3B;;AAEA,QAAIK,IAAI,CAACG,OAAL,CAAa,IAAb,MAAuB,CAAC,CAA5B,EAA+B;AAC7B,YAAM,IAAIR,IAAI,CAACS,YAAT,CAAsBT,IAAI,CAACS,YAAL,CAAkBC,qBAAxC,EACJ,8DADI,CAAN;AAED;;AAED,WAAO,IAAIV,IAAI,CAACW,qBAAT,CAA+B,KAAKC,cAApC,EAAoDR,MAApD,EAA4DC,IAA5D,CAAP;AACD,GAZD;;AAcAL,EAAAA,IAAI,CAACC,QAAL,CAAcC,SAAd,CAAwBW,cAAxB,GAAyC,UAAUR,IAAV,EAAgB;AACvD,WAAO,IAAIL,IAAI,CAACc,IAAT,CAAc,IAAd,EAAoBR,MAAM,CAACD,IAAD,CAA1B,CAAP;AACD,GAFD;;AAIAL,EAAAA,IAAI,CAACC,QAAL,CAAcC,SAAd,CAAwBa,aAAxB,GAAwC,UAAUV,IAAV,EAAgB;AACtD,WAAO,IAAIL,IAAI,CAACgB,OAAT,CAAiB,IAAjB,EAAuBV,MAAM,CAACD,IAAD,CAA7B,CAAP;AACD,GAFD;AAGD,CAtBD","sourcesContent":["\"use strict\";\nvar validateNames = require(\"./helpers/validate-names\");\n\nmodule.exports = function (core) {\n  core.Document.prototype.createProcessingInstruction = function (target, data) {\n    target = String(target);\n    data = String(data);\n\n    validateNames.name(target, core);\n\n    if (data.indexOf(\"?>\") !== -1) {\n      throw new core.DOMException(core.DOMException.INVALID_CHARACTER_ERR,\n        \"Processing instruction data cannot contain the string \\\"?>\\\"\");\n    }\n\n    return new core.ProcessingInstruction(this._ownerDocument, target, data);\n  };\n\n  core.Document.prototype.createTextNode = function (data) {\n    return new core.Text(this, String(data));\n  };\n\n  core.Document.prototype.createComment = function (data) {\n    return new core.Comment(this, String(data));\n  };\n};\n"]},"metadata":{},"sourceType":"script"}