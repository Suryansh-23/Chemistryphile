{"ast":null,"code":"var core = require(\"../level1/core\");\n\nvar defineGetter = require('../utils').defineGetter;\n\nvar defineSetter = require('../utils').defineSetter;\n\nvar memoizeQuery = require('../utils').memoizeQuery;\n\nvar validateQname = require('../living/helpers/validate-names').qname;\n\nvar validateAndExtract = require('../living/helpers/validate-names').validateAndExtract;\n\ncore.NamedNodeMap.prototype.getNamedItemNS = function (\n/* string */\nnamespaceURI,\n/* string */\nlocalName) {\n  if (this._nsStore[namespaceURI] && this._nsStore[namespaceURI][localName]) {\n    return this._nsStore[namespaceURI][localName];\n  }\n\n  return null;\n};\n\ncore.NamedNodeMap.prototype.setNamedItemNS = function (\n/* Node */\narg) {\n  if (this._readonly) {\n    throw new core.DOMException(core.NO_MODIFICATION_ALLOWED_ERR);\n  }\n\n  if (this._ownerDocument !== arg.ownerDocument) {\n    throw new core.DOMException(core.WRONG_DOCUMENT_ERR);\n  }\n\n  if (arg._ownerElement) {\n    throw new core.DOMException(core.INUSE_ATTRIBUTE_ERR);\n  } // readonly\n\n\n  if (this._readonly === true) {\n    throw new core.DOMException(core.NO_MODIFICATION_ALLOWED_ERR);\n  }\n\n  if (!this._nsStore[arg.namespaceURI]) {\n    this._nsStore[arg.namespaceURI] = {};\n  }\n\n  var existing = null;\n\n  if (this._nsStore[arg.namespaceURI][arg.localName]) {\n    var existing = this._nsStore[arg.namespaceURI][arg.localName];\n  }\n\n  this._nsStore[arg.namespaceURI][arg.localName] = arg;\n  arg._ownerDocument = this._ownerDocument;\n  return this.setNamedItem(arg);\n};\n\ncore.NamedNodeMap.prototype.removeNamedItemNS = function (\n/*string */\nnamespaceURI,\n/* string */\nlocalName) {\n  if (this.readonly) {\n    throw new core.DOMException(core.NO_MODIFICATION_ALLOWED_ERR);\n  }\n\n  var parent = this._parentNode,\n      found = null,\n      defaults,\n      clone,\n      defaultEl,\n      defaultAttr;\n\n  if (this._nsStore[namespaceURI] && this._nsStore[namespaceURI][localName]) {\n    found = this._nsStore[namespaceURI][localName];\n    this.removeNamedItem(found.qualifiedName);\n    delete this._nsStore[namespaceURI][localName];\n  }\n\n  if (!found) {\n    throw new core.DOMException(core.NOT_FOUND_ERR);\n  }\n\n  return found;\n};\n\ncore.NamedNodeMap.prototype._map = function (fn) {\n  var ret = [],\n      l = this.length,\n      i = 0,\n      node;\n\n  for (i; i < l; i++) {\n    node = this.item(i);\n\n    if (fn && fn(node)) {\n      ret.push(node);\n    }\n  }\n\n  return ret;\n};\n\ncore.Element.prototype.getAttribute = function (\n/* string */\nname) {\n  var attr = this.getAttributeNode(name);\n  return attr && attr.value;\n};\n\ncore.Element.prototype.getAttributeNode = function (\n/* string */\nname) {\n  return this._attributes.$getNoNS(name);\n};\n\ncore.Element.prototype.removeAttribute = function (\n/* string */\nname) {\n  return this._attributes.$removeNoNS(name);\n};\n\ncore.Element.prototype.getAttributeNS = function (\n/* string */\nnamespaceURI,\n/* string */\nlocalName) {\n  if (namespaceURI === \"\") {\n    namespaceURI = null;\n  }\n\n  var attr = this._attributes.$getNode(namespaceURI, localName);\n\n  return attr && attr.value;\n};\n\ncore.Element.prototype.setAttribute = function (\n/* string */\nname,\n/* string */\nvalue) {\n  this._attributes.$setNoNS(name, value);\n};\n\ncore.Element.prototype._setAttributeNoValidation = function (name, value) {\n  this._attributes.$setNoNS(name, value, true);\n};\n\ncore.Element.prototype.setAttributeNS = function (namespace, name, value) {\n  namespace = namespace !== null ? String(namespace) : namespace;\n  name = String(name);\n  value = String(value);\n  var extracted = validateAndExtract(namespace, name, core);\n\n  this._attributes.$set(extracted.localName, value, extracted.qualifiedName, extracted.prefix, extracted.namespace);\n};\n\ncore.Element.prototype.removeAttributeNS = function (\n/* string */\nnamespaceURI,\n/* string */\nlocalName) {\n  if (namespaceURI === \"\") {\n    namespaceURI = null;\n  }\n\n  this._attributes.$remove(namespaceURI, localName);\n};\n\ncore.Element.prototype.getAttributeNodeNS = function (\n/* string */\nnamespaceURI,\n/* string */\nlocalName) {\n  if (namespaceURI === \"\") {\n    namespaceURI = null;\n  }\n\n  return this._attributes.$getNode(namespaceURI, localName);\n};\n\ncore.Element.prototype.setAttributeNodeNS = function (\n/* Attr */\nnewAttr) {\n  if (newAttr.ownerElement) {\n    throw new core.DOMException(core.INUSE_ATTRIBUTE_ERR);\n  }\n\n  return this._attributes.$setNode(newAttr);\n};\n\ncore.Element.prototype.getElementsByTagNameNS = memoizeQuery(function (\n/* String */\nnamespaceURI,\n/* String */\nlocalName) {\n  var nsPrefixCache = {};\n\n  function filterByTagName(child) {\n    var localMatch = child.localName === localName,\n        nsMatch = child.namespaceURI === namespaceURI;\n\n    if ((localMatch || localName === \"*\") && (nsMatch || namespaceURI === \"*\")) {\n      if (child.nodeType === child.ELEMENT_NODE) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return new core.NodeList(this.ownerDocument || this, core.mapper(this, filterByTagName));\n});\n\ncore.Element.prototype.hasAttribute = function (\n/* string */\nname) {\n  if (!this._attributes) {\n    return false;\n  } // Note: you might think you only need the latter condition. However, it makes a test case fail.\n  // HOWEVER, that test case is for a XML DTD feature called \"default attributes\" that never was implemented by\n  // browsers, so when we remove default attributes, we should be able to fix this code too.\n\n\n  return !!this._attributes.$getNoNS(name) || !!this._attributes.$getNoNS(name.toLowerCase());\n};\n\ncore.Element.prototype.hasAttributeNS = function (\n/* string */\nnamespaceURI,\n/* string */\nlocalName) {\n  if (namespaceURI === \"\") {\n    namespaceURI = null;\n  }\n\n  return this._attributes.getNamedItemNS(namespaceURI, localName) || this.hasAttribute(localName);\n};\n\ncore.Document.prototype.importNode = function (\n/* Node */\nimportedNode,\n/* bool */\ndeep) {\n  if (importedNode && importedNode.nodeType) {\n    if (importedNode.nodeType === this.DOCUMENT_NODE || importedNode.nodeType === this.DOCUMENT_TYPE_NODE) {\n      throw new core.DOMException(core.NOT_SUPPORTED_ERR);\n    }\n  }\n\n  var self = this,\n      newNode = importedNode.cloneNode(deep, function (a, b) {\n    b._prefix = a._prefix;\n    b._namespaceURI = a._namespaceURI;\n    b._localName = a._localName;\n  });\n\n  function lastChance(el) {\n    var attr, defaultEl, i, len;\n    el._ownerDocument = self;\n\n    if (el.id) {\n      if (!self._ids) {\n        self._ids = {};\n      }\n\n      if (!self._ids[el.id]) {\n        self._ids[el.id] = [];\n      }\n\n      self._ids[el.id].push(el);\n    }\n\n    if (el._attributes) {\n      var drop = [];\n      el._attributes._ownerDocument = self;\n\n      for (i = 0, len = el._attributes.length; i < len; i++) {\n        attr = el._attributes[i];\n        attr._ownerDocument = self;\n      } // Remove obsolete default nodes.\n\n\n      for (i = 0; i < drop.length; ++i) {\n        el._attributes.$removeNode(drop[i]);\n      }\n    }\n  }\n\n  if (deep) {\n    core.visitTree(newNode, lastChance);\n  } else {\n    lastChance(newNode);\n  }\n\n  return newNode;\n};\n\ncore.Document.prototype.createElementNS = function (namespace, qualifiedName) {\n  namespace = namespace !== null ? String(namespace) : namespace;\n  qualifiedName = String(qualifiedName);\n  var extracted = validateAndExtract(namespace, qualifiedName, core);\n  var element = this.createElement(extracted.localName);\n  element._namespaceURI = extracted.namespace;\n  element._prefix = extracted.prefix;\n  return element;\n};\n\ncore.Document.prototype.createAttributeNS = function (namespace, qualifiedName) {\n  namespace = namespace !== null ? String(namespace) : namespace;\n  qualifiedName = String(qualifiedName);\n  var extracted = validateAndExtract(namespace, qualifiedName, core);\n  attribute = this.createAttribute(extracted.qualifiedName);\n  attribute._namespaceURI = extracted.namespace;\n  attribute._prefix = extracted.prefix;\n  attribute._localName = extracted.localName;\n  attribute._name = extracted.qualifiedName;\n  return attribute;\n};\n\ncore.Document.prototype.getElementsByTagNameNS = function (\n/* String */\nnamespaceURI,\n/* String */\nlocalName) {\n  return core.Element.prototype.getElementsByTagNameNS.call(this, namespaceURI, localName);\n};\n\ncore.Document.prototype.getElementById = function (id) {\n  // return the first element\n  return this._ids && this._ids[id] && this._ids[id].length > 0 ? this._ids[id][0] : null;\n};","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/lib/jsdom/level2/core.js"],"names":["core","require","defineGetter","defineSetter","memoizeQuery","validateQname","qname","validateAndExtract","NamedNodeMap","prototype","getNamedItemNS","namespaceURI","localName","_nsStore","setNamedItemNS","arg","_readonly","DOMException","NO_MODIFICATION_ALLOWED_ERR","_ownerDocument","ownerDocument","WRONG_DOCUMENT_ERR","_ownerElement","INUSE_ATTRIBUTE_ERR","existing","setNamedItem","removeNamedItemNS","readonly","parent","_parentNode","found","defaults","clone","defaultEl","defaultAttr","removeNamedItem","qualifiedName","NOT_FOUND_ERR","_map","fn","ret","l","length","i","node","item","push","Element","getAttribute","name","attr","getAttributeNode","value","_attributes","$getNoNS","removeAttribute","$removeNoNS","getAttributeNS","$getNode","setAttribute","$setNoNS","_setAttributeNoValidation","setAttributeNS","namespace","String","extracted","$set","prefix","removeAttributeNS","$remove","getAttributeNodeNS","setAttributeNodeNS","newAttr","ownerElement","$setNode","getElementsByTagNameNS","nsPrefixCache","filterByTagName","child","localMatch","nsMatch","nodeType","ELEMENT_NODE","NodeList","mapper","hasAttribute","toLowerCase","hasAttributeNS","Document","importNode","importedNode","deep","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","NOT_SUPPORTED_ERR","self","newNode","cloneNode","a","b","_prefix","_namespaceURI","_localName","lastChance","el","len","id","_ids","drop","$removeNode","visitTree","createElementNS","element","createElement","createAttributeNS","attribute","createAttribute","_name","call","getElementById"],"mappings":"AAAA,IAAIA,IAAI,GAAWC,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,UAAD,CAAP,CAAoBC,YAAvC;;AACA,IAAIC,YAAY,GAAGF,OAAO,CAAC,UAAD,CAAP,CAAoBE,YAAvC;;AACA,IAAIC,YAAY,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBG,YAAvC;;AACA,IAAIC,aAAa,GAAGJ,OAAO,CAAC,kCAAD,CAAP,CAA4CK,KAAhE;;AACA,IAAIC,kBAAkB,GAAGN,OAAO,CAAC,kCAAD,CAAP,CAA4CM,kBAArE;;AAEAP,IAAI,CAACQ,YAAL,CAAkBC,SAAlB,CAA4BC,cAA5B,GAA6C;AAAS;AAAaC,YAAtB;AACS;AAAaC,SADtB,EAE7C;AACE,MAAI,KAAKC,QAAL,CAAcF,YAAd,KAA+B,KAAKE,QAAL,CAAcF,YAAd,EAA4BC,SAA5B,CAAnC,EAA2E;AACzE,WAAO,KAAKC,QAAL,CAAcF,YAAd,EAA4BC,SAA5B,CAAP;AACD;;AACD,SAAO,IAAP;AACD,CAPD;;AASAZ,IAAI,CAACQ,YAAL,CAAkBC,SAAlB,CAA4BK,cAA5B,GAA6C;AAAS;AAAWC,GAApB,EAC7C;AACE,MAAI,KAAKC,SAAT,EAAoB;AAClB,UAAM,IAAIhB,IAAI,CAACiB,YAAT,CAAsBjB,IAAI,CAACkB,2BAA3B,CAAN;AACD;;AAED,MAAI,KAAKC,cAAL,KAAwBJ,GAAG,CAACK,aAAhC,EAA+C;AAC7C,UAAM,IAAIpB,IAAI,CAACiB,YAAT,CAAsBjB,IAAI,CAACqB,kBAA3B,CAAN;AACD;;AAED,MAAIN,GAAG,CAACO,aAAR,EAAuB;AACrB,UAAM,IAAItB,IAAI,CAACiB,YAAT,CAAsBjB,IAAI,CAACuB,mBAA3B,CAAN;AACD,GAXH,CAaE;;;AACA,MAAI,KAAKP,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,UAAM,IAAIhB,IAAI,CAACiB,YAAT,CAAsBjB,IAAI,CAACkB,2BAA3B,CAAN;AACD;;AAGD,MAAI,CAAC,KAAKL,QAAL,CAAcE,GAAG,CAACJ,YAAlB,CAAL,EAAsC;AACpC,SAAKE,QAAL,CAAcE,GAAG,CAACJ,YAAlB,IAAkC,EAAlC;AACD;;AACD,MAAIa,QAAQ,GAAG,IAAf;;AACA,MAAI,KAAKX,QAAL,CAAcE,GAAG,CAACJ,YAAlB,EAAgCI,GAAG,CAACH,SAApC,CAAJ,EAAoD;AAClD,QAAIY,QAAQ,GAAG,KAAKX,QAAL,CAAcE,GAAG,CAACJ,YAAlB,EAAgCI,GAAG,CAACH,SAApC,CAAf;AACD;;AAED,OAAKC,QAAL,CAAcE,GAAG,CAACJ,YAAlB,EAAgCI,GAAG,CAACH,SAApC,IAAiDG,GAAjD;AAEAA,EAAAA,GAAG,CAACI,cAAJ,GAAqB,KAAKA,cAA1B;AAEA,SAAO,KAAKM,YAAL,CAAkBV,GAAlB,CAAP;AACD,CAjCD;;AAmCAf,IAAI,CAACQ,YAAL,CAAkBC,SAAlB,CAA4BiB,iBAA5B,GAAgD;AAAS;AAAYf,YAArB;AACS;AAAaC,SADtB,EAEhD;AAEE,MAAI,KAAKe,QAAT,EAAmB;AACjB,UAAM,IAAI3B,IAAI,CAACiB,YAAT,CAAsBjB,IAAI,CAACkB,2BAA3B,CAAN;AACD;;AAGD,MAAIU,MAAM,GAAG,KAAKC,WAAlB;AAAA,MACIC,KAAK,GAAG,IADZ;AAAA,MAEIC,QAFJ;AAAA,MAGIC,KAHJ;AAAA,MAIIC,SAJJ;AAAA,MAKIC,WALJ;;AAOA,MAAI,KAAKrB,QAAL,CAAcF,YAAd,KACA,KAAKE,QAAL,CAAcF,YAAd,EAA4BC,SAA5B,CADJ,EAEA;AACEkB,IAAAA,KAAK,GAAG,KAAKjB,QAAL,CAAcF,YAAd,EAA4BC,SAA5B,CAAR;AACA,SAAKuB,eAAL,CAAqBL,KAAK,CAACM,aAA3B;AACA,WAAO,KAAKvB,QAAL,CAAcF,YAAd,EAA4BC,SAA5B,CAAP;AACD;;AAED,MAAI,CAACkB,KAAL,EAAY;AACV,UAAM,IAAI9B,IAAI,CAACiB,YAAT,CAAsBjB,IAAI,CAACqC,aAA3B,CAAN;AACD;;AAED,SAAOP,KAAP;AACD,CA7BD;;AA+BA9B,IAAI,CAACQ,YAAL,CAAkBC,SAAlB,CAA4B6B,IAA5B,GAAmC,UAASC,EAAT,EAAa;AAC9C,MAAIC,GAAG,GAAG,EAAV;AAAA,MAAcC,CAAC,GAAG,KAAKC,MAAvB;AAAA,MAA+BC,CAAC,GAAG,CAAnC;AAAA,MAAsCC,IAAtC;;AACA,OAAID,CAAJ,EAAOA,CAAC,GAACF,CAAT,EAAYE,CAAC,EAAb,EAAiB;AACfC,IAAAA,IAAI,GAAG,KAAKC,IAAL,CAAUF,CAAV,CAAP;;AACA,QAAIJ,EAAE,IAAIA,EAAE,CAACK,IAAD,CAAZ,EAAoB;AAClBJ,MAAAA,GAAG,CAACM,IAAJ,CAASF,IAAT;AACD;AACF;;AACD,SAAOJ,GAAP;AACD,CATD;;AAWAxC,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuBuC,YAAvB,GAAsC;AAAS;AAAaC,IAAtB,EACtC;AACE,MAAIC,IAAI,GAAI,KAAKC,gBAAL,CAAsBF,IAAtB,CAAZ;AACA,SAAOC,IAAI,IAAIA,IAAI,CAACE,KAApB;AACD,CAJD;;AAMApD,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuB0C,gBAAvB,GAA0C;AAAS;AAAaF,IAAtB,EAC1C;AACE,SAAO,KAAKI,WAAL,CAAiBC,QAAjB,CAA0BL,IAA1B,CAAP;AACD,CAHD;;AAKAjD,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuB8C,eAAvB,GAAyC;AAAS;AAAaN,IAAtB,EACzC;AACE,SAAO,KAAKI,WAAL,CAAiBG,WAAjB,CAA6BP,IAA7B,CAAP;AACD,CAHD;;AAKAjD,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuBgD,cAAvB,GAAwC;AAAS;AAAa9C,YAAtB;AACS;AAAaC,SADtB,EAExC;AACE,MAAID,YAAY,KAAK,EAArB,EAAyB;AACvBA,IAAAA,YAAY,GAAG,IAAf;AACD;;AAED,MAAIuC,IAAI,GAAI,KAAKG,WAAL,CAAiBK,QAAjB,CAA0B/C,YAA1B,EAAwCC,SAAxC,CAAZ;;AACA,SAAOsC,IAAI,IAAIA,IAAI,CAACE,KAApB;AACD,CATD;;AAWApD,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuBkD,YAAvB,GAAsC;AAAS;AAAaV,IAAtB;AACS;AAAaG,KADtB,EAEtC;AACE,OAAKC,WAAL,CAAiBO,QAAjB,CAA0BX,IAA1B,EAAgCG,KAAhC;AACD,CAJD;;AAMApD,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuBoD,yBAAvB,GAAmD,UAAUZ,IAAV,EAAgBG,KAAhB,EAAuB;AACxE,OAAKC,WAAL,CAAiBO,QAAjB,CAA0BX,IAA1B,EAAgCG,KAAhC,EAAuC,IAAvC;AACD,CAFD;;AAIApD,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuBqD,cAAvB,GAAwC,UAAUC,SAAV,EAAqBd,IAArB,EAA2BG,KAA3B,EAAkC;AACxEW,EAAAA,SAAS,GAAGA,SAAS,KAAK,IAAd,GAAqBC,MAAM,CAACD,SAAD,CAA3B,GAAyCA,SAArD;AACAd,EAAAA,IAAI,GAAGe,MAAM,CAACf,IAAD,CAAb;AACAG,EAAAA,KAAK,GAAGY,MAAM,CAACZ,KAAD,CAAd;AAEA,MAAIa,SAAS,GAAG1D,kBAAkB,CAACwD,SAAD,EAAYd,IAAZ,EAAkBjD,IAAlB,CAAlC;;AAEA,OAAKqD,WAAL,CAAiBa,IAAjB,CAAsBD,SAAS,CAACrD,SAAhC,EAA2CwC,KAA3C,EAAkDa,SAAS,CAAC7B,aAA5D,EAA2E6B,SAAS,CAACE,MAArF,EAA6FF,SAAS,CAACF,SAAvG;AACD,CARD;;AAUA/D,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuB2D,iBAAvB,GAA2C;AAAS;AAAazD,YAAtB;AACS;AAAaC,SADtB,EAE3C;AACE,MAAID,YAAY,KAAK,EAArB,EAAyB;AACvBA,IAAAA,YAAY,GAAG,IAAf;AACD;;AAED,OAAK0C,WAAL,CAAiBgB,OAAjB,CAAyB1D,YAAzB,EAAuCC,SAAvC;AACD,CARD;;AAUAZ,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuB6D,kBAAvB,GAA4C;AAAS;AAAa3D,YAAtB;AACS;AAAaC,SADtB,EAE5C;AACE,MAAID,YAAY,KAAK,EAArB,EAAyB;AACvBA,IAAAA,YAAY,GAAG,IAAf;AACD;;AAED,SAAO,KAAK0C,WAAL,CAAiBK,QAAjB,CAA0B/C,YAA1B,EAAwCC,SAAxC,CAAP;AACD,CARD;;AAUAZ,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuB8D,kBAAvB,GAA4C;AAAS;AAAWC,OAApB,EAC5C;AACE,MAAIA,OAAO,CAACC,YAAZ,EAA0B;AACxB,UAAM,IAAIzE,IAAI,CAACiB,YAAT,CAAsBjB,IAAI,CAACuB,mBAA3B,CAAN;AACD;;AAED,SAAO,KAAK8B,WAAL,CAAiBqB,QAAjB,CAA0BF,OAA1B,CAAP;AACD,CAPD;;AASAxE,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuBkE,sBAAvB,GAAgDvE,YAAY,CAAC;AAAS;AAAaO,YAAtB;AACJ;AAAaC,SADT,EAE7D;AACE,MAAIgE,aAAa,GAAG,EAApB;;AAEA,WAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAIC,UAAU,GAAGD,KAAK,CAAClE,SAAN,KAAoBA,SAArC;AAAA,QACIoE,OAAO,GAAMF,KAAK,CAACnE,YAAN,KAAuBA,YADxC;;AAGA,QAAI,CAACoE,UAAU,IAAInE,SAAS,KAAK,GAA7B,MACCoE,OAAO,IAAIrE,YAAY,KAAK,GAD7B,CAAJ,EAEA;AACE,UAAImE,KAAK,CAACG,QAAN,KAAmBH,KAAK,CAACI,YAA7B,EAA2C;AACzC,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD;;AAED,SAAO,IAAIlF,IAAI,CAACmF,QAAT,CAAkB,KAAK/D,aAAL,IAAsB,IAAxC,EACkBpB,IAAI,CAACoF,MAAL,CAAY,IAAZ,EAAkBP,eAAlB,CADlB,CAAP;AAED,CArB2D,CAA5D;;AAuBA7E,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuB4E,YAAvB,GAAsC;AAAS;AAAYpC,IAArB,EACtC;AACE,MAAI,CAAC,KAAKI,WAAV,EAAuB;AACrB,WAAO,KAAP;AACD,GAHH,CAKE;AACA;AACA;;;AACA,SAAO,CAAC,CAAC,KAAKA,WAAL,CAAiBC,QAAjB,CAA0BL,IAA1B,CAAF,IAAqC,CAAC,CAAC,KAAKI,WAAL,CAAiBC,QAAjB,CAA0BL,IAAI,CAACqC,WAAL,EAA1B,CAA9C;AACD,CAVD;;AAYAtF,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuB8E,cAAvB,GAAwC;AAAS;AAAY5E,YAArB;AACS;AAAYC,SADrB,EAExC;AACE,MAAID,YAAY,KAAK,EAArB,EAAyB;AACvBA,IAAAA,YAAY,GAAG,IAAf;AACD;;AAED,SAAQ,KAAK0C,WAAL,CAAiB3C,cAAjB,CAAgCC,YAAhC,EAA8CC,SAA9C,KACA,KAAKyE,YAAL,CAAkBzE,SAAlB,CADR;AAED,CATD;;AAWAZ,IAAI,CAACwF,QAAL,CAAc/E,SAAd,CAAwBgF,UAAxB,GAAqC;AAAS;AAAWC,YAApB;AACS;AAAWC,IADpB,EAErC;AACE,MAAID,YAAY,IAAIA,YAAY,CAACT,QAAjC,EAA2C;AACzC,QAAIS,YAAY,CAACT,QAAb,KAA0B,KAAKW,aAA/B,IACAF,YAAY,CAACT,QAAb,KAA0B,KAAKY,kBADnC,EACuD;AACrD,YAAM,IAAI7F,IAAI,CAACiB,YAAT,CAAsBjB,IAAI,CAAC8F,iBAA3B,CAAN;AACD;AACF;;AAED,MAAIC,IAAI,GAAG,IAAX;AAAA,MACIC,OAAO,GAAGN,YAAY,CAACO,SAAb,CAAuBN,IAAvB,EAA6B,UAASO,CAAT,EAAYC,CAAZ,EAAe;AACpDA,IAAAA,CAAC,CAACC,OAAF,GAAmBF,CAAC,CAACE,OAArB;AACAD,IAAAA,CAAC,CAACE,aAAF,GAAmBH,CAAC,CAACG,aAArB;AACAF,IAAAA,CAAC,CAACG,UAAF,GAAmBJ,CAAC,CAACI,UAArB;AACD,GAJS,CADd;;AAOA,WAASC,UAAT,CAAoBC,EAApB,EAAwB;AACtB,QAAItD,IAAJ,EAAUjB,SAAV,EAAqBU,CAArB,EAAwB8D,GAAxB;AAEAD,IAAAA,EAAE,CAACrF,cAAH,GAAoB4E,IAApB;;AACA,QAAIS,EAAE,CAACE,EAAP,EAAW;AACT,UAAI,CAACX,IAAI,CAACY,IAAV,EAAgB;AAACZ,QAAAA,IAAI,CAACY,IAAL,GAAY,EAAZ;AAAgB;;AACjC,UAAI,CAACZ,IAAI,CAACY,IAAL,CAAUH,EAAE,CAACE,EAAb,CAAL,EAAuB;AAACX,QAAAA,IAAI,CAACY,IAAL,CAAUH,EAAE,CAACE,EAAb,IAAmB,EAAnB;AAAuB;;AAC/CX,MAAAA,IAAI,CAACY,IAAL,CAAUH,EAAE,CAACE,EAAb,EAAiB5D,IAAjB,CAAsB0D,EAAtB;AACD;;AACD,QAAIA,EAAE,CAACnD,WAAP,EAAoB;AAClB,UAAIuD,IAAI,GAAG,EAAX;AACAJ,MAAAA,EAAE,CAACnD,WAAH,CAAelC,cAAf,GAAgC4E,IAAhC;;AACA,WAAKpD,CAAC,GAAC,CAAF,EAAI8D,GAAG,GAACD,EAAE,CAACnD,WAAH,CAAeX,MAA5B,EAAoCC,CAAC,GAAG8D,GAAxC,EAA6C9D,CAAC,EAA9C,EAAkD;AAChDO,QAAAA,IAAI,GAAGsD,EAAE,CAACnD,WAAH,CAAeV,CAAf,CAAP;AACAO,QAAAA,IAAI,CAAC/B,cAAL,GAAsB4E,IAAtB;AACD,OANiB,CAQlB;;;AACA,WAAIpD,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGiE,IAAI,CAAClE,MAApB,EAA4B,EAAEC,CAA9B,EAAiC;AAC/B6D,QAAAA,EAAE,CAACnD,WAAH,CAAewD,WAAf,CAA2BD,IAAI,CAACjE,CAAD,CAA/B;AACD;AAEF;AACF;;AAED,MAAIgD,IAAJ,EAAU;AACR3F,IAAAA,IAAI,CAAC8G,SAAL,CAAed,OAAf,EAAwBO,UAAxB;AACD,GAFD,MAGK;AACHA,IAAAA,UAAU,CAACP,OAAD,CAAV;AACD;;AAED,SAAOA,OAAP;AACD,CAlDD;;AAoDAhG,IAAI,CAACwF,QAAL,CAAc/E,SAAd,CAAwBsG,eAAxB,GAA0C,UAAUhD,SAAV,EAAqB3B,aAArB,EAAoC;AAC5E2B,EAAAA,SAAS,GAAGA,SAAS,KAAK,IAAd,GAAqBC,MAAM,CAACD,SAAD,CAA3B,GAAyCA,SAArD;AACA3B,EAAAA,aAAa,GAAG4B,MAAM,CAAC5B,aAAD,CAAtB;AAEA,MAAI6B,SAAS,GAAG1D,kBAAkB,CAACwD,SAAD,EAAY3B,aAAZ,EAA2BpC,IAA3B,CAAlC;AACA,MAAIgH,OAAO,GAAG,KAAKC,aAAL,CAAmBhD,SAAS,CAACrD,SAA7B,CAAd;AACAoG,EAAAA,OAAO,CAACX,aAAR,GAAwBpC,SAAS,CAACF,SAAlC;AACAiD,EAAAA,OAAO,CAACZ,OAAR,GAAkBnC,SAAS,CAACE,MAA5B;AAEA,SAAO6C,OAAP;AACD,CAVD;;AAYAhH,IAAI,CAACwF,QAAL,CAAc/E,SAAd,CAAwByG,iBAAxB,GAA4C,UAAUnD,SAAV,EAAqB3B,aAArB,EAAoC;AAC9E2B,EAAAA,SAAS,GAAGA,SAAS,KAAK,IAAd,GAAqBC,MAAM,CAACD,SAAD,CAA3B,GAAyCA,SAArD;AACA3B,EAAAA,aAAa,GAAG4B,MAAM,CAAC5B,aAAD,CAAtB;AAEA,MAAI6B,SAAS,GAAG1D,kBAAkB,CAACwD,SAAD,EAAY3B,aAAZ,EAA2BpC,IAA3B,CAAlC;AACAmH,EAAAA,SAAS,GAAG,KAAKC,eAAL,CAAqBnD,SAAS,CAAC7B,aAA/B,CAAZ;AAEA+E,EAAAA,SAAS,CAACd,aAAV,GAA0BpC,SAAS,CAACF,SAApC;AACAoD,EAAAA,SAAS,CAACf,OAAV,GAAoBnC,SAAS,CAACE,MAA9B;AACAgD,EAAAA,SAAS,CAACb,UAAV,GAAuBrC,SAAS,CAACrD,SAAjC;AACAuG,EAAAA,SAAS,CAACE,KAAV,GAAkBpD,SAAS,CAAC7B,aAA5B;AAEA,SAAO+E,SAAP;AACD,CAbD;;AAeAnH,IAAI,CAACwF,QAAL,CAAc/E,SAAd,CAAwBkE,sBAAxB,GAAiD;AAAS;AAAahE,YAAtB;AACS;AAAaC,SADtB,EAEjD;AACE,SAAOZ,IAAI,CAAC+C,OAAL,CAAatC,SAAb,CAAuBkE,sBAAvB,CAA8C2C,IAA9C,CAAmD,IAAnD,EACmD3G,YADnD,EAEmDC,SAFnD,CAAP;AAGD,CAND;;AAQAZ,IAAI,CAACwF,QAAL,CAAc/E,SAAd,CAAwB8G,cAAxB,GAAyC,UAASb,EAAT,EAAa;AACpD;AACA,SAAQ,KAAKC,IAAL,IAAa,KAAKA,IAAL,CAAUD,EAAV,CAAb,IAA8B,KAAKC,IAAL,CAAUD,EAAV,EAAchE,MAAd,GAAuB,CAArD,GAAyD,KAAKiE,IAAL,CAAUD,EAAV,EAAc,CAAd,CAAzD,GAA4E,IAApF;AACD,CAHD","sourcesContent":["var core         = require(\"../level1/core\");\nvar defineGetter = require('../utils').defineGetter;\nvar defineSetter = require('../utils').defineSetter;\nvar memoizeQuery = require('../utils').memoizeQuery;\nvar validateQname = require('../living/helpers/validate-names').qname;\nvar validateAndExtract = require('../living/helpers/validate-names').validateAndExtract;\n\ncore.NamedNodeMap.prototype.getNamedItemNS = function(/* string */ namespaceURI,\n                                                      /* string */ localName)\n{\n  if (this._nsStore[namespaceURI] && this._nsStore[namespaceURI][localName]) {\n    return this._nsStore[namespaceURI][localName];\n  }\n  return null;\n};\n\ncore.NamedNodeMap.prototype.setNamedItemNS = function(/* Node */ arg)\n{\n  if (this._readonly) {\n    throw new core.DOMException(core.NO_MODIFICATION_ALLOWED_ERR);\n  }\n\n  if (this._ownerDocument !== arg.ownerDocument) {\n    throw new core.DOMException(core.WRONG_DOCUMENT_ERR);\n  }\n\n  if (arg._ownerElement) {\n    throw new core.DOMException(core.INUSE_ATTRIBUTE_ERR);\n  }\n\n  // readonly\n  if (this._readonly === true) {\n    throw new core.DOMException(core.NO_MODIFICATION_ALLOWED_ERR);\n  }\n\n\n  if (!this._nsStore[arg.namespaceURI]) {\n    this._nsStore[arg.namespaceURI] = {};\n  }\n  var existing = null;\n  if (this._nsStore[arg.namespaceURI][arg.localName]) {\n    var existing = this._nsStore[arg.namespaceURI][arg.localName];\n  }\n\n  this._nsStore[arg.namespaceURI][arg.localName] = arg;\n\n  arg._ownerDocument = this._ownerDocument;\n\n  return this.setNamedItem(arg);\n};\n\ncore.NamedNodeMap.prototype.removeNamedItemNS = function(/*string */ namespaceURI,\n                                                         /* string */ localName)\n{\n\n  if (this.readonly) {\n    throw new core.DOMException(core.NO_MODIFICATION_ALLOWED_ERR);\n  }\n\n\n  var parent = this._parentNode,\n      found = null,\n      defaults,\n      clone,\n      defaultEl,\n      defaultAttr;\n\n  if (this._nsStore[namespaceURI] &&\n      this._nsStore[namespaceURI][localName])\n  {\n    found = this._nsStore[namespaceURI][localName];\n    this.removeNamedItem(found.qualifiedName);\n    delete this._nsStore[namespaceURI][localName];\n  }\n\n  if (!found) {\n    throw new core.DOMException(core.NOT_FOUND_ERR);\n  }\n\n  return found;\n};\n\ncore.NamedNodeMap.prototype._map = function(fn) {\n  var ret = [], l = this.length, i = 0, node;\n  for(i; i<l; i++) {\n    node = this.item(i);\n    if (fn && fn(node)) {\n      ret.push(node);\n    }\n  }\n  return ret;\n};\n\ncore.Element.prototype.getAttribute = function(/* string */ name)\n{\n  var attr =  this.getAttributeNode(name);\n  return attr && attr.value;\n};\n\ncore.Element.prototype.getAttributeNode = function(/* string */ name)\n{\n  return this._attributes.$getNoNS(name);\n};\n\ncore.Element.prototype.removeAttribute = function(/* string */ name)\n{\n  return this._attributes.$removeNoNS(name);\n};\n\ncore.Element.prototype.getAttributeNS = function(/* string */ namespaceURI,\n                                                 /* string */ localName)\n{\n  if (namespaceURI === \"\") {\n    namespaceURI = null;\n  }\n\n  var attr =  this._attributes.$getNode(namespaceURI, localName);\n  return attr && attr.value;\n};\n\ncore.Element.prototype.setAttribute = function(/* string */ name,\n                                               /* string */ value)\n{\n  this._attributes.$setNoNS(name, value);\n};\n\ncore.Element.prototype._setAttributeNoValidation = function (name, value) {\n  this._attributes.$setNoNS(name, value, true);\n};\n\ncore.Element.prototype.setAttributeNS = function (namespace, name, value) {\n  namespace = namespace !== null ? String(namespace) : namespace;\n  name = String(name);\n  value = String(value);\n\n  var extracted = validateAndExtract(namespace, name, core);\n\n  this._attributes.$set(extracted.localName, value, extracted.qualifiedName, extracted.prefix, extracted.namespace);\n};\n\ncore.Element.prototype.removeAttributeNS = function(/* string */ namespaceURI,\n                                                    /* string */ localName)\n{\n  if (namespaceURI === \"\") {\n    namespaceURI = null;\n  }\n\n  this._attributes.$remove(namespaceURI, localName);\n};\n\ncore.Element.prototype.getAttributeNodeNS = function(/* string */ namespaceURI,\n                                                     /* string */ localName)\n{\n  if (namespaceURI === \"\") {\n    namespaceURI = null;\n  }\n\n  return this._attributes.$getNode(namespaceURI, localName);\n};\n\ncore.Element.prototype.setAttributeNodeNS = function(/* Attr */ newAttr)\n{\n  if (newAttr.ownerElement) {\n    throw new core.DOMException(core.INUSE_ATTRIBUTE_ERR);\n  }\n\n  return this._attributes.$setNode(newAttr);\n};\n\ncore.Element.prototype.getElementsByTagNameNS = memoizeQuery(function(/* String */ namespaceURI,\n                                                         /* String */ localName)\n{\n  var nsPrefixCache = {};\n\n  function filterByTagName(child) {\n    var localMatch = child.localName === localName,\n        nsMatch    = child.namespaceURI === namespaceURI;\n\n    if ((localMatch || localName === \"*\") &&\n        (nsMatch || namespaceURI === \"*\"))\n    {\n      if (child.nodeType === child.ELEMENT_NODE) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  return new core.NodeList(this.ownerDocument || this,\n                           core.mapper(this, filterByTagName));\n});\n\ncore.Element.prototype.hasAttribute = function(/* string */name)\n{\n  if (!this._attributes) {\n    return false;\n  }\n\n  // Note: you might think you only need the latter condition. However, it makes a test case fail.\n  // HOWEVER, that test case is for a XML DTD feature called \"default attributes\" that never was implemented by\n  // browsers, so when we remove default attributes, we should be able to fix this code too.\n  return !!this._attributes.$getNoNS(name) || !!this._attributes.$getNoNS(name.toLowerCase());\n};\n\ncore.Element.prototype.hasAttributeNS = function(/* string */namespaceURI,\n                                                 /* string */localName)\n{\n  if (namespaceURI === \"\") {\n    namespaceURI = null;\n  }\n\n  return (this._attributes.getNamedItemNS(namespaceURI, localName) ||\n          this.hasAttribute(localName));\n};\n\ncore.Document.prototype.importNode = function(/* Node */ importedNode,\n                                              /* bool */ deep)\n{\n  if (importedNode && importedNode.nodeType) {\n    if (importedNode.nodeType === this.DOCUMENT_NODE ||\n        importedNode.nodeType === this.DOCUMENT_TYPE_NODE) {\n      throw new core.DOMException(core.NOT_SUPPORTED_ERR);\n    }\n  }\n\n  var self = this,\n      newNode = importedNode.cloneNode(deep, function(a, b) {\n        b._prefix        = a._prefix;\n        b._namespaceURI  = a._namespaceURI;\n        b._localName     = a._localName;\n      });\n\n  function lastChance(el) {\n    var attr, defaultEl, i, len;\n\n    el._ownerDocument = self;\n    if (el.id) {\n      if (!self._ids) {self._ids = {};}\n      if (!self._ids[el.id]) {self._ids[el.id] = [];}\n      self._ids[el.id].push(el);\n    }\n    if (el._attributes) {\n      var drop = [];\n      el._attributes._ownerDocument = self;\n      for (i=0,len=el._attributes.length; i < len; i++) {\n        attr = el._attributes[i];\n        attr._ownerDocument = self;\n      }\n\n      // Remove obsolete default nodes.\n      for(i = 0; i < drop.length; ++i) {\n        el._attributes.$removeNode(drop[i]);\n      }\n\n    }\n  }\n\n  if (deep) {\n    core.visitTree(newNode, lastChance);\n  }\n  else {\n    lastChance(newNode);\n  }\n\n  return newNode;\n};\n\ncore.Document.prototype.createElementNS = function (namespace, qualifiedName) {\n  namespace = namespace !== null ? String(namespace) : namespace;\n  qualifiedName = String(qualifiedName);\n\n  var extracted = validateAndExtract(namespace, qualifiedName, core);\n  var element = this.createElement(extracted.localName);\n  element._namespaceURI = extracted.namespace;\n  element._prefix = extracted.prefix;\n\n  return element;\n};\n\ncore.Document.prototype.createAttributeNS = function (namespace, qualifiedName) {\n  namespace = namespace !== null ? String(namespace) : namespace;\n  qualifiedName = String(qualifiedName);\n\n  var extracted = validateAndExtract(namespace, qualifiedName, core);\n  attribute = this.createAttribute(extracted.qualifiedName);\n\n  attribute._namespaceURI = extracted.namespace;\n  attribute._prefix = extracted.prefix;\n  attribute._localName = extracted.localName;\n  attribute._name = extracted.qualifiedName;\n\n  return attribute;\n};\n\ncore.Document.prototype.getElementsByTagNameNS = function(/* String */ namespaceURI,\n                                                          /* String */ localName)\n{\n  return core.Element.prototype.getElementsByTagNameNS.call(this,\n                                                            namespaceURI,\n                                                            localName);\n};\n\ncore.Document.prototype.getElementById = function(id) {\n  // return the first element\n  return (this._ids && this._ids[id] && this._ids[id].length > 0 ? this._ids[id][0] : null);\n};\n"]},"metadata":{},"sourceType":"script"}