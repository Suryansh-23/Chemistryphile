{"ast":null,"code":"var core = require(\"../level1/core\"),\n    defineGetter = require('../utils').defineGetter,\n    defineSetter = require('../utils').defineSetter,\n    HtmlToDom = require('../browser/htmltodom').HtmlToDom,\n    domToHtml = require('../browser/domtohtml').domToHtml;\n/*\n  valuetype DOMString sequence<unsigned short>;\n  typedef   unsigned long long DOMTimeStamp;\n  typedef   any DOMUserData;\n  typedef   Object DOMObject;\n\n*/\n// ExceptionCode\n\n\ncore.VALIDATION_ERR = 16;\ncore.TYPE_MISMATCH_ERR = 17;\n/*\n  // Introduced in DOM Level 3:\n  interface NameList {\n    DOMString          getName(in unsigned long index);\n    DOMString          getNamespaceURI(in unsigned long index);\n    readonly attribute unsigned long   length;\n    boolean            contains(in DOMString str);\n    boolean            containsNS(in DOMString namespaceURI,\n                                  in DOMString name);\n  };\n\n  // Introduced in DOM Level 3:\n  interface DOMImplementationList {\n    DOMImplementation  item(in unsigned long index);\n    readonly attribute unsigned long   length;\n  };\n\n  // Introduced in DOM Level 3:\n  interface DOMImplementationSource {\n    DOMImplementation  getDOMImplementation(in DOMString features);\n    DOMImplementationList getDOMImplementationList(in DOMString features);\n  };\n*/\n\ncore.DOMImplementation.prototype.getFeature = function (feature, version) {};\n/*\n  interface Node {\n    // Modified in DOM Level 3:\n    Node               insertBefore(in Node newChild,\n                                    in Node refChild)\n                                        raises(DOMException);\n    // Modified in DOM Level 3:\n    Node               replaceChild(in Node newChild,\n                                    in Node oldChild)\n                                        raises(DOMException);\n    // Modified in DOM Level 3:\n    Node               removeChild(in Node oldChild)\n                                        raises(DOMException);\n    // Modified in DOM Level 3:\n    Node               appendChild(in Node newChild)\n                                        raises(DOMException);\n    boolean            hasChildNodes();\n    Node               cloneNode(in boolean deep);\n    // Modified in DOM Level 3:\n    void               normalize();\n    // Introduced in DOM Level 3:\n    readonly attribute DOMString       baseURI;\n*/\n// Compare Document Position\n\n\nvar DOCUMENT_POSITION_DISCONNECTED = core.Node.DOCUMENT_POSITION_DISCONNECTED = core.Node.prototype.DOCUMENT_POSITION_DISCONNECTED = 0x01;\nvar DOCUMENT_POSITION_PRECEDING = core.Node.DOCUMENT_POSITION_PRECEDING = core.Node.prototype.DOCUMENT_POSITION_PRECEDING = 0x02;\nvar DOCUMENT_POSITION_FOLLOWING = core.Node.DOCUMENT_POSITION_FOLLOWING = core.Node.prototype.DOCUMENT_POSITION_FOLLOWING = 0x04;\nvar DOCUMENT_POSITION_CONTAINS = core.Node.DOCUMENT_POSITION_CONTAINS = core.Node.prototype.DOCUMENT_POSITION_CONTAINS = 0x08;\nvar DOCUMENT_POSITION_CONTAINED_BY = core.Node.DOCUMENT_POSITION_CONTAINED_BY = core.Node.prototype.DOCUMENT_POSITION_CONTAINED_BY = 0x10;\nvar DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = core.Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = core.Node.prototype.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 0x20;\nvar DOCUMENT_TYPE_NODE = core.Node.prototype.DOCUMENT_TYPE_NODE;\n\ncore.Node.prototype.compareDocumentPosition = function compareDocumentPosition(otherNode) {\n  if (!(otherNode instanceof core.Node)) {\n    throw Error(\"Comparing position against non-Node values is not allowed\");\n  }\n\n  var thisOwner, otherOwner;\n  if (this.nodeType === this.DOCUMENT_NODE) thisOwner = this;else thisOwner = this.ownerDocument;\n  if (otherNode.nodeType === this.DOCUMENT_NODE) otherOwner = otherNode;else otherOwner = otherNode.ownerDocument;\n  if (this === otherNode) return 0;\n  if (this === otherNode.ownerDocument) return DOCUMENT_POSITION_FOLLOWING + DOCUMENT_POSITION_CONTAINED_BY;\n  if (this.ownerDocument === otherNode) return DOCUMENT_POSITION_PRECEDING + DOCUMENT_POSITION_CONTAINS;\n  if (thisOwner !== otherOwner) return DOCUMENT_POSITION_DISCONNECTED; // Text nodes for attributes does not have a _parentNode. So we need to find them as attribute child.\n\n  if (this.nodeType === this.ATTRIBUTE_NODE && this._childNodes && this._childNodes.indexOf(otherNode) !== -1) return DOCUMENT_POSITION_FOLLOWING + DOCUMENT_POSITION_CONTAINED_BY;\n  if (otherNode.nodeType === this.ATTRIBUTE_NODE && otherNode._childNodes && otherNode._childNodes.indexOf(this) !== -1) return DOCUMENT_POSITION_PRECEDING + DOCUMENT_POSITION_CONTAINS;\n  var point = this;\n  var parents = [];\n  var previous = null;\n\n  while (point) {\n    if (point == otherNode) return DOCUMENT_POSITION_PRECEDING + DOCUMENT_POSITION_CONTAINS;\n    parents.push(point);\n    point = point._parentNode;\n  }\n\n  point = otherNode;\n  previous = null;\n\n  while (point) {\n    if (point == this) return DOCUMENT_POSITION_FOLLOWING + DOCUMENT_POSITION_CONTAINED_BY;\n    var location_index = parents.indexOf(point);\n\n    if (location_index !== -1) {\n      var smallest_common_ancestor = parents[location_index];\n\n      var this_index = smallest_common_ancestor._childNodes.indexOf(parents[location_index - 1]);\n\n      var other_index = smallest_common_ancestor._childNodes.indexOf(previous);\n\n      if (this_index > other_index) {\n        return DOCUMENT_POSITION_PRECEDING;\n      } else {\n        return DOCUMENT_POSITION_FOLLOWING;\n      }\n    }\n\n    previous = point;\n    point = point._parentNode;\n  }\n\n  return DOCUMENT_POSITION_DISCONNECTED;\n};\n/*\n    // Introduced in DOM Level 3:\n             attribute DOMString       textContent;\n                                        // raises(DOMException) on setting\n                                        // raises(DOMException) on retrieval\n*/\n\n\ncore.Node.prototype.isSameNode = function (other) {\n  return other === this;\n}; // @see http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#Node3-textContent\n\n\ndefineGetter(core.Node.prototype, 'textContent', function () {\n  switch (this.nodeType) {\n    case this.COMMENT_NODE:\n    case this.CDATA_SECTION_NODE:\n    case this.PROCESSING_INSTRUCTION_NODE:\n    case this.TEXT_NODE:\n      return this.nodeValue;\n\n    case this.ATTRIBUTE_NODE:\n    case this.DOCUMENT_FRAGMENT_NODE:\n    case this.ELEMENT_NODE:\n      var out = '';\n\n      for (var i = 0; i < this._childNodes.length; ++i) {\n        if (this._childNodes[i].nodeType !== this.COMMENT_NODE && this._childNodes[i].nodeType !== this.PROCESSING_INSTRUCTION_NODE) {\n          out += this._childNodes[i].textContent || '';\n        }\n      }\n\n      return out;\n\n    default:\n      return null;\n  }\n});\ndefineSetter(core.Node.prototype, 'textContent', function (txt) {\n  switch (this.nodeType) {\n    case this.COMMENT_NODE:\n    case this.CDATA_SECTION_NODE:\n    case this.PROCESSING_INSTRUCTION_NODE:\n    case this.TEXT_NODE:\n      return this.nodeValue = String(txt);\n  }\n\n  for (var i = this._childNodes.length; --i >= 0;) {\n    this.removeChild(this._childNodes[i]);\n  }\n\n  if (txt !== \"\" && txt != null) {\n    this.appendChild(this._ownerDocument.createTextNode(txt));\n  }\n\n  return txt;\n});\n/*\n    // Introduced in DOM Level 3:\n    DOMString          lookupPrefix(in DOMString namespaceURI);\n    // Introduced in DOM Level 3:\n    boolean            isDefaultNamespace(in DOMString namespaceURI);\n    // Introduced in DOM Level 3:\n    DOMString          lookupNamespaceURI(in DOMString prefix);\n*/\n// Introduced in DOM Level 3:\n\ncore.Node.prototype.isEqualNode = function (other) {\n  var self = this;\n\n  var diffValues = function () {\n    for (var i = 0; i < arguments.length; i++) {\n      var k = arguments[i];\n      if (self[k] != other[k]) return true;\n    }\n\n    return false;\n  };\n\n  var diffNamedNodeMaps = function (snnm, onnm) {\n    if (snnm == null && onnm == null) return false;\n    if (snnm == null || onnm == null) return true;\n    if (snnm.length != onnm.length) return true;\n    var js = [];\n\n    for (var j = 0; j < onnm.length; j++) {\n      js[j] = j;\n    }\n\n    for (var i = 0; i < snnm.length; i++) {\n      var found = false;\n\n      for (var j = 0; j < js.length; j++) {\n        if (snnm.item(i).isEqualNode(onnm.item(js[j]))) {\n          found = true; // in order to be 100% accurate, we remove index values from consideration once they've matched\n\n          js.splice(j, 1);\n          break;\n        }\n      }\n\n      if (!found) return true;\n    }\n\n    return false;\n  };\n\n  var diffNodeLists = function (snl, onl) {\n    if (snl == null && onl == null) return false;\n    if (snl == null || onl == null) return true;\n    if (snl.length != onl.length) return true;\n\n    for (var i = 0; i < snl.length; i++) {\n      if (!snl.item(i).isEqualNode(onl.item(i))) return true;\n    }\n\n    return false;\n  };\n\n  if (!other) return false;\n  if (this.isSameNode(other)) return true;\n  if (this.nodeType != other.nodeType) return false;\n  if (diffValues('nodeName', 'localName', 'namespaceURI', 'prefix', 'nodeValue')) return false;\n  if (diffNamedNodeMaps(this.attributes, other.attributes)) return false;\n  if (diffNodeLists(this._childNodes, other._childNodes)) return false;\n\n  if (this.nodeType == DOCUMENT_TYPE_NODE) {\n    if (diffValues('publicId', 'systemId', 'internalSubset')) return false;\n    if (diffNamedNodeMaps(this.entities, other.entities)) return false;\n    if (diffNamedNodeMaps(this.notations, other.notations)) return false;\n  }\n\n  return true;\n};\n/*\n    // Introduced in DOM Level 3:\n    DOMObject          getFeature(in DOMString feature,\n                                  in DOMString version);\n*/\n// Introduced in DOM Level 3:\n\n\ncore.Node.prototype.setUserData = function (key, data, handler) {\n  var r = this[key] || null;\n  this[key] = data;\n  return r;\n}; // Introduced in DOM Level 3:\n\n\ncore.Node.prototype.getUserData = function (key) {\n  var r = this[key] || null;\n  return r;\n};\n/*\n  interface NodeList {\n    Node               item(in unsigned long index);\n    readonly attribute unsigned long   length;\n  };\n\n  interface NamedNodeMap {\n    Node               getNamedItem(in DOMString name);\n    Node               setNamedItem(in Node arg)\n                                        raises(DOMException);\n    Node               removeNamedItem(in DOMString name)\n                                        raises(DOMException);\n    Node               item(in unsigned long index);\n    readonly attribute unsigned long   length;\n    // Introduced in DOM Level 2:\n    Node               getNamedItemNS(in DOMString namespaceURI,\n                                      in DOMString localName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    Node               setNamedItemNS(in Node arg)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    Node               removeNamedItemNS(in DOMString namespaceURI,\n                                         in DOMString localName)\n                                        raises(DOMException);\n  };\n\n  interface CharacterData : Node {\n             attribute DOMString       data;\n                                        // raises(DOMException) on setting\n                                        // raises(DOMException) on retrieval\n\n    readonly attribute unsigned long   length;\n    DOMString          substringData(in unsigned long offset,\n                                     in unsigned long count)\n                                        raises(DOMException);\n    void               appendData(in DOMString arg)\n                                        raises(DOMException);\n    void               insertData(in unsigned long offset,\n                                  in DOMString arg)\n                                        raises(DOMException);\n    void               deleteData(in unsigned long offset,\n                                  in unsigned long count)\n                                        raises(DOMException);\n    void               replaceData(in unsigned long offset,\n                                   in unsigned long count,\n                                   in DOMString arg)\n                                        raises(DOMException);\n  };\n\n  interface Attr : Node {\n    readonly attribute DOMString       name;\n    readonly attribute boolean         specified;\n             attribute DOMString       value;\n                                        // raises(DOMException) on setting\n\n    // Introduced in DOM Level 2:\n    readonly attribute Element         ownerElement;\n    // Introduced in DOM Level 3:\n    readonly attribute TypeInfo        schemaTypeInfo;\n\n*/\n// Introduced in DOM Level 3:\n\n\ndefineGetter(core.Attr.prototype, 'isId', function () {\n  return this.name.toLowerCase() === 'id';\n});\n/*\n  };\n\n  interface Element : Node {\n    readonly attribute DOMString       tagName;\n    DOMString          getAttribute(in DOMString name);\n    void               setAttribute(in DOMString name,\n                                    in DOMString value)\n                                        raises(DOMException);\n    void               removeAttribute(in DOMString name)\n                                        raises(DOMException);\n    Attr               getAttributeNode(in DOMString name);\n    Attr               setAttributeNode(in Attr newAttr)\n                                        raises(DOMException);\n    Attr               removeAttributeNode(in Attr oldAttr)\n                                        raises(DOMException);\n    NodeList           getElementsByTagName(in DOMString name);\n    // Introduced in DOM Level 2:\n    DOMString          getAttributeNS(in DOMString namespaceURI,\n                                      in DOMString localName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    void               setAttributeNS(in DOMString namespaceURI,\n                                      in DOMString qualifiedName,\n                                      in DOMString value)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    void               removeAttributeNS(in DOMString namespaceURI,\n                                         in DOMString localName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    Attr               getAttributeNodeNS(in DOMString namespaceURI,\n                                          in DOMString localName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    Attr               setAttributeNodeNS(in Attr newAttr)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    NodeList           getElementsByTagNameNS(in DOMString namespaceURI,\n                                              in DOMString localName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    boolean            hasAttribute(in DOMString name);\n    // Introduced in DOM Level 2:\n    boolean            hasAttributeNS(in DOMString namespaceURI,\n                                      in DOMString localName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 3:\n    readonly attribute TypeInfo        schemaTypeInfo;\n    // Introduced in DOM Level 3:\n    void               setIdAttribute(in DOMString name,\n                                      in boolean isId)\n                                        raises(DOMException);\n    // Introduced in DOM Level 3:\n    void               setIdAttributeNS(in DOMString namespaceURI,\n                                        in DOMString localName,\n                                        in boolean isId)\n                                        raises(DOMException);\n    // Introduced in DOM Level 3:\n    void               setIdAttributeNode(in Attr idAttr,\n                                          in boolean isId)\n                                        raises(DOMException);\n  };\n\n  interface Text : CharacterData {\n    Text               splitText(in unsigned long offset)\n                                        raises(DOMException);\n    // Introduced in DOM Level 3:\n    readonly attribute boolean         isElementContentWhitespace;\n    // Introduced in DOM Level 3:\n    readonly attribute DOMString       wholeText;\n    // Introduced in DOM Level 3:\n    Text               replaceWholeText(in DOMString content)\n                                        raises(DOMException);\n  };\n\n  interface Comment : CharacterData {\n  };\n\n  // Introduced in DOM Level 3:\n  interface TypeInfo {\n    readonly attribute DOMString       typeName;\n    readonly attribute DOMString       typeNamespace;\n\n    // DerivationMethods\n    const unsigned long       DERIVATION_RESTRICTION         = 0x00000001;\n    const unsigned long       DERIVATION_EXTENSION           = 0x00000002;\n    const unsigned long       DERIVATION_UNION               = 0x00000004;\n    const unsigned long       DERIVATION_LIST                = 0x00000008;\n\n    boolean            isDerivedFrom(in DOMString typeNamespaceArg,\n                                     in DOMString typeNameArg,\n                                     in unsigned long derivationMethod);\n  };\n*/\n// Introduced in DOM Level 3:\n\ncore.UserDataHandler = function () {};\n\ncore.UserDataHandler.prototype.NODE_CLONED = 1;\ncore.UserDataHandler.prototype.NODE_IMPORTED = 2;\ncore.UserDataHandler.prototype.NODE_DELETED = 3;\ncore.UserDataHandler.prototype.NODE_RENAMED = 4;\ncore.UserDataHandler.prototype.NODE_ADOPTED = 5;\n\ncore.UserDataHandler.prototype.handle = function (operation, key, data, src, dst) {}; // Introduced in DOM Level 3:\n\n\ncore.DOMError = function (severity, message, type, relatedException, relatedData, location) {\n  this._severity = severity;\n  this._message = message;\n  this._type = type;\n  this._relatedException = relatedException;\n  this._relatedData = relatedData;\n  this._location = location;\n};\n\ncore.DOMError.prototype = {};\ncore.DOMError.prototype.SEVERITY_WARNING = 1;\ncore.DOMError.prototype.SEVERITY_ERROR = 2;\ncore.DOMError.prototype.SEVERITY_FATAL_ERROR = 3;\ndefineGetter(core.DOMError.prototype, 'severity', function () {\n  return this._severity;\n});\ndefineGetter(core.DOMError.prototype, 'message', function () {\n  return this._message;\n});\ndefineGetter(core.DOMError.prototype, 'type', function () {\n  return this._type;\n});\ndefineGetter(core.DOMError.prototype, 'relatedException', function () {\n  return this._relatedException;\n});\ndefineGetter(core.DOMError.prototype, 'relatedData', function () {\n  return this._relatedData;\n});\ndefineGetter(core.DOMError.prototype, 'location', function () {\n  return this._location;\n});\n/*\n  // Introduced in DOM Level 3:\n  interface DOMErrorHandler {\n    boolean            handleError(in DOMError error);\n  };\n\n  // Introduced in DOM Level 3:\n  interface DOMLocator {\n    readonly attribute long            lineNumber;\n    readonly attribute long            columnNumber;\n    readonly attribute long            byteOffset;\n    readonly attribute long            utf16Offset;\n    readonly attribute Node            relatedNode;\n    readonly attribute DOMString       uri;\n  };\n*/\n// Introduced in DOM Level 3:\n\ncore.DOMConfiguration = function () {\n  var possibleParameterNames = {\n    'canonical-form': [false, true],\n    // extra rules for true\n    'cdata-sections': [true, false],\n    'check-character-normalization': [false, true],\n    'comments': [true, false],\n    'datatype-normalization': [false, true],\n    'element-content-whitespace': [true, false],\n    'entities': [true, false],\n    // 'error-handler': [],\n    'infoset': [undefined, true, false],\n    // extra rules for true\n    'namespaces': [true, false],\n    'namespace-declarations': [true, false],\n    // only checked if namespaces is true\n    'normalize-characters': [false, true],\n    // 'schema-location': [],\n    // 'schema-type': [],\n    'split-cdata-sections': [true, false],\n    'validate': [false, true],\n    'validate-if-schema': [false, true],\n    'well-formed': [true, false]\n  };\n};\n\ncore.DOMConfiguration.prototype = {\n  setParameter: function (name, value) {},\n  getParameter: function (name) {},\n  canSetParameter: function (name, value) {},\n  parameterNames: function () {}\n}; //core.Document.prototype._domConfig = new core.DOMConfiguration();\n\ndefineGetter(core.Document.prototype, 'domConfig', function () {\n  return this._domConfig || new core.DOMConfiguration();\n  ;\n}); // Introduced in DOM Level 3:\n\ncore.DOMStringList = function () {};\n\ncore.DOMStringList.prototype = {\n  item: function () {},\n  length: function () {},\n  contains: function () {}\n};\n/*\n  interface CDATASection : Text {\n  };\n\n  interface DocumentType : Node {\n    readonly attribute DOMString       name;\n    readonly attribute NamedNodeMap    entities;\n    readonly attribute NamedNodeMap    notations;\n    // Introduced in DOM Level 2:\n    readonly attribute DOMString       publicId;\n    // Introduced in DOM Level 2:\n    readonly attribute DOMString       systemId;\n    // Introduced in DOM Level 2:\n    readonly attribute DOMString       internalSubset;\n  };\n\n  interface Notation : Node {\n    readonly attribute DOMString       publicId;\n    readonly attribute DOMString       systemId;\n  };\n\n  interface Entity : Node {\n    readonly attribute DOMString       publicId;\n    readonly attribute DOMString       systemId;\n    readonly attribute DOMString       notationName;\n    // Introduced in DOM Level 3:\n    readonly attribute DOMString       inputEncoding;\n    // Introduced in DOM Level 3:\n    readonly attribute DOMString       xmlEncoding;\n    // Introduced in DOM Level 3:\n    readonly attribute DOMString       xmlVersion;\n  };\n\n  interface EntityReference : Node {\n  };\n\n  interface ProcessingInstruction : Node {\n    readonly attribute DOMString       target;\n             attribute DOMString       data;\n                                        // raises(DOMException) on setting\n\n  };\n\n  interface DocumentFragment : Node {\n  };\n\n  interface Document : Node {\n    // Modified in DOM Level 3:\n    readonly attribute DocumentType    doctype;\n    readonly attribute DOMImplementation implementation;\n    readonly attribute Element         documentElement;\n    Element            createElement(in DOMString tagName)\n                                        raises(DOMException);\n    DocumentFragment   createDocumentFragment();\n    Text               createTextNode(in DOMString data);\n    Comment            createComment(in DOMString data);\n    CDATASection       createCDATASection(in DOMString data)\n                                        raises(DOMException);\n    ProcessingInstruction createProcessingInstruction(in DOMString target,\n                                                      in DOMString data)\n                                        raises(DOMException);\n    Attr               createAttribute(in DOMString name)\n                                        raises(DOMException);\n    EntityReference    createEntityReference(in DOMString name)\n                                        raises(DOMException);\n    NodeList           getElementsByTagName(in DOMString tagname);\n    // Introduced in DOM Level 2:\n    Node               importNode(in Node importedNode,\n                                  in boolean deep)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    Element            createElementNS(in DOMString namespaceURI,\n                                       in DOMString qualifiedName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    Attr               createAttributeNS(in DOMString namespaceURI,\n                                         in DOMString qualifiedName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    NodeList           getElementsByTagNameNS(in DOMString namespaceURI,\n                                              in DOMString localName);\n    // Introduced in DOM Level 2:\n    Element            getElementById(in DOMString elementId);\n*/\n\n/*\n    // Introduced in DOM Level 3:\n    readonly attribute DOMString       xmlEncoding;\n    // Introduced in DOM Level 3:\n             attribute boolean         xmlStandalone;\n                                        // raises(DOMException) on setting\n\n    // Introduced in DOM Level 3:\n             attribute DOMString       xmlVersion;\n                                        // raises(DOMException) on setting\n\n    // Introduced in DOM Level 3:\n             attribute boolean         strictErrorChecking;\n    // Introduced in DOM Level 3:\n             attribute DOMString       documentURI;\n    // Introduced in DOM Level 3:\n    Node               adoptNode(in Node source)\n                                        raises(DOMException);\n    // Introduced in DOM Level 3:\n    readonly attribute DOMConfiguration domConfig;\n    // Introduced in DOM Level 3:\n    void               normalizeDocument();\n    // Introduced in DOM Level 3:\n    Node               renameNode(in Node n,\n                                  in DOMString namespaceURI,\n                                  in DOMString qualifiedName)\n                                        raises(DOMException);\n  };\n};\n\n#endif // _DOM_IDL_\n*/","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/lib/jsdom/level3/core.js"],"names":["core","require","defineGetter","defineSetter","HtmlToDom","domToHtml","VALIDATION_ERR","TYPE_MISMATCH_ERR","DOMImplementation","prototype","getFeature","feature","version","DOCUMENT_POSITION_DISCONNECTED","Node","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINS","DOCUMENT_POSITION_CONTAINED_BY","DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC","DOCUMENT_TYPE_NODE","compareDocumentPosition","otherNode","Error","thisOwner","otherOwner","nodeType","DOCUMENT_NODE","ownerDocument","ATTRIBUTE_NODE","_childNodes","indexOf","point","parents","previous","push","_parentNode","location_index","smallest_common_ancestor","this_index","other_index","isSameNode","other","COMMENT_NODE","CDATA_SECTION_NODE","PROCESSING_INSTRUCTION_NODE","TEXT_NODE","nodeValue","DOCUMENT_FRAGMENT_NODE","ELEMENT_NODE","out","i","length","textContent","txt","String","removeChild","appendChild","_ownerDocument","createTextNode","isEqualNode","self","diffValues","arguments","k","diffNamedNodeMaps","snnm","onnm","js","j","found","item","splice","diffNodeLists","snl","onl","attributes","entities","notations","setUserData","key","data","handler","r","getUserData","Attr","name","toLowerCase","UserDataHandler","NODE_CLONED","NODE_IMPORTED","NODE_DELETED","NODE_RENAMED","NODE_ADOPTED","handle","operation","src","dst","DOMError","severity","message","type","relatedException","relatedData","location","_severity","_message","_type","_relatedException","_relatedData","_location","SEVERITY_WARNING","SEVERITY_ERROR","SEVERITY_FATAL_ERROR","DOMConfiguration","possibleParameterNames","undefined","setParameter","value","getParameter","canSetParameter","parameterNames","Document","_domConfig","DOMStringList","contains"],"mappings":"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C,CAOA;;AACAvH,YAAY,CAACF,IAAI,CAAC0H,QAAL,CAAcjH,SAAf,EAA0B,WAA1B,EAAuC,YAAW;AAC5D,SAAO,KAAKkH,UAAL,IAAmB,IAAI3H,IAAI,CAACkH,gBAAT,EAA1B;AAAsD;AACvD,CAFW,CAAZ,C,CAIA;;AACAlH,IAAI,CAAC4H,aAAL,GAAqB,YAAW,CAAE,CAAlC;;AAEA5H,IAAI,CAAC4H,aAAL,CAAmBnH,SAAnB,GAA+B;AAC7B8D,EAAAA,IAAI,EAAE,YAAW,CAAE,CADU;AAE7BnB,EAAAA,MAAM,EAAE,YAAW,CAAE,CAFQ;AAG7ByE,EAAAA,QAAQ,EAAE,YAAW,CAAE;AAHM,CAA/B;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["var core          = require(\"../level1/core\"),\n    defineGetter  = require('../utils').defineGetter,\n    defineSetter  = require('../utils').defineSetter,\n    HtmlToDom     = require('../browser/htmltodom').HtmlToDom,\n    domToHtml     = require('../browser/domtohtml').domToHtml;\n\n/*\n  valuetype DOMString sequence<unsigned short>;\n  typedef   unsigned long long DOMTimeStamp;\n  typedef   any DOMUserData;\n  typedef   Object DOMObject;\n\n*/\n// ExceptionCode\ncore.VALIDATION_ERR                 = 16;\ncore.TYPE_MISMATCH_ERR              = 17;\n\n/*\n  // Introduced in DOM Level 3:\n  interface NameList {\n    DOMString          getName(in unsigned long index);\n    DOMString          getNamespaceURI(in unsigned long index);\n    readonly attribute unsigned long   length;\n    boolean            contains(in DOMString str);\n    boolean            containsNS(in DOMString namespaceURI,\n                                  in DOMString name);\n  };\n\n  // Introduced in DOM Level 3:\n  interface DOMImplementationList {\n    DOMImplementation  item(in unsigned long index);\n    readonly attribute unsigned long   length;\n  };\n\n  // Introduced in DOM Level 3:\n  interface DOMImplementationSource {\n    DOMImplementation  getDOMImplementation(in DOMString features);\n    DOMImplementationList getDOMImplementationList(in DOMString features);\n  };\n*/\n\n\ncore.DOMImplementation.prototype.getFeature = function(feature, version)  {\n\n};\n\n/*\n  interface Node {\n    // Modified in DOM Level 3:\n    Node               insertBefore(in Node newChild,\n                                    in Node refChild)\n                                        raises(DOMException);\n    // Modified in DOM Level 3:\n    Node               replaceChild(in Node newChild,\n                                    in Node oldChild)\n                                        raises(DOMException);\n    // Modified in DOM Level 3:\n    Node               removeChild(in Node oldChild)\n                                        raises(DOMException);\n    // Modified in DOM Level 3:\n    Node               appendChild(in Node newChild)\n                                        raises(DOMException);\n    boolean            hasChildNodes();\n    Node               cloneNode(in boolean deep);\n    // Modified in DOM Level 3:\n    void               normalize();\n    // Introduced in DOM Level 3:\n    readonly attribute DOMString       baseURI;\n*/\n\n// Compare Document Position\nvar DOCUMENT_POSITION_DISCONNECTED = core.Node.DOCUMENT_POSITION_DISCONNECTED =\n                                     core.Node.prototype.DOCUMENT_POSITION_DISCONNECTED = 0x01;\n\nvar DOCUMENT_POSITION_PRECEDING    = core.Node.DOCUMENT_POSITION_PRECEDING =\n                                     core.Node.prototype.DOCUMENT_POSITION_PRECEDING    = 0x02;\n\nvar DOCUMENT_POSITION_FOLLOWING    = core.Node.DOCUMENT_POSITION_FOLLOWING =\n                                     core.Node.prototype.DOCUMENT_POSITION_FOLLOWING    = 0x04;\n\nvar DOCUMENT_POSITION_CONTAINS     = core.Node.DOCUMENT_POSITION_CONTAINS =\n                                     core.Node.prototype.DOCUMENT_POSITION_CONTAINS     = 0x08;\n\nvar DOCUMENT_POSITION_CONTAINED_BY = core.Node.DOCUMENT_POSITION_CONTAINED_BY =\n                                     core.Node.prototype.DOCUMENT_POSITION_CONTAINED_BY = 0x10;\n\nvar DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = core.Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC =\n                                                core.Node.prototype.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 0x20;\n\nvar DOCUMENT_TYPE_NODE = core.Node.prototype.DOCUMENT_TYPE_NODE;\n\ncore.Node.prototype.compareDocumentPosition = function compareDocumentPosition( otherNode ) {\n  if( !(otherNode instanceof core.Node) ) {\n    throw Error(\"Comparing position against non-Node values is not allowed\")\n  }\n  var thisOwner, otherOwner;\n\n  if( this.nodeType === this.DOCUMENT_NODE)\n    thisOwner = this\n  else\n    thisOwner = this.ownerDocument\n\n  if( otherNode.nodeType === this.DOCUMENT_NODE)\n    otherOwner = otherNode\n  else\n    otherOwner = otherNode.ownerDocument\n\n  if( this === otherNode ) return 0\n  if( this === otherNode.ownerDocument ) return DOCUMENT_POSITION_FOLLOWING + DOCUMENT_POSITION_CONTAINED_BY\n  if( this.ownerDocument === otherNode ) return DOCUMENT_POSITION_PRECEDING + DOCUMENT_POSITION_CONTAINS\n  if( thisOwner !== otherOwner ) return DOCUMENT_POSITION_DISCONNECTED\n\n  // Text nodes for attributes does not have a _parentNode. So we need to find them as attribute child.\n  if( this.nodeType === this.ATTRIBUTE_NODE && this._childNodes && this._childNodes.indexOf(otherNode) !== -1)\n    return DOCUMENT_POSITION_FOLLOWING + DOCUMENT_POSITION_CONTAINED_BY\n\n  if( otherNode.nodeType === this.ATTRIBUTE_NODE && otherNode._childNodes && otherNode._childNodes.indexOf(this) !== -1)\n    return DOCUMENT_POSITION_PRECEDING + DOCUMENT_POSITION_CONTAINS\n\n  var point = this\n  var parents = [ ]\n  var previous = null\n  while( point ) {\n    if( point == otherNode ) return DOCUMENT_POSITION_PRECEDING + DOCUMENT_POSITION_CONTAINS\n    parents.push( point )\n    point = point._parentNode\n  }\n  point = otherNode\n  previous = null\n  while( point ) {\n    if( point == this ) return DOCUMENT_POSITION_FOLLOWING + DOCUMENT_POSITION_CONTAINED_BY\n    var location_index = parents.indexOf( point )\n    if( location_index !== -1) {\n     var smallest_common_ancestor = parents[ location_index ]\n     var this_index = smallest_common_ancestor._childNodes.indexOf( parents[location_index - 1] )\n     var other_index = smallest_common_ancestor._childNodes.indexOf( previous )\n     if( this_index > other_index ) {\n           return DOCUMENT_POSITION_PRECEDING\n     }\n     else {\n       return DOCUMENT_POSITION_FOLLOWING\n     }\n    }\n    previous = point\n    point = point._parentNode\n  }\n  return DOCUMENT_POSITION_DISCONNECTED\n};\n/*\n    // Introduced in DOM Level 3:\n             attribute DOMString       textContent;\n                                        // raises(DOMException) on setting\n                                        // raises(DOMException) on retrieval\n*/\ncore.Node.prototype.isSameNode = function(other) {\n  return (other === this);\n};\n\n// @see http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#Node3-textContent\ndefineGetter(core.Node.prototype, 'textContent', function() {\n  switch (this.nodeType) {\n    case this.COMMENT_NODE:\n    case this.CDATA_SECTION_NODE:\n    case this.PROCESSING_INSTRUCTION_NODE:\n    case this.TEXT_NODE:\n      return this.nodeValue;\n\n    case this.ATTRIBUTE_NODE:\n    case this.DOCUMENT_FRAGMENT_NODE:\n    case this.ELEMENT_NODE:\n      var out = '';\n      for (var i = 0 ; i < this._childNodes.length ; ++i) {\n        if (this._childNodes[i].nodeType !== this.COMMENT_NODE &&\n            this._childNodes[i].nodeType !== this.PROCESSING_INSTRUCTION_NODE) {\n          out += this._childNodes[i].textContent || '';\n        }\n      }\n      return out;\n\n    default:\n      return null;\n  }\n});\n\ndefineSetter(core.Node.prototype, 'textContent', function(txt) {\n  switch (this.nodeType) {\n    case this.COMMENT_NODE:\n    case this.CDATA_SECTION_NODE:\n    case this.PROCESSING_INSTRUCTION_NODE:\n    case this.TEXT_NODE:\n      return this.nodeValue = String(txt);\n  }\n\n  for (var i = this._childNodes.length; --i >=0;) {\n    this.removeChild(this._childNodes[i]);\n  }\n  if (txt !== \"\" && txt != null) {\n    this.appendChild(this._ownerDocument.createTextNode(txt));\n  }\n  return txt;\n});\n\n/*\n    // Introduced in DOM Level 3:\n    DOMString          lookupPrefix(in DOMString namespaceURI);\n    // Introduced in DOM Level 3:\n    boolean            isDefaultNamespace(in DOMString namespaceURI);\n    // Introduced in DOM Level 3:\n    DOMString          lookupNamespaceURI(in DOMString prefix);\n*/\n// Introduced in DOM Level 3:\ncore.Node.prototype.isEqualNode = function(other) {\n  var self = this;\n  var diffValues = function() {\n    for (var i=0;i<arguments.length;i++) {\n      var k = arguments[i];\n      if (self[k] != other[k]) return(true);\n    }\n    return(false);\n  };\n  var diffNamedNodeMaps = function(snnm, onnm) {\n    if ((snnm == null) && (onnm == null)) return(false);\n    if ((snnm == null) || (onnm == null)) return(true);\n    if (snnm.length != onnm.length) return(true);\n    var js = [];\n    for (var j=0;j<onnm.length;j++) { js[j] = j }\n    for (var i=0;i<snnm.length;i++) {\n      var found=false;\n      for (var j=0;j<js.length;j++) {\n        if (snnm.item(i).isEqualNode(onnm.item(js[j]))) {\n          found = true;\n          // in order to be 100% accurate, we remove index values from consideration once they've matched\n          js.splice(j,1);\n          break;\n        }\n      }\n      if (!found) return(true);\n    }\n    return(false);\n  };\n  var diffNodeLists = function(snl, onl) {\n    if ((snl == null) && (onl == null)) return(false);\n    if ((snl == null) || (onl == null)) return(true);\n    if (snl.length != onl.length) return(true);\n    for (var i=0;i<snl.length;i++) {\n      if (!snl.item(i).isEqualNode(onl.item(i))) return(true);\n    }\n    return(false);\n  };\n  if (!other) return(false);\n  if (this.isSameNode(other)) return(true);\n  if (this.nodeType != other.nodeType) return(false);\n  if (diffValues('nodeName', 'localName', 'namespaceURI', 'prefix', 'nodeValue')) return(false);\n  if (diffNamedNodeMaps(this.attributes, other.attributes)) return(false);\n  if (diffNodeLists(this._childNodes, other._childNodes)) return(false);\n  if (this.nodeType == DOCUMENT_TYPE_NODE) {\n    if (diffValues('publicId', 'systemId', 'internalSubset')) return(false);\n    if (diffNamedNodeMaps(this.entities, other.entities)) return(false);\n    if (diffNamedNodeMaps(this.notations, other.notations)) return(false);\n  }\n  return (true);\n};\n/*\n    // Introduced in DOM Level 3:\n    DOMObject          getFeature(in DOMString feature,\n                                  in DOMString version);\n*/\n// Introduced in DOM Level 3:\ncore.Node.prototype.setUserData = function(key, data, handler) {\n  var r = this[key] || null;\n  this[key] = data;\n  return(r);\n};\n\n// Introduced in DOM Level 3:\ncore.Node.prototype.getUserData = function(key) {\n  var r = this[key] || null;\n  return(r);\n};\n/*\n  interface NodeList {\n    Node               item(in unsigned long index);\n    readonly attribute unsigned long   length;\n  };\n\n  interface NamedNodeMap {\n    Node               getNamedItem(in DOMString name);\n    Node               setNamedItem(in Node arg)\n                                        raises(DOMException);\n    Node               removeNamedItem(in DOMString name)\n                                        raises(DOMException);\n    Node               item(in unsigned long index);\n    readonly attribute unsigned long   length;\n    // Introduced in DOM Level 2:\n    Node               getNamedItemNS(in DOMString namespaceURI,\n                                      in DOMString localName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    Node               setNamedItemNS(in Node arg)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    Node               removeNamedItemNS(in DOMString namespaceURI,\n                                         in DOMString localName)\n                                        raises(DOMException);\n  };\n\n  interface CharacterData : Node {\n             attribute DOMString       data;\n                                        // raises(DOMException) on setting\n                                        // raises(DOMException) on retrieval\n\n    readonly attribute unsigned long   length;\n    DOMString          substringData(in unsigned long offset,\n                                     in unsigned long count)\n                                        raises(DOMException);\n    void               appendData(in DOMString arg)\n                                        raises(DOMException);\n    void               insertData(in unsigned long offset,\n                                  in DOMString arg)\n                                        raises(DOMException);\n    void               deleteData(in unsigned long offset,\n                                  in unsigned long count)\n                                        raises(DOMException);\n    void               replaceData(in unsigned long offset,\n                                   in unsigned long count,\n                                   in DOMString arg)\n                                        raises(DOMException);\n  };\n\n  interface Attr : Node {\n    readonly attribute DOMString       name;\n    readonly attribute boolean         specified;\n             attribute DOMString       value;\n                                        // raises(DOMException) on setting\n\n    // Introduced in DOM Level 2:\n    readonly attribute Element         ownerElement;\n    // Introduced in DOM Level 3:\n    readonly attribute TypeInfo        schemaTypeInfo;\n\n*/\n    // Introduced in DOM Level 3:\ndefineGetter(core.Attr.prototype, 'isId', function() {\n  return (this.name.toLowerCase() === 'id');\n});\n/*\n  };\n\n  interface Element : Node {\n    readonly attribute DOMString       tagName;\n    DOMString          getAttribute(in DOMString name);\n    void               setAttribute(in DOMString name,\n                                    in DOMString value)\n                                        raises(DOMException);\n    void               removeAttribute(in DOMString name)\n                                        raises(DOMException);\n    Attr               getAttributeNode(in DOMString name);\n    Attr               setAttributeNode(in Attr newAttr)\n                                        raises(DOMException);\n    Attr               removeAttributeNode(in Attr oldAttr)\n                                        raises(DOMException);\n    NodeList           getElementsByTagName(in DOMString name);\n    // Introduced in DOM Level 2:\n    DOMString          getAttributeNS(in DOMString namespaceURI,\n                                      in DOMString localName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    void               setAttributeNS(in DOMString namespaceURI,\n                                      in DOMString qualifiedName,\n                                      in DOMString value)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    void               removeAttributeNS(in DOMString namespaceURI,\n                                         in DOMString localName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    Attr               getAttributeNodeNS(in DOMString namespaceURI,\n                                          in DOMString localName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    Attr               setAttributeNodeNS(in Attr newAttr)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    NodeList           getElementsByTagNameNS(in DOMString namespaceURI,\n                                              in DOMString localName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    boolean            hasAttribute(in DOMString name);\n    // Introduced in DOM Level 2:\n    boolean            hasAttributeNS(in DOMString namespaceURI,\n                                      in DOMString localName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 3:\n    readonly attribute TypeInfo        schemaTypeInfo;\n    // Introduced in DOM Level 3:\n    void               setIdAttribute(in DOMString name,\n                                      in boolean isId)\n                                        raises(DOMException);\n    // Introduced in DOM Level 3:\n    void               setIdAttributeNS(in DOMString namespaceURI,\n                                        in DOMString localName,\n                                        in boolean isId)\n                                        raises(DOMException);\n    // Introduced in DOM Level 3:\n    void               setIdAttributeNode(in Attr idAttr,\n                                          in boolean isId)\n                                        raises(DOMException);\n  };\n\n  interface Text : CharacterData {\n    Text               splitText(in unsigned long offset)\n                                        raises(DOMException);\n    // Introduced in DOM Level 3:\n    readonly attribute boolean         isElementContentWhitespace;\n    // Introduced in DOM Level 3:\n    readonly attribute DOMString       wholeText;\n    // Introduced in DOM Level 3:\n    Text               replaceWholeText(in DOMString content)\n                                        raises(DOMException);\n  };\n\n  interface Comment : CharacterData {\n  };\n\n  // Introduced in DOM Level 3:\n  interface TypeInfo {\n    readonly attribute DOMString       typeName;\n    readonly attribute DOMString       typeNamespace;\n\n    // DerivationMethods\n    const unsigned long       DERIVATION_RESTRICTION         = 0x00000001;\n    const unsigned long       DERIVATION_EXTENSION           = 0x00000002;\n    const unsigned long       DERIVATION_UNION               = 0x00000004;\n    const unsigned long       DERIVATION_LIST                = 0x00000008;\n\n    boolean            isDerivedFrom(in DOMString typeNamespaceArg,\n                                     in DOMString typeNameArg,\n                                     in unsigned long derivationMethod);\n  };\n*/\n// Introduced in DOM Level 3:\ncore.UserDataHandler = function() {};\ncore.UserDataHandler.prototype.NODE_CLONED   = 1;\ncore.UserDataHandler.prototype.NODE_IMPORTED = 2;\ncore.UserDataHandler.prototype.NODE_DELETED  = 3;\ncore.UserDataHandler.prototype.NODE_RENAMED  = 4;\ncore.UserDataHandler.prototype.NODE_ADOPTED  = 5;\ncore.UserDataHandler.prototype.handle = function(operation, key, data, src, dst) {};\n\n// Introduced in DOM Level 3:\ncore.DOMError = function(severity, message, type, relatedException, relatedData, location) {\n  this._severity         = severity;\n  this._message          = message;\n  this._type             = type;\n  this._relatedException = relatedException;\n  this._relatedData      = relatedData;\n  this._location         = location;\n};\ncore.DOMError.prototype = {};\ncore.DOMError.prototype.SEVERITY_WARNING     = 1;\ncore.DOMError.prototype.SEVERITY_ERROR       = 2;\ncore.DOMError.prototype.SEVERITY_FATAL_ERROR = 3;\ndefineGetter(core.DOMError.prototype, 'severity', function() {\n  return this._severity;\n});\ndefineGetter(core.DOMError.prototype, 'message', function() {\n  return this._message;\n});\ndefineGetter(core.DOMError.prototype, 'type', function() {\n  return this._type;\n});\ndefineGetter(core.DOMError.prototype, 'relatedException', function() {\n  return this._relatedException;\n});\ndefineGetter(core.DOMError.prototype, 'relatedData', function() {\n  return this._relatedData;\n});\ndefineGetter(core.DOMError.prototype, 'location', function() {\n  return this._location;\n});\n\n/*\n  // Introduced in DOM Level 3:\n  interface DOMErrorHandler {\n    boolean            handleError(in DOMError error);\n  };\n\n  // Introduced in DOM Level 3:\n  interface DOMLocator {\n    readonly attribute long            lineNumber;\n    readonly attribute long            columnNumber;\n    readonly attribute long            byteOffset;\n    readonly attribute long            utf16Offset;\n    readonly attribute Node            relatedNode;\n    readonly attribute DOMString       uri;\n  };\n*/\n\n// Introduced in DOM Level 3:\ncore.DOMConfiguration = function(){\n  var possibleParameterNames = {\n    'canonical-form': [false, true], // extra rules for true\n    'cdata-sections': [true, false],\n    'check-character-normalization': [false, true],\n    'comments': [true, false],\n    'datatype-normalization': [false, true],\n    'element-content-whitespace': [true, false],\n    'entities': [true, false],\n    // 'error-handler': [],\n    'infoset': [undefined, true, false], // extra rules for true\n    'namespaces': [true, false],\n    'namespace-declarations': [true, false], // only checked if namespaces is true\n    'normalize-characters': [false, true],\n    // 'schema-location': [],\n    // 'schema-type': [],\n    'split-cdata-sections': [true, false],\n    'validate': [false, true],\n    'validate-if-schema': [false, true],\n    'well-formed': [true, false]\n  }\n};\n\ncore.DOMConfiguration.prototype = {\n  setParameter: function(name, value) {},\n  getParameter: function(name) {},\n  canSetParameter: function(name, value) {},\n  parameterNames: function() {}\n};\n\n//core.Document.prototype._domConfig = new core.DOMConfiguration();\ndefineGetter(core.Document.prototype, 'domConfig', function() {\n  return this._domConfig || new core.DOMConfiguration();;\n});\n\n// Introduced in DOM Level 3:\ncore.DOMStringList = function() {};\n\ncore.DOMStringList.prototype = {\n  item: function() {},\n  length: function() {},\n  contains: function() {}\n};\n\n\n/*\n  interface CDATASection : Text {\n  };\n\n  interface DocumentType : Node {\n    readonly attribute DOMString       name;\n    readonly attribute NamedNodeMap    entities;\n    readonly attribute NamedNodeMap    notations;\n    // Introduced in DOM Level 2:\n    readonly attribute DOMString       publicId;\n    // Introduced in DOM Level 2:\n    readonly attribute DOMString       systemId;\n    // Introduced in DOM Level 2:\n    readonly attribute DOMString       internalSubset;\n  };\n\n  interface Notation : Node {\n    readonly attribute DOMString       publicId;\n    readonly attribute DOMString       systemId;\n  };\n\n  interface Entity : Node {\n    readonly attribute DOMString       publicId;\n    readonly attribute DOMString       systemId;\n    readonly attribute DOMString       notationName;\n    // Introduced in DOM Level 3:\n    readonly attribute DOMString       inputEncoding;\n    // Introduced in DOM Level 3:\n    readonly attribute DOMString       xmlEncoding;\n    // Introduced in DOM Level 3:\n    readonly attribute DOMString       xmlVersion;\n  };\n\n  interface EntityReference : Node {\n  };\n\n  interface ProcessingInstruction : Node {\n    readonly attribute DOMString       target;\n             attribute DOMString       data;\n                                        // raises(DOMException) on setting\n\n  };\n\n  interface DocumentFragment : Node {\n  };\n\n  interface Document : Node {\n    // Modified in DOM Level 3:\n    readonly attribute DocumentType    doctype;\n    readonly attribute DOMImplementation implementation;\n    readonly attribute Element         documentElement;\n    Element            createElement(in DOMString tagName)\n                                        raises(DOMException);\n    DocumentFragment   createDocumentFragment();\n    Text               createTextNode(in DOMString data);\n    Comment            createComment(in DOMString data);\n    CDATASection       createCDATASection(in DOMString data)\n                                        raises(DOMException);\n    ProcessingInstruction createProcessingInstruction(in DOMString target,\n                                                      in DOMString data)\n                                        raises(DOMException);\n    Attr               createAttribute(in DOMString name)\n                                        raises(DOMException);\n    EntityReference    createEntityReference(in DOMString name)\n                                        raises(DOMException);\n    NodeList           getElementsByTagName(in DOMString tagname);\n    // Introduced in DOM Level 2:\n    Node               importNode(in Node importedNode,\n                                  in boolean deep)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    Element            createElementNS(in DOMString namespaceURI,\n                                       in DOMString qualifiedName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    Attr               createAttributeNS(in DOMString namespaceURI,\n                                         in DOMString qualifiedName)\n                                        raises(DOMException);\n    // Introduced in DOM Level 2:\n    NodeList           getElementsByTagNameNS(in DOMString namespaceURI,\n                                              in DOMString localName);\n    // Introduced in DOM Level 2:\n    Element            getElementById(in DOMString elementId);\n*/\n/*\n    // Introduced in DOM Level 3:\n    readonly attribute DOMString       xmlEncoding;\n    // Introduced in DOM Level 3:\n             attribute boolean         xmlStandalone;\n                                        // raises(DOMException) on setting\n\n    // Introduced in DOM Level 3:\n             attribute DOMString       xmlVersion;\n                                        // raises(DOMException) on setting\n\n    // Introduced in DOM Level 3:\n             attribute boolean         strictErrorChecking;\n    // Introduced in DOM Level 3:\n             attribute DOMString       documentURI;\n    // Introduced in DOM Level 3:\n    Node               adoptNode(in Node source)\n                                        raises(DOMException);\n    // Introduced in DOM Level 3:\n    readonly attribute DOMConfiguration domConfig;\n    // Introduced in DOM Level 3:\n    void               normalizeDocument();\n    // Introduced in DOM Level 3:\n    Node               renameNode(in Node n,\n                                  in DOMString namespaceURI,\n                                  in DOMString qualifiedName)\n                                        raises(DOMException);\n  };\n};\n\n#endif // _DOM_IDL_\n*/\n"]},"metadata":{},"sourceType":"script"}