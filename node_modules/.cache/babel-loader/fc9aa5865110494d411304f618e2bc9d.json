{"ast":null,"code":"/*********************************************************************\n * This is a fork from the CSS Style Declaration part of\n * https://github.com/NV/CSSOM\n ********************************************************************/\n\"use strict\";\n\nvar CSSOM = require('cssom');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar camelToDashed = require('./parsers').camelToDashed;\n\nvar dashedToCamelCase = require('./parsers').dashedToCamelCase;\n/**\n * @constructor\n * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration\n */\n\n\nvar CSSStyleDeclaration = function CSSStyleDeclaration(onChangeCallback) {\n  this._values = {};\n  this._importants = {};\n  this._length = 0;\n\n  this._onChange = onChangeCallback || function () {\n    return;\n  };\n};\n\nCSSStyleDeclaration.prototype = {\n  constructor: CSSStyleDeclaration,\n\n  /**\n   *\n   * @param {string} name\n   * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-getPropertyValue\n   * @return {string} the value of the property if it has been explicitly set for this declaration block.\n   * Returns the empty string if the property has not been set.\n   */\n  getPropertyValue: function (name) {\n    if (!this._values.hasOwnProperty(name)) {\n      return \"\";\n    }\n\n    return this._values[name].toString();\n  },\n\n  /**\n   *\n   * @param {string} name\n   * @param {string} value\n   * @param {string} [priority=null] \"important\" or null\n   * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-setProperty\n   */\n  setProperty: function (name, value, priority) {\n    if (value === undefined) {\n      return;\n    }\n\n    if (value === null || value === '') {\n      this.removeProperty(name);\n      return;\n    }\n\n    var camel_case = dashedToCamelCase(name);\n    this[camel_case] = value;\n    this._importants[name] = priority;\n  },\n  _setProperty: function (name, value, priority) {\n    if (value === undefined) {\n      return;\n    }\n\n    if (value === null || value === '') {\n      this.removeProperty(name);\n      return;\n    }\n\n    if (this._values[name]) {\n      // Property already exist. Overwrite it.\n      var index = Array.prototype.indexOf.call(this, name);\n\n      if (index < 0) {\n        this[this._length] = name;\n        this._length++;\n      }\n    } else {\n      // New property.\n      this[this._length] = name;\n      this._length++;\n    }\n\n    this._values[name] = value;\n    this._importants[name] = priority;\n\n    this._onChange(this.cssText);\n  },\n\n  /**\n   *\n   * @param {string} name\n   * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-removeProperty\n   * @return {string} the value of the property if it has been explicitly set for this declaration block.\n   * Returns the empty string if the property has not been set or the property name does not correspond to a known CSS property.\n   */\n  removeProperty: function (name) {\n    if (!this._values.hasOwnProperty(name)) {\n      return \"\";\n    }\n\n    var prevValue = this._values[name];\n    delete this._values[name];\n    delete this._importants[name];\n    var index = Array.prototype.indexOf.call(this, name);\n\n    if (index < 0) {\n      return prevValue;\n    } // That's what WebKit and Opera do\n\n\n    Array.prototype.splice.call(this, index, 1); // That's what Firefox does\n    //this[index] = \"\"\n\n    this._onChange(this.cssText);\n\n    return prevValue;\n  },\n\n  /**\n   *\n   * @param {String} name\n   */\n  getPropertyPriority: function (name) {\n    return this._importants[name] || \"\";\n  },\n  getPropertyCSSValue: function () {\n    //FIXME\n    return;\n  },\n\n  /**\n   *   element.style.overflow = \"auto\"\n   *   element.style.getPropertyShorthand(\"overflow-x\")\n   *   -> \"overflow\"\n   */\n  getPropertyShorthand: function () {\n    //FIXME\n    return;\n  },\n  isPropertyImplicit: function () {\n    //FIXME\n    return;\n  },\n\n  /**\n   *   http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-item\n   */\n  item: function (index) {\n    index = parseInt(index, 10);\n\n    if (index < 0 || index >= this._length) {\n      return '';\n    }\n\n    return this[index];\n  }\n};\nObject.defineProperties(CSSStyleDeclaration.prototype, {\n  cssText: {\n    get: function () {\n      var properties = [];\n      var i;\n      var name;\n      var value;\n      var priority;\n\n      for (i = 0; i < this._length; i++) {\n        name = this[i];\n        value = this.getPropertyValue(name);\n        priority = this.getPropertyPriority(name);\n\n        if (priority !== '') {\n          priority = \" !\" + priority;\n        }\n\n        properties.push([name, ': ', value, priority, ';'].join(''));\n      }\n\n      return properties.join(' ');\n    },\n    set: function (value) {\n      var i;\n      this._values = {};\n      Array.prototype.splice.call(this, 0, this._length);\n      this._importants = {};\n      var dummyRule;\n\n      try {\n        dummyRule = CSSOM.parse('#bogus{' + value + '}').cssRules[0].style;\n      } catch (err) {\n        // malformed css, just return\n        return;\n      }\n\n      var rule_length = dummyRule.length;\n      var name;\n\n      for (i = 0; i < rule_length; ++i) {\n        name = dummyRule[i];\n        this.setProperty(dummyRule[i], dummyRule.getPropertyValue(name), dummyRule.getPropertyPriority(name));\n      }\n\n      this._onChange(this.cssText);\n    },\n    enumerable: true,\n    configurable: true\n  },\n  parentRule: {\n    get: function () {\n      return null;\n    },\n    enumerable: true,\n    configurable: true\n  },\n  length: {\n    get: function () {\n      return this._length;\n    },\n\n    /**\n     * This deletes indices if the new length is less then the current\n     * length. If the new length is more, it does nothing, the new indices\n     * will be undefined until set.\n     **/\n    set: function (value) {\n      var i;\n\n      for (i = value; i < this._length; i++) {\n        delete this[i];\n      }\n\n      this._length = value;\n    },\n    enumerable: true,\n    configurable: true\n  },\n  'float': {\n    get: function () {\n      return this.cssFloat;\n    },\n    set: function (value) {\n      this.cssFloat = value;\n    },\n    enumerable: true,\n    configurable: true\n  }\n});\n\nrequire('./properties')(CSSStyleDeclaration.prototype);\n\nexports.CSSStyleDeclaration = CSSStyleDeclaration;","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/node_modules/cssstyle/lib/CSSStyleDeclaration.js"],"names":["CSSOM","require","fs","path","camelToDashed","dashedToCamelCase","CSSStyleDeclaration","onChangeCallback","_values","_importants","_length","_onChange","prototype","constructor","getPropertyValue","name","hasOwnProperty","toString","setProperty","value","priority","undefined","removeProperty","camel_case","_setProperty","index","Array","indexOf","call","cssText","prevValue","splice","getPropertyPriority","getPropertyCSSValue","getPropertyShorthand","isPropertyImplicit","item","parseInt","Object","defineProperties","get","properties","i","push","join","set","dummyRule","parse","cssRules","style","err","rule_length","length","enumerable","configurable","parentRule","cssFloat","exports"],"mappings":"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","sourcesContent":["/*********************************************************************\n * This is a fork from the CSS Style Declaration part of\n * https://github.com/NV/CSSOM\n ********************************************************************/\n\"use strict\";\nvar CSSOM = require('cssom');\nvar fs = require('fs');\nvar path = require('path');\n\nvar camelToDashed = require('./parsers').camelToDashed;\nvar dashedToCamelCase = require('./parsers').dashedToCamelCase;\n\n/**\n * @constructor\n * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration\n */\nvar CSSStyleDeclaration = function CSSStyleDeclaration(onChangeCallback) {\n    this._values = {};\n    this._importants = {};\n    this._length = 0;\n    this._onChange = onChangeCallback || function () { return; };\n};\nCSSStyleDeclaration.prototype = {\n    constructor: CSSStyleDeclaration,\n\n    /**\n     *\n     * @param {string} name\n     * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-getPropertyValue\n     * @return {string} the value of the property if it has been explicitly set for this declaration block.\n     * Returns the empty string if the property has not been set.\n     */\n    getPropertyValue: function (name) {\n        if (!this._values.hasOwnProperty(name)) {\n            return \"\";\n        }\n        return this._values[name].toString();\n    },\n\n    /**\n     *\n     * @param {string} name\n     * @param {string} value\n     * @param {string} [priority=null] \"important\" or null\n     * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-setProperty\n     */\n    setProperty: function (name, value, priority) {\n        if (value === undefined) {\n            return;\n        }\n        if (value === null || value === '') {\n            this.removeProperty(name);\n            return;\n        }\n        var camel_case = dashedToCamelCase(name);\n        this[camel_case] = value;\n        this._importants[name] = priority;\n    },\n    _setProperty: function (name, value, priority) {\n        if (value === undefined) {\n            return;\n        }\n        if (value === null || value === '') {\n            this.removeProperty(name);\n            return;\n        }\n        if (this._values[name]) {\n            // Property already exist. Overwrite it.\n            var index = Array.prototype.indexOf.call(this, name);\n            if (index < 0) {\n                this[this._length] = name;\n                this._length++;\n            }\n        } else {\n            // New property.\n            this[this._length] = name;\n            this._length++;\n        }\n        this._values[name] = value;\n        this._importants[name] = priority;\n        this._onChange(this.cssText);\n    },\n\n    /**\n     *\n     * @param {string} name\n     * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-removeProperty\n     * @return {string} the value of the property if it has been explicitly set for this declaration block.\n     * Returns the empty string if the property has not been set or the property name does not correspond to a known CSS property.\n     */\n    removeProperty: function (name) {\n        if (!this._values.hasOwnProperty(name)) {\n            return \"\";\n        }\n\n        var prevValue = this._values[name];\n        delete this._values[name];\n        delete this._importants[name];\n\n        var index = Array.prototype.indexOf.call(this, name);\n        if (index < 0) {\n            return prevValue;\n        }\n\n        // That's what WebKit and Opera do\n        Array.prototype.splice.call(this, index, 1);\n\n        // That's what Firefox does\n        //this[index] = \"\"\n\n        this._onChange(this.cssText);\n        return prevValue;\n    },\n\n\n    /**\n     *\n     * @param {String} name\n     */\n    getPropertyPriority: function (name) {\n        return this._importants[name] || \"\";\n    },\n\n\n    getPropertyCSSValue: function () {\n        //FIXME\n        return;\n    },\n\n    /**\n     *   element.style.overflow = \"auto\"\n     *   element.style.getPropertyShorthand(\"overflow-x\")\n     *   -> \"overflow\"\n     */\n    getPropertyShorthand: function () {\n        //FIXME\n        return;\n    },\n\n    isPropertyImplicit: function () {\n        //FIXME\n        return;\n    },\n\n    /**\n     *   http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-item\n     */\n    item: function (index) {\n        index = parseInt(index, 10);\n        if (index < 0 || index >= this._length) {\n            return '';\n        }\n        return this[index];\n    }\n};\n\nObject.defineProperties(CSSStyleDeclaration.prototype, {\n    cssText: {\n        get: function () {\n            var properties = [];\n            var i;\n            var name;\n            var value;\n            var priority;\n            for (i = 0; i < this._length; i++) {\n                name = this[i];\n                value = this.getPropertyValue(name);\n                priority = this.getPropertyPriority(name);\n                if (priority !== '') {\n                    priority = \" !\" + priority;\n                }\n                properties.push([name, ': ', value, priority, ';'].join(''));\n            }\n            return properties.join(' ');\n        },\n        set: function (value) {\n            var i;\n            this._values = {};\n            Array.prototype.splice.call(this, 0, this._length);\n            this._importants = {};\n            var dummyRule;\n            try {\n                dummyRule = CSSOM.parse('#bogus{' + value + '}').cssRules[0].style;\n            } catch (err) {\n                // malformed css, just return\n                return;\n            }\n            var rule_length = dummyRule.length;\n            var name;\n            for (i = 0; i < rule_length; ++i) {\n                name = dummyRule[i];\n                this.setProperty(dummyRule[i], dummyRule.getPropertyValue(name), dummyRule.getPropertyPriority(name));\n            }\n            this._onChange(this.cssText);\n        },\n        enumerable: true,\n        configurable: true\n    },\n    parentRule: {\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    },\n    length: {\n        get: function () { return this._length; },\n        /**\n         * This deletes indices if the new length is less then the current\n         * length. If the new length is more, it does nothing, the new indices\n         * will be undefined until set.\n         **/\n        set: function (value) {\n            var i;\n            for (i = value; i < this._length; i++) {\n                delete this[i];\n            }\n            this._length = value;\n        },\n        enumerable: true,\n        configurable: true\n    },\n    'float': {\n        get: function () { return this.cssFloat; },\n        set: function (value) {\n            this.cssFloat = value;\n        },\n        enumerable: true,\n        configurable: true\n    }\n});\n\nrequire('./properties')(CSSStyleDeclaration.prototype);\n\nexports.CSSStyleDeclaration = CSSStyleDeclaration;\n"]},"metadata":{},"sourceType":"script"}