{"ast":null,"code":"'use strict';\n\nvar Tokenizer = require('../tokenization/tokenizer'),\n    ForeignContent = require('../common/foreign_content'),\n    UNICODE = require('../common/unicode'),\n    HTML = require('../common/html'); //Aliases\n\n\nvar $ = HTML.TAG_NAMES,\n    NS = HTML.NAMESPACES; //Tokenizer proxy\n//NOTE: this proxy simulates adjustment of the Tokenizer which performed by standard parser during tree construction.\n\nvar TokenizerProxy = module.exports = function (html, options) {\n  this.tokenizer = new Tokenizer(html, options);\n  this.namespaceStack = [];\n  this.namespaceStackTop = -1;\n  this.currentNamespace = null;\n  this.inForeignContent = false;\n}; //API\n\n\nTokenizerProxy.prototype.getNextToken = function () {\n  var token = this.tokenizer.getNextToken();\n  if (token.type === Tokenizer.START_TAG_TOKEN) this._handleStartTagToken(token);else if (token.type === Tokenizer.END_TAG_TOKEN) this._handleEndTagToken(token);else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN && this.inForeignContent) {\n    token.type = Tokenizer.CHARACTER_TOKEN;\n    token.chars = UNICODE.REPLACEMENT_CHARACTER;\n  }\n  return token;\n}; //Namespace stack mutations\n\n\nTokenizerProxy.prototype._enterNamespace = function (namespace) {\n  this.namespaceStackTop++;\n  this.namespaceStack.push(namespace);\n  this.inForeignContent = namespace !== NS.HTML;\n  this.currentNamespace = namespace;\n  this.tokenizer.allowCDATA = this.inForeignContent;\n};\n\nTokenizerProxy.prototype._leaveCurrentNamespace = function () {\n  this.namespaceStackTop--;\n  this.namespaceStack.pop();\n  this.currentNamespace = this.namespaceStack[this.namespaceStackTop];\n  this.inForeignContent = this.currentNamespace !== NS.HTML;\n  this.tokenizer.allowCDATA = this.inForeignContent;\n}; //Token handlers\n\n\nTokenizerProxy.prototype._ensureTokenizerMode = function (tn) {\n  if (tn === $.TEXTAREA || tn === $.TITLE) this.tokenizer.state = Tokenizer.MODE.RCDATA;else if (tn === $.PLAINTEXT) this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;else if (tn === $.SCRIPT) this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;else if (tn === $.STYLE || tn === $.IFRAME || tn === $.XMP || tn === $.NOEMBED || tn === $.NOFRAMES || tn === $.NOSCRIPT) {\n    this.tokenizer.state = Tokenizer.MODE.RAWTEXT;\n  }\n};\n\nTokenizerProxy.prototype._handleStartTagToken = function (token) {\n  var tn = token.tagName;\n  if (tn === $.SVG) this._enterNamespace(NS.SVG);else if (tn === $.MATH) this._enterNamespace(NS.MATHML);else {\n    if (this.inForeignContent) {\n      if (ForeignContent.causesExit(token)) this._leaveCurrentNamespace();else if (ForeignContent.isMathMLTextIntegrationPoint(tn, this.currentNamespace) || ForeignContent.isHtmlIntegrationPoint(tn, this.currentNamespace, token.attrs)) {\n        this._enterNamespace(NS.HTML);\n      }\n    } else this._ensureTokenizerMode(tn);\n  }\n};\n\nTokenizerProxy.prototype._handleEndTagToken = function (token) {\n  var tn = token.tagName;\n\n  if (!this.inForeignContent) {\n    var previousNs = this.namespaceStack[this.namespaceStackTop - 1]; //NOTE: check for exit from integration point\n\n    if (ForeignContent.isMathMLTextIntegrationPoint(tn, previousNs) || ForeignContent.isHtmlIntegrationPoint(tn, previousNs, token.attrs)) {\n      this._leaveCurrentNamespace();\n    } else if (tn === $.SCRIPT) this.tokenizer.state = Tokenizer.MODE.DATA;\n  } else if (tn === $.SVG && this.currentNamespace === NS.SVG || tn === $.MATH && this.currentNamespace === NS.MATHML) this._leaveCurrentNamespace();\n};","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/node_modules/parse5/lib/simple_api/tokenizer_proxy.js"],"names":["Tokenizer","require","ForeignContent","UNICODE","HTML","$","TAG_NAMES","NS","NAMESPACES","TokenizerProxy","module","exports","html","options","tokenizer","namespaceStack","namespaceStackTop","currentNamespace","inForeignContent","prototype","getNextToken","token","type","START_TAG_TOKEN","_handleStartTagToken","END_TAG_TOKEN","_handleEndTagToken","NULL_CHARACTER_TOKEN","CHARACTER_TOKEN","chars","REPLACEMENT_CHARACTER","_enterNamespace","namespace","push","allowCDATA","_leaveCurrentNamespace","pop","_ensureTokenizerMode","tn","TEXTAREA","TITLE","state","MODE","RCDATA","PLAINTEXT","SCRIPT","SCRIPT_DATA","STYLE","IFRAME","XMP","NOEMBED","NOFRAMES","NOSCRIPT","RAWTEXT","tagName","SVG","MATH","MATHML","causesExit","isMathMLTextIntegrationPoint","isHtmlIntegrationPoint","attrs","previousNs","DATA"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar Tokenizer = require('../tokenization/tokenizer'),\r\n    ForeignContent = require('../common/foreign_content'),\r\n    UNICODE = require('../common/unicode'),\r\n    HTML = require('../common/html');\r\n\r\n//Aliases\r\nvar $ = HTML.TAG_NAMES,\r\n    NS = HTML.NAMESPACES;\r\n\r\n\r\n//Tokenizer proxy\r\n//NOTE: this proxy simulates adjustment of the Tokenizer which performed by standard parser during tree construction.\r\nvar TokenizerProxy = module.exports = function (html, options) {\r\n    this.tokenizer = new Tokenizer(html, options);\r\n\r\n    this.namespaceStack = [];\r\n    this.namespaceStackTop = -1;\r\n    this.currentNamespace = null;\r\n    this.inForeignContent = false;\r\n};\r\n\r\n//API\r\nTokenizerProxy.prototype.getNextToken = function () {\r\n    var token = this.tokenizer.getNextToken();\r\n\r\n    if (token.type === Tokenizer.START_TAG_TOKEN)\r\n        this._handleStartTagToken(token);\r\n\r\n    else if (token.type === Tokenizer.END_TAG_TOKEN)\r\n        this._handleEndTagToken(token);\r\n\r\n    else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN && this.inForeignContent) {\r\n        token.type = Tokenizer.CHARACTER_TOKEN;\r\n        token.chars = UNICODE.REPLACEMENT_CHARACTER;\r\n    }\r\n\r\n    return token;\r\n};\r\n\r\n//Namespace stack mutations\r\nTokenizerProxy.prototype._enterNamespace = function (namespace) {\r\n    this.namespaceStackTop++;\r\n    this.namespaceStack.push(namespace);\r\n\r\n    this.inForeignContent = namespace !== NS.HTML;\r\n    this.currentNamespace = namespace;\r\n    this.tokenizer.allowCDATA = this.inForeignContent;\r\n};\r\n\r\nTokenizerProxy.prototype._leaveCurrentNamespace = function () {\r\n    this.namespaceStackTop--;\r\n    this.namespaceStack.pop();\r\n\r\n    this.currentNamespace = this.namespaceStack[this.namespaceStackTop];\r\n    this.inForeignContent = this.currentNamespace !== NS.HTML;\r\n    this.tokenizer.allowCDATA = this.inForeignContent;\r\n};\r\n\r\n//Token handlers\r\nTokenizerProxy.prototype._ensureTokenizerMode = function (tn) {\r\n    if (tn === $.TEXTAREA || tn === $.TITLE)\r\n        this.tokenizer.state = Tokenizer.MODE.RCDATA;\r\n\r\n    else if (tn === $.PLAINTEXT)\r\n        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;\r\n\r\n    else if (tn === $.SCRIPT)\r\n        this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;\r\n\r\n    else if (tn === $.STYLE || tn === $.IFRAME || tn === $.XMP ||\r\n             tn === $.NOEMBED || tn === $.NOFRAMES || tn === $.NOSCRIPT) {\r\n        this.tokenizer.state = Tokenizer.MODE.RAWTEXT;\r\n    }\r\n};\r\n\r\nTokenizerProxy.prototype._handleStartTagToken = function (token) {\r\n    var tn = token.tagName;\r\n\r\n    if (tn === $.SVG)\r\n        this._enterNamespace(NS.SVG);\r\n\r\n    else if (tn === $.MATH)\r\n        this._enterNamespace(NS.MATHML);\r\n\r\n    else {\r\n        if (this.inForeignContent) {\r\n            if (ForeignContent.causesExit(token))\r\n                this._leaveCurrentNamespace();\r\n\r\n            else if (ForeignContent.isMathMLTextIntegrationPoint(tn, this.currentNamespace) ||\r\n                     ForeignContent.isHtmlIntegrationPoint(tn, this.currentNamespace, token.attrs)) {\r\n                this._enterNamespace(NS.HTML);\r\n            }\r\n        }\r\n\r\n        else\r\n            this._ensureTokenizerMode(tn);\r\n    }\r\n};\r\n\r\nTokenizerProxy.prototype._handleEndTagToken = function (token) {\r\n    var tn = token.tagName;\r\n\r\n    if (!this.inForeignContent) {\r\n        var previousNs = this.namespaceStack[this.namespaceStackTop - 1];\r\n\r\n        //NOTE: check for exit from integration point\r\n        if (ForeignContent.isMathMLTextIntegrationPoint(tn, previousNs) ||\r\n            ForeignContent.isHtmlIntegrationPoint(tn, previousNs, token.attrs)) {\r\n            this._leaveCurrentNamespace();\r\n        }\r\n\r\n        else if (tn === $.SCRIPT)\r\n            this.tokenizer.state = Tokenizer.MODE.DATA;\r\n    }\r\n\r\n    else if ((tn === $.SVG && this.currentNamespace === NS.SVG) ||\r\n             (tn === $.MATH && this.currentNamespace === NS.MATHML))\r\n        this._leaveCurrentNamespace();\r\n};\r\n"]},"metadata":{},"sourceType":"script"}