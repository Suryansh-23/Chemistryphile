{"ast":null,"code":"'use strict';\n\nvar ParsingUnit = module.exports = function (parser) {\n  this.parser = parser;\n  this.suspended = false;\n  this.parsingLoopLock = false;\n  this.callback = null;\n};\n\nParsingUnit.prototype._stateGuard = function (suspend) {\n  if (this.suspended && suspend) throw new Error('parse5: Parser was already suspended. Please, check your control flow logic.');else if (!this.suspended && !suspend) throw new Error('parse5: Parser was already resumed. Please, check your control flow logic.');\n  return suspend;\n};\n\nParsingUnit.prototype.suspend = function () {\n  this.suspended = this._stateGuard(true);\n  return this;\n};\n\nParsingUnit.prototype.resume = function () {\n  this.suspended = this._stateGuard(false); //NOTE: don't enter parsing loop if it is locked. Without this lock _runParsingLoop() may be called\n  //while parsing loop is still running. E.g. when suspend() and resume() called synchronously.\n\n  if (!this.parsingLoopLock) this.parser._runParsingLoop();\n  return this;\n};\n\nParsingUnit.prototype.documentWrite = function (html) {\n  this.parser.tokenizer.preprocessor.write(html);\n  return this;\n};\n\nParsingUnit.prototype.handleScripts = function (scriptHandler) {\n  this.parser.scriptHandler = scriptHandler;\n  return this;\n};\n\nParsingUnit.prototype.done = function (callback) {\n  this.callback = callback;\n  return this;\n};","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/node_modules/parse5/lib/jsdom/parsing_unit.js"],"names":["ParsingUnit","module","exports","parser","suspended","parsingLoopLock","callback","prototype","_stateGuard","suspend","Error","resume","_runParsingLoop","documentWrite","html","tokenizer","preprocessor","write","handleScripts","scriptHandler","done"],"mappings":"AAAA;;AAEA,IAAIA,WAAW,GAAGC,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkB;AACjD,OAAKA,MAAL,GAAcA,MAAd;AACA,OAAKC,SAAL,GAAiB,KAAjB;AACA,OAAKC,eAAL,GAAuB,KAAvB;AACA,OAAKC,QAAL,GAAgB,IAAhB;AACH,CALD;;AAOAN,WAAW,CAACO,SAAZ,CAAsBC,WAAtB,GAAoC,UAAUC,OAAV,EAAmB;AACnD,MAAI,KAAKL,SAAL,IAAkBK,OAAtB,EACI,MAAM,IAAIC,KAAJ,CAAU,8EAAV,CAAN,CADJ,KAGK,IAAI,CAAC,KAAKN,SAAN,IAAmB,CAACK,OAAxB,EACD,MAAM,IAAIC,KAAJ,CAAU,4EAAV,CAAN;AAEJ,SAAOD,OAAP;AACH,CARD;;AAUAT,WAAW,CAACO,SAAZ,CAAsBE,OAAtB,GAAgC,YAAY;AACxC,OAAKL,SAAL,GAAiB,KAAKI,WAAL,CAAiB,IAAjB,CAAjB;AAEA,SAAO,IAAP;AACH,CAJD;;AAMAR,WAAW,CAACO,SAAZ,CAAsBI,MAAtB,GAA+B,YAAY;AACvC,OAAKP,SAAL,GAAiB,KAAKI,WAAL,CAAiB,KAAjB,CAAjB,CADuC,CAGvC;AACA;;AACA,MAAI,CAAC,KAAKH,eAAV,EACI,KAAKF,MAAL,CAAYS,eAAZ;AAEJ,SAAO,IAAP;AACH,CATD;;AAWAZ,WAAW,CAACO,SAAZ,CAAsBM,aAAtB,GAAsC,UAAUC,IAAV,EAAgB;AAClD,OAAKX,MAAL,CAAYY,SAAZ,CAAsBC,YAAtB,CAAmCC,KAAnC,CAAyCH,IAAzC;AAEA,SAAO,IAAP;AACH,CAJD;;AAMAd,WAAW,CAACO,SAAZ,CAAsBW,aAAtB,GAAsC,UAAUC,aAAV,EAAyB;AAC3D,OAAKhB,MAAL,CAAYgB,aAAZ,GAA4BA,aAA5B;AAEA,SAAO,IAAP;AACH,CAJD;;AAMAnB,WAAW,CAACO,SAAZ,CAAsBa,IAAtB,GAA6B,UAAUd,QAAV,EAAoB;AAC7C,OAAKA,QAAL,GAAgBA,QAAhB;AAEA,SAAO,IAAP;AACH,CAJD","sourcesContent":["'use strict';\r\n\r\nvar ParsingUnit = module.exports = function (parser) {\r\n    this.parser = parser;\r\n    this.suspended = false;\r\n    this.parsingLoopLock = false;\r\n    this.callback = null;\r\n};\r\n\r\nParsingUnit.prototype._stateGuard = function (suspend) {\r\n    if (this.suspended && suspend)\r\n        throw new Error('parse5: Parser was already suspended. Please, check your control flow logic.');\r\n\r\n    else if (!this.suspended && !suspend)\r\n        throw new Error('parse5: Parser was already resumed. Please, check your control flow logic.');\r\n\r\n    return suspend;\r\n};\r\n\r\nParsingUnit.prototype.suspend = function () {\r\n    this.suspended = this._stateGuard(true);\r\n\r\n    return this;\r\n};\r\n\r\nParsingUnit.prototype.resume = function () {\r\n    this.suspended = this._stateGuard(false);\r\n\r\n    //NOTE: don't enter parsing loop if it is locked. Without this lock _runParsingLoop() may be called\r\n    //while parsing loop is still running. E.g. when suspend() and resume() called synchronously.\r\n    if (!this.parsingLoopLock)\r\n        this.parser._runParsingLoop();\r\n\r\n    return this;\r\n};\r\n\r\nParsingUnit.prototype.documentWrite = function (html) {\r\n    this.parser.tokenizer.preprocessor.write(html);\r\n\r\n    return this;\r\n};\r\n\r\nParsingUnit.prototype.handleScripts = function (scriptHandler) {\r\n    this.parser.scriptHandler = scriptHandler;\r\n\r\n    return this;\r\n};\r\n\r\nParsingUnit.prototype.done = function (callback) {\r\n    this.callback = callback;\r\n\r\n    return this;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}