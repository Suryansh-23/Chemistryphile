{"ast":null,"code":"//Tree traversing\nexports.getFirstChild = function (node) {\n  return node.childNodes[0];\n};\n\nexports.getChildNodes = function (node) {\n  return node.childNodes;\n};\n\nexports.getParentNode = function (node) {\n  return node.parentNode;\n};\n\nexports.getAttrList = function (node) {\n  return node.attributes;\n}; //Node data\n\n\nexports.getTagName = function (element) {\n  return element.tagName.toLowerCase();\n};\n\nexports.getNamespaceURI = function (element) {\n  return element.namespaceURI || 'http://www.w3.org/1999/xhtml';\n};\n\nexports.getTextNodeContent = function (textNode) {\n  return textNode.nodeValue;\n};\n\nexports.getCommentNodeContent = function (commentNode) {\n  return commentNode.nodeValue;\n};\n\nexports.getDocumentTypeNodeName = function (doctypeNode) {\n  return doctypeNode.name;\n};\n\nexports.getDocumentTypeNodePublicId = function (doctypeNode) {\n  return doctypeNode.publicId || null;\n};\n\nexports.getDocumentTypeNodeSystemId = function (doctypeNode) {\n  return doctypeNode.systemId || null;\n}; //Node types\n\n\nexports.isTextNode = function (node) {\n  return node.nodeName === '#text';\n};\n\nexports.isCommentNode = function (node) {\n  return node.nodeName === '#comment';\n};\n\nexports.isDocumentTypeNode = function (node) {\n  return node.nodeType === 10;\n};\n\nexports.isElementNode = function (node) {\n  return !!node.tagName;\n};","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/lib/jsdom/browser/documentAdapter.js"],"names":["exports","getFirstChild","node","childNodes","getChildNodes","getParentNode","parentNode","getAttrList","attributes","getTagName","element","tagName","toLowerCase","getNamespaceURI","namespaceURI","getTextNodeContent","textNode","nodeValue","getCommentNodeContent","commentNode","getDocumentTypeNodeName","doctypeNode","name","getDocumentTypeNodePublicId","publicId","getDocumentTypeNodeSystemId","systemId","isTextNode","nodeName","isCommentNode","isDocumentTypeNode","nodeType","isElementNode"],"mappings":"AAAA;AACAA,OAAO,CAACC,aAAR,GAAwB,UAAUC,IAAV,EAAgB;AACtC,SAAOA,IAAI,CAACC,UAAL,CAAgB,CAAhB,CAAP;AACD,CAFD;;AAIAH,OAAO,CAACI,aAAR,GAAwB,UAAUF,IAAV,EAAgB;AACtC,SAAOA,IAAI,CAACC,UAAZ;AACD,CAFD;;AAIAH,OAAO,CAACK,aAAR,GAAwB,UAAUH,IAAV,EAAgB;AACtC,SAAOA,IAAI,CAACI,UAAZ;AACD,CAFD;;AAIAN,OAAO,CAACO,WAAR,GAAsB,UAAUL,IAAV,EAAgB;AACpC,SAAOA,IAAI,CAACM,UAAZ;AACD,CAFD,C,CAIA;;;AACAR,OAAO,CAACS,UAAR,GAAqB,UAAUC,OAAV,EAAmB;AACtC,SAAOA,OAAO,CAACC,OAAR,CAAgBC,WAAhB,EAAP;AACD,CAFD;;AAIAZ,OAAO,CAACa,eAAR,GAA0B,UAAUH,OAAV,EAAmB;AAC3C,SAAOA,OAAO,CAACI,YAAR,IAAwB,8BAA/B;AACD,CAFD;;AAIAd,OAAO,CAACe,kBAAR,GAA6B,UAAUC,QAAV,EAAoB;AAC/C,SAAOA,QAAQ,CAACC,SAAhB;AACD,CAFD;;AAIAjB,OAAO,CAACkB,qBAAR,GAAgC,UAAUC,WAAV,EAAuB;AACrD,SAAOA,WAAW,CAACF,SAAnB;AACD,CAFD;;AAIAjB,OAAO,CAACoB,uBAAR,GAAkC,UAAUC,WAAV,EAAuB;AACvD,SAAOA,WAAW,CAACC,IAAnB;AACD,CAFD;;AAIAtB,OAAO,CAACuB,2BAAR,GAAsC,UAAUF,WAAV,EAAuB;AAC3D,SAAOA,WAAW,CAACG,QAAZ,IAAwB,IAA/B;AACD,CAFD;;AAIAxB,OAAO,CAACyB,2BAAR,GAAsC,UAAUJ,WAAV,EAAuB;AAC3D,SAAOA,WAAW,CAACK,QAAZ,IAAwB,IAA/B;AACD,CAFD,C,CAIA;;;AACA1B,OAAO,CAAC2B,UAAR,GAAqB,UAAUzB,IAAV,EAAgB;AACnC,SAAOA,IAAI,CAAC0B,QAAL,KAAkB,OAAzB;AACD,CAFD;;AAIA5B,OAAO,CAAC6B,aAAR,GAAwB,UAAU3B,IAAV,EAAgB;AACtC,SAAOA,IAAI,CAAC0B,QAAL,KAAkB,UAAzB;AACD,CAFD;;AAIA5B,OAAO,CAAC8B,kBAAR,GAA6B,UAAU5B,IAAV,EAAgB;AAC3C,SAAOA,IAAI,CAAC6B,QAAL,KAAkB,EAAzB;AACD,CAFD;;AAIA/B,OAAO,CAACgC,aAAR,GAAwB,UAAU9B,IAAV,EAAgB;AACtC,SAAO,CAAC,CAACA,IAAI,CAACS,OAAd;AACD,CAFD","sourcesContent":["//Tree traversing\nexports.getFirstChild = function (node) {\n  return node.childNodes[0];\n};\n\nexports.getChildNodes = function (node) {\n  return node.childNodes;\n};\n\nexports.getParentNode = function (node) {\n  return node.parentNode;\n};\n\nexports.getAttrList = function (node) {\n  return node.attributes;\n};\n\n//Node data\nexports.getTagName = function (element) {\n  return element.tagName.toLowerCase();\n};\n\nexports.getNamespaceURI = function (element) {\n  return element.namespaceURI || 'http://www.w3.org/1999/xhtml';\n};\n\nexports.getTextNodeContent = function (textNode) {\n  return textNode.nodeValue;\n};\n\nexports.getCommentNodeContent = function (commentNode) {\n  return commentNode.nodeValue;\n};\n\nexports.getDocumentTypeNodeName = function (doctypeNode) {\n  return doctypeNode.name;\n};\n\nexports.getDocumentTypeNodePublicId = function (doctypeNode) {\n  return doctypeNode.publicId || null;\n};\n\nexports.getDocumentTypeNodeSystemId = function (doctypeNode) {\n  return doctypeNode.systemId || null;\n};\n\n//Node types\nexports.isTextNode = function (node) {\n  return node.nodeName === '#text';\n};\n\nexports.isCommentNode = function (node) {\n  return node.nodeName === '#comment';\n};\n\nexports.isDocumentTypeNode = function (node) {\n  return node.nodeType === 10;\n};\n\nexports.isElementNode = function (node) {\n  return !!node.tagName;\n};\n"]},"metadata":{},"sourceType":"script"}