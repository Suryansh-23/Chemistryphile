{"ast":null,"code":"var _jsxFileName = \"F:\\\\JavaScript\\\\Projects\\\\chemistryphile\\\\src\\\\components\\\\speechRecog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst speechRecog = () => {\n  _s();\n\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n  const [isListening, setIsListening] = useState(false);\n  const microphoneRef = useRef(null);\n\n  const handleListing = () => {\n    setIsListening(true);\n    microphoneRef.current.classList.add(\"listening\");\n    SpeechRecognition.startListening({\n      continuous: true\n    });\n  };\n\n  const stopHandle = () => {\n    setIsListening(false);\n    microphoneRef.current.classList.remove(\"listening\");\n    SpeechRecognition.stopListening();\n  };\n\n  const handleReset = () => {\n    stopHandle();\n    resetTranscript();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"microphone-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mircophone-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"microphone-icon-container\",\n        ref: microphoneRef,\n        onClick: handleListing,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"microphone-icon\",\n          children: \"Microphone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"microphone-status\",\n        children: isListening ? \"Listening.........\" : \"Click to start Listening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), isListening && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"microphone-stop btn\",\n        onClick: stopHandle,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"microphone-result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"microphone-result-text\",\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"microphone-reset btn\",\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(speechRecog, \"/w0Trap4adZ2/twxaoE3ZYVo1mA=\", false, function () {\n  return [useSpeechRecognition];\n});\n\nexport default speechRecog;","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/src/components/speechRecog.js"],"names":["React","useState","useRef","SpeechRecognition","useSpeechRecognition","speechRecog","transcript","resetTranscript","isListening","setIsListening","microphoneRef","handleListing","current","classList","add","startListening","continuous","stopHandle","remove","stopListening","handleReset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,iBAAP,IACEC,oBADF,QAEO,0BAFP;;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAkCH,oBAAoB,EAA5D;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMS,aAAa,GAAGR,MAAM,CAAC,IAAD,CAA5B;;AACA,QAAMS,aAAa,GAAG,MAAM;AAC1BF,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAC,IAAAA,aAAa,CAACE,OAAd,CAAsBC,SAAtB,CAAgCC,GAAhC,CAAoC,WAApC;AACAX,IAAAA,iBAAiB,CAACY,cAAlB,CAAiC;AAC/BC,MAAAA,UAAU,EAAE;AADmB,KAAjC;AAGD,GAND;;AAOA,QAAMC,UAAU,GAAG,MAAM;AACvBR,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAC,IAAAA,aAAa,CAACE,OAAd,CAAsBC,SAAtB,CAAgCK,MAAhC,CAAuC,WAAvC;AACAf,IAAAA,iBAAiB,CAACgB,aAAlB;AACD,GAJD;;AAKA,QAAMC,WAAW,GAAG,MAAM;AACxBH,IAAAA,UAAU;AACVV,IAAAA,eAAe;AAChB,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,2BADZ;AAEE,QAAA,GAAG,EAAEG,aAFP;AAGE,QAAA,OAAO,EAAEC,aAHX;AAAA,+BAKE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACGH,WAAW,GAAG,oBAAH,GAA0B;AADxC;AAAA;AAAA;AAAA;AAAA,cARF,EAWGA,WAAW,iBACV;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAES,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAkBGX,UAAU,iBACT;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,kBAAyCA;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAEc,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAjDD;;GAAMf,W;UACoCD,oB;;;AAkD1C,eAAeC,WAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport SpeechRecognition, {\r\n  useSpeechRecognition,\r\n} from \"react-speech-recognition\";\r\n\r\nconst speechRecog = () => {\r\n  const { transcript, resetTranscript } = useSpeechRecognition();\r\n  const [isListening, setIsListening] = useState(false);\r\n  const microphoneRef = useRef(null);\r\n  const handleListing = () => {\r\n    setIsListening(true);\r\n    microphoneRef.current.classList.add(\"listening\");\r\n    SpeechRecognition.startListening({\r\n      continuous: true,\r\n    });\r\n  };\r\n  const stopHandle = () => {\r\n    setIsListening(false);\r\n    microphoneRef.current.classList.remove(\"listening\");\r\n    SpeechRecognition.stopListening();\r\n  };\r\n  const handleReset = () => {\r\n    stopHandle();\r\n    resetTranscript();\r\n  };\r\n  return (\r\n    <div className=\"microphone-wrapper\">\r\n      <div className=\"mircophone-container\">\r\n        <div\r\n          className=\"microphone-icon-container\"\r\n          ref={microphoneRef}\r\n          onClick={handleListing}\r\n        >\r\n          <button className=\"microphone-icon\">Microphone</button>\r\n        </div>\r\n        <div className=\"microphone-status\">\r\n          {isListening ? \"Listening.........\" : \"Click to start Listening\"}\r\n        </div>\r\n        {isListening && (\r\n          <button className=\"microphone-stop btn\" onClick={stopHandle}>\r\n            Stop\r\n          </button>\r\n        )}\r\n      </div>\r\n      {transcript && (\r\n        <div className=\"microphone-result-container\">\r\n          <div className=\"microphone-result-text\">{transcript}</div>\r\n          <button className=\"microphone-reset btn\" onClick={handleReset}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default speechRecog;\r\n"]},"metadata":{},"sourceType":"module"}