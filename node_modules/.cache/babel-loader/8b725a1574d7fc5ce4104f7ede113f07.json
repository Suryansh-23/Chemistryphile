{"ast":null,"code":"var HtmlToDom = require('./htmltodom').HtmlToDom,\n    jsdom = require('../../jsdom'),\n    defineGetter = require('../utils').defineGetter,\n    defineSetter = require('../utils').defineSetter,\n    Window = require('./Window');\n\nfunction windowAugmentation(document) {\n  var window = createWindow(document);\n\n  if (document.addEventListener) {\n    if (document.readyState == 'complete') {\n      var ev = document.createEvent('HTMLEvents');\n      ev.initEvent('load', false, false);\n      process.nextTick(function () {\n        window.dispatchEvent(ev);\n      });\n    } else {\n      document.addEventListener('load', function (ev) {\n        window.dispatchEvent(ev);\n      });\n    }\n  }\n\n  return window;\n}\n\n;\n\nfunction createWindow(document) {\n  var window = new Window(document); // Set up the window as if it's a top level window.\n  // If it's not, then references will be corrected by frame/iframe code.\n  // Note: window.frames is maintained in the HTMLFrameElement init function.\n\n  window.window = window.frames = window.self = window.parent = window.top = window;\n  return window;\n}\n\n;\n/**\n * Augments the given DOM by adding browser-specific properties and methods (BOM).\n * Returns the augmented DOM.\n */\n// TODO: this function is HORIBBLE. It modifies the *shared* `dom` variable with document-specific stuff.\n// We call it in `jsdom.jsdom`, i.e. per-document. The checks `if (dom._augment && ...)` just mean that it won't modify\n// the global twice *for the same options*. Bad stuff.\n//\n// None of the properties set here should be on `dom`, really.\n\nexports.browserAugmentation = function (dom, options) {\n  if (!options) {\n    options = {};\n  }\n\n  var parser = options.parser;\n\n  if (dom._augmented && dom._parser === parser && dom._parsingMode === options.parsingMode) {\n    return dom;\n  }\n\n  dom._parser = parser;\n  dom._parsingMode = options.parsingMode;\n  var htmltodom = new HtmlToDom(parser, options.parsingMode);\n  dom.Document.prototype._htmlToDom = htmltodom;\n  dom.Document.prototype._domImpl = dom.DOMImplementation;\n  defineGetter(dom.Document.prototype, 'parentWindow', function () {\n    if (!this._parentWindow) {\n      this._parentWindow = windowAugmentation(this);\n    }\n\n    return this._parentWindow;\n  });\n  dom._augmented = true;\n  return dom;\n};","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/lib/jsdom/browser/index.js"],"names":["HtmlToDom","require","jsdom","defineGetter","defineSetter","Window","windowAugmentation","document","window","createWindow","addEventListener","readyState","ev","createEvent","initEvent","process","nextTick","dispatchEvent","frames","self","parent","top","exports","browserAugmentation","dom","options","parser","_augmented","_parser","_parsingMode","parsingMode","htmltodom","Document","prototype","_htmlToDom","_domImpl","DOMImplementation","_parentWindow"],"mappings":"AAAA,IAAIA,SAAS,GAAOC,OAAO,CAAC,aAAD,CAAP,CAAuBD,SAA3C;AAAA,IACIE,KAAK,GAAWD,OAAO,CAAC,aAAD,CAD3B;AAAA,IAEIE,YAAY,GAAIF,OAAO,CAAC,UAAD,CAAP,CAAoBE,YAFxC;AAAA,IAGIC,YAAY,GAAIH,OAAO,CAAC,UAAD,CAAP,CAAoBG,YAHxC;AAAA,IAIIC,MAAM,GAAUJ,OAAO,CAAC,UAAD,CAJ3B;;AAMA,SAASK,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,MAAIC,MAAM,GAAGC,YAAY,CAACF,QAAD,CAAzB;;AAEA,MAAIA,QAAQ,CAACG,gBAAb,EAA+B;AAC7B,QAAIH,QAAQ,CAACI,UAAT,IAAuB,UAA3B,EAAuC;AACrC,UAAIC,EAAE,GAAGL,QAAQ,CAACM,WAAT,CAAqB,YAArB,CAAT;AACAD,MAAAA,EAAE,CAACE,SAAH,CAAa,MAAb,EAAqB,KAArB,EAA4B,KAA5B;AACAC,MAAAA,OAAO,CAACC,QAAR,CAAiB,YAAY;AAC3BR,QAAAA,MAAM,CAACS,aAAP,CAAqBL,EAArB;AACD,OAFD;AAGD,KAND,MAOK;AACHL,MAAAA,QAAQ,CAACG,gBAAT,CAA0B,MAA1B,EAAkC,UAASE,EAAT,EAAa;AAC7CJ,QAAAA,MAAM,CAACS,aAAP,CAAqBL,EAArB;AACD,OAFD;AAGD;AACF;;AAED,SAAOJ,MAAP;AACD;;AAAA;;AAED,SAASC,YAAT,CAAsBF,QAAtB,EAAgC;AAC9B,MAAIC,MAAM,GAAG,IAAIH,MAAJ,CAAWE,QAAX,CAAb,CAD8B,CAG9B;AACA;AACA;;AACAC,EAAAA,MAAM,CAACA,MAAP,GAAgBA,MAAM,CAACU,MAAP,GACAV,MAAM,CAACW,IAAP,GACAX,MAAM,CAACY,MAAP,GACAZ,MAAM,CAACa,GAAP,GAAab,MAH7B;AAKA,SAAOA,MAAP;AACD;;AAAA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAc,OAAO,CAACC,mBAAR,GAA8B,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AACpD,MAAI,CAACA,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIC,MAAM,GAAGD,OAAO,CAACC,MAArB;;AAEA,MAAIF,GAAG,CAACG,UAAJ,IAAkBH,GAAG,CAACI,OAAJ,KAAgBF,MAAlC,IAA4CF,GAAG,CAACK,YAAJ,KAAqBJ,OAAO,CAACK,WAA7E,EAA0F;AACxF,WAAON,GAAP;AACD;;AAEDA,EAAAA,GAAG,CAACI,OAAJ,GAAcF,MAAd;AACAF,EAAAA,GAAG,CAACK,YAAJ,GAAmBJ,OAAO,CAACK,WAA3B;AACA,MAAIC,SAAS,GAAG,IAAI/B,SAAJ,CAAc0B,MAAd,EAAsBD,OAAO,CAACK,WAA9B,CAAhB;AACAN,EAAAA,GAAG,CAACQ,QAAJ,CAAaC,SAAb,CAAuBC,UAAvB,GAAoCH,SAApC;AACAP,EAAAA,GAAG,CAACQ,QAAJ,CAAaC,SAAb,CAAuBE,QAAvB,GAAkCX,GAAG,CAACY,iBAAtC;AAEAjC,EAAAA,YAAY,CAACqB,GAAG,CAACQ,QAAJ,CAAaC,SAAd,EAAyB,cAAzB,EAAyC,YAAW;AAC9D,QAAI,CAAC,KAAKI,aAAV,EAAyB;AACvB,WAAKA,aAAL,GAAqB/B,kBAAkB,CAAC,IAAD,CAAvC;AACD;;AACD,WAAO,KAAK+B,aAAZ;AACD,GALW,CAAZ;AAOAb,EAAAA,GAAG,CAACG,UAAJ,GAAiB,IAAjB;AACA,SAAOH,GAAP;AACD,CA1BD","sourcesContent":["var HtmlToDom     = require('./htmltodom').HtmlToDom,\n    jsdom         = require('../../jsdom'),\n    defineGetter  = require('../utils').defineGetter,\n    defineSetter  = require('../utils').defineSetter,\n    Window        = require('./Window');\n\nfunction windowAugmentation(document) {\n  var window = createWindow(document);\n\n  if (document.addEventListener) {\n    if (document.readyState == 'complete') {\n      var ev = document.createEvent('HTMLEvents');\n      ev.initEvent('load', false, false);\n      process.nextTick(function () {\n        window.dispatchEvent(ev);\n      });\n    }\n    else {\n      document.addEventListener('load', function(ev) {\n        window.dispatchEvent(ev);\n      });\n    }\n  }\n\n  return window;\n};\n\nfunction createWindow(document) {\n  var window = new Window(document);\n\n  // Set up the window as if it's a top level window.\n  // If it's not, then references will be corrected by frame/iframe code.\n  // Note: window.frames is maintained in the HTMLFrameElement init function.\n  window.window = window.frames\n                = window.self\n                = window.parent\n                = window.top = window;\n\n  return window;\n};\n\n/**\n * Augments the given DOM by adding browser-specific properties and methods (BOM).\n * Returns the augmented DOM.\n */\n// TODO: this function is HORIBBLE. It modifies the *shared* `dom` variable with document-specific stuff.\n// We call it in `jsdom.jsdom`, i.e. per-document. The checks `if (dom._augment && ...)` just mean that it won't modify\n// the global twice *for the same options*. Bad stuff.\n//\n// None of the properties set here should be on `dom`, really.\nexports.browserAugmentation = function (dom, options) {\n  if (!options) {\n    options = {};\n  }\n\n  var parser = options.parser;\n\n  if (dom._augmented && dom._parser === parser && dom._parsingMode === options.parsingMode) {\n    return dom;\n  }\n\n  dom._parser = parser;\n  dom._parsingMode = options.parsingMode;\n  var htmltodom = new HtmlToDom(parser, options.parsingMode);\n  dom.Document.prototype._htmlToDom = htmltodom;\n  dom.Document.prototype._domImpl = dom.DOMImplementation;\n\n  defineGetter(dom.Document.prototype, 'parentWindow', function() {\n    if (!this._parentWindow) {\n      this._parentWindow = windowAugmentation(this);\n    }\n    return this._parentWindow;\n  });\n\n  dom._augmented = true;\n  return dom;\n};\n"]},"metadata":{},"sourceType":"script"}