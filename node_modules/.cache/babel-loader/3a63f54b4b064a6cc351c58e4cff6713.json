{"ast":null,"code":"'use strict';\n\nvar Preprocessor = require('./preprocessor'),\n    LocationInfoMixin = require('./location_info_mixin'),\n    UNICODE = require('../common/unicode'),\n    NAMED_ENTITY_TRIE = require('./named_entity_trie'); //Aliases\n\n\nvar $ = UNICODE.CODE_POINTS,\n    $$ = UNICODE.CODE_POINT_SEQUENCES; //Replacement code points for numeric entities\n\nvar NUMERIC_ENTITY_REPLACEMENTS = {\n  0x00: 0xFFFD,\n  0x0D: 0x000D,\n  0x80: 0x20AC,\n  0x81: 0x0081,\n  0x82: 0x201A,\n  0x83: 0x0192,\n  0x84: 0x201E,\n  0x85: 0x2026,\n  0x86: 0x2020,\n  0x87: 0x2021,\n  0x88: 0x02C6,\n  0x89: 0x2030,\n  0x8A: 0x0160,\n  0x8B: 0x2039,\n  0x8C: 0x0152,\n  0x8D: 0x008D,\n  0x8E: 0x017D,\n  0x8F: 0x008F,\n  0x90: 0x0090,\n  0x91: 0x2018,\n  0x92: 0x2019,\n  0x93: 0x201C,\n  0x94: 0x201D,\n  0x95: 0x2022,\n  0x96: 0x2013,\n  0x97: 0x2014,\n  0x98: 0x02DC,\n  0x99: 0x2122,\n  0x9A: 0x0161,\n  0x9B: 0x203A,\n  0x9C: 0x0153,\n  0x9D: 0x009D,\n  0x9E: 0x017E,\n  0x9F: 0x0178\n}; //States\n\nvar DATA_STATE = 'DATA_STATE',\n    CHARACTER_REFERENCE_IN_DATA_STATE = 'CHARACTER_REFERENCE_IN_DATA_STATE',\n    RCDATA_STATE = 'RCDATA_STATE',\n    CHARACTER_REFERENCE_IN_RCDATA_STATE = 'CHARACTER_REFERENCE_IN_RCDATA_STATE',\n    RAWTEXT_STATE = 'RAWTEXT_STATE',\n    SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE',\n    PLAINTEXT_STATE = 'PLAINTEXT_STATE',\n    TAG_OPEN_STATE = 'TAG_OPEN_STATE',\n    END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE',\n    TAG_NAME_STATE = 'TAG_NAME_STATE',\n    RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE',\n    RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE',\n    RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE',\n    RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE',\n    RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE',\n    RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE',\n    SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE',\n    SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE',\n    SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE',\n    SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE',\n    SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE',\n    BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE',\n    ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE',\n    AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE',\n    BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE',\n    ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE',\n    ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE',\n    CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE = 'CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE',\n    AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE',\n    SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE',\n    BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE',\n    MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE',\n    COMMENT_START_STATE = 'COMMENT_START_STATE',\n    COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE',\n    COMMENT_STATE = 'COMMENT_STATE',\n    COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE',\n    COMMENT_END_STATE = 'COMMENT_END_STATE',\n    COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE',\n    DOCTYPE_STATE = 'DOCTYPE_STATE',\n    BEFORE_DOCTYPE_NAME_STATE = 'BEFORE_DOCTYPE_NAME_STATE',\n    DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE',\n    AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE',\n    AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = 'AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE',\n    BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE',\n    AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE',\n    BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE',\n    AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = 'AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE',\n    BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE',\n    DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE',\n    AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\n    BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE',\n    CDATA_SECTION_STATE = 'CDATA_SECTION_STATE'; //Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\n\nfunction isWhitespace(cp) {\n  return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\n\nfunction isAsciiDigit(cp) {\n  return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\n\nfunction isAsciiUpper(cp) {\n  return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\n\nfunction isAsciiLower(cp) {\n  return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\n\nfunction isAsciiAlphaNumeric(cp) {\n  return isAsciiDigit(cp) || isAsciiUpper(cp) || isAsciiLower(cp);\n}\n\nfunction isDigit(cp, isHex) {\n  return isAsciiDigit(cp) || isHex && (cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F || cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F);\n}\n\nfunction isReservedCodePoint(cp) {\n  return cp >= 0xD800 && cp <= 0xDFFF || cp > 0x10FFFF;\n}\n\nfunction toAsciiLowerCodePoint(cp) {\n  return cp + 0x0020;\n} //NOTE: String.fromCharCode() function can handle only characters from BMP subset.\n//So, we need to workaround this manually.\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\n\n\nfunction toChar(cp) {\n  if (cp <= 0xFFFF) return String.fromCharCode(cp);\n  cp -= 0x10000;\n  return String.fromCharCode(cp >>> 10 & 0x3FF | 0xD800) + String.fromCharCode(0xDC00 | cp & 0x3FF);\n}\n\nfunction toAsciiLowerChar(cp) {\n  return String.fromCharCode(toAsciiLowerCodePoint(cp));\n} //Tokenizer\n\n\nvar Tokenizer = module.exports = function (html, options) {\n  this.disableEntitiesDecoding = false;\n  this.preprocessor = new Preprocessor(html);\n  this.tokenQueue = [];\n  this.allowCDATA = false;\n  this.state = DATA_STATE;\n  this.returnState = '';\n  this.consumptionPos = 0;\n  this.tempBuff = [];\n  this.additionalAllowedCp = void 0;\n  this.lastStartTagName = '';\n  this.currentCharacterToken = null;\n  this.currentToken = null;\n  this.currentAttr = null;\n\n  if (options) {\n    this.disableEntitiesDecoding = !options.decodeHtmlEntities;\n    if (options.locationInfo) LocationInfoMixin.assign(this);\n  }\n}; //Token types\n\n\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\nTokenizer.EOF_TOKEN = 'EOF_TOKEN'; //Tokenizer initial states for different modes\n\nTokenizer.MODE = Tokenizer.prototype.MODE = {\n  DATA: DATA_STATE,\n  RCDATA: RCDATA_STATE,\n  RAWTEXT: RAWTEXT_STATE,\n  SCRIPT_DATA: SCRIPT_DATA_STATE,\n  PLAINTEXT: PLAINTEXT_STATE\n}; //Static\n\nTokenizer.getTokenAttr = function (token, attrName) {\n  for (var i = token.attrs.length - 1; i >= 0; i--) {\n    if (token.attrs[i].name === attrName) return token.attrs[i].value;\n  }\n\n  return null;\n}; //Get token\n\n\nTokenizer.prototype.getNextToken = function () {\n  while (!this.tokenQueue.length) this[this.state](this._consume());\n\n  return this.tokenQueue.shift();\n}; //Consumption\n\n\nTokenizer.prototype._consume = function () {\n  this.consumptionPos++;\n  return this.preprocessor.advanceAndPeekCodePoint();\n};\n\nTokenizer.prototype._unconsume = function () {\n  this.consumptionPos--;\n  this.preprocessor.retreat();\n};\n\nTokenizer.prototype._unconsumeSeveral = function (count) {\n  while (count--) this._unconsume();\n};\n\nTokenizer.prototype._reconsumeInState = function (state) {\n  this.state = state;\n\n  this._unconsume();\n};\n\nTokenizer.prototype._consumeSubsequentIfMatch = function (pattern, startCp, caseSensitive) {\n  var rollbackPos = this.consumptionPos,\n      isMatch = true,\n      patternLength = pattern.length,\n      patternPos = 0,\n      cp = startCp,\n      patternCp = void 0;\n\n  for (; patternPos < patternLength; patternPos++) {\n    if (patternPos > 0) cp = this._consume();\n\n    if (cp === $.EOF) {\n      isMatch = false;\n      break;\n    }\n\n    patternCp = pattern[patternPos];\n\n    if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\n      isMatch = false;\n      break;\n    }\n  }\n\n  if (!isMatch) this._unconsumeSeveral(this.consumptionPos - rollbackPos);\n  return isMatch;\n}; //Lookahead\n\n\nTokenizer.prototype._lookahead = function () {\n  var cp = this.preprocessor.advanceAndPeekCodePoint();\n  this.preprocessor.retreat();\n  return cp;\n}; //Temp buffer\n\n\nTokenizer.prototype.isTempBufferEqualToScriptString = function () {\n  if (this.tempBuff.length !== $$.SCRIPT_STRING.length) return false;\n\n  for (var i = 0; i < this.tempBuff.length; i++) {\n    if (this.tempBuff[i] !== $$.SCRIPT_STRING[i]) return false;\n  }\n\n  return true;\n}; //Token creation\n\n\nTokenizer.prototype.buildStartTagToken = function (tagName) {\n  return {\n    type: Tokenizer.START_TAG_TOKEN,\n    tagName: tagName,\n    selfClosing: false,\n    attrs: []\n  };\n};\n\nTokenizer.prototype.buildEndTagToken = function (tagName) {\n  return {\n    type: Tokenizer.END_TAG_TOKEN,\n    tagName: tagName,\n    ignored: false,\n    attrs: []\n  };\n};\n\nTokenizer.prototype._createStartTagToken = function (tagNameFirstCh) {\n  this.currentToken = this.buildStartTagToken(tagNameFirstCh);\n};\n\nTokenizer.prototype._createEndTagToken = function (tagNameFirstCh) {\n  this.currentToken = this.buildEndTagToken(tagNameFirstCh);\n};\n\nTokenizer.prototype._createCommentToken = function () {\n  this.currentToken = {\n    type: Tokenizer.COMMENT_TOKEN,\n    data: ''\n  };\n};\n\nTokenizer.prototype._createDoctypeToken = function (doctypeNameFirstCh) {\n  this.currentToken = {\n    type: Tokenizer.DOCTYPE_TOKEN,\n    name: doctypeNameFirstCh || '',\n    forceQuirks: false,\n    publicId: null,\n    systemId: null\n  };\n};\n\nTokenizer.prototype._createCharacterToken = function (type, ch) {\n  this.currentCharacterToken = {\n    type: type,\n    chars: ch\n  };\n}; //Tag attributes\n\n\nTokenizer.prototype._createAttr = function (attrNameFirstCh) {\n  this.currentAttr = {\n    name: attrNameFirstCh,\n    value: ''\n  };\n};\n\nTokenizer.prototype._isDuplicateAttr = function () {\n  return Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) !== null;\n};\n\nTokenizer.prototype._leaveAttrName = function (toState) {\n  this.state = toState;\n  if (!this._isDuplicateAttr()) this.currentToken.attrs.push(this.currentAttr);\n}; //Appropriate end tag token\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#appropriate-end-tag-token)\n\n\nTokenizer.prototype._isAppropriateEndTagToken = function () {\n  return this.lastStartTagName === this.currentToken.tagName;\n}; //Token emission\n\n\nTokenizer.prototype._emitCurrentToken = function () {\n  this._emitCurrentCharacterToken(); //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\n\n\n  if (this.currentToken.type === Tokenizer.START_TAG_TOKEN) this.lastStartTagName = this.currentToken.tagName;\n  this.tokenQueue.push(this.currentToken);\n  this.currentToken = null;\n};\n\nTokenizer.prototype._emitCurrentCharacterToken = function () {\n  if (this.currentCharacterToken) {\n    this.tokenQueue.push(this.currentCharacterToken);\n    this.currentCharacterToken = null;\n  }\n};\n\nTokenizer.prototype._emitEOFToken = function () {\n  this._emitCurrentCharacterToken();\n\n  this.tokenQueue.push({\n    type: Tokenizer.EOF_TOKEN\n  });\n}; //Characters emission\n//OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n//This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n//If we have a sequence of characters that belong to the same group, parser can process it\n//as a single solid character token.\n//So, there are 3 types of character tokens in parse5:\n//1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n//2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n//3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n\n\nTokenizer.prototype._appendCharToCurrentCharacterToken = function (type, ch) {\n  if (this.currentCharacterToken && this.currentCharacterToken.type !== type) this._emitCurrentCharacterToken();\n  if (this.currentCharacterToken) this.currentCharacterToken.chars += ch;else this._createCharacterToken(type, ch);\n};\n\nTokenizer.prototype._emitCodePoint = function (cp) {\n  var type = Tokenizer.CHARACTER_TOKEN;\n  if (isWhitespace(cp)) type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;else if (cp === $.NULL) type = Tokenizer.NULL_CHARACTER_TOKEN;\n\n  this._appendCharToCurrentCharacterToken(type, toChar(cp));\n};\n\nTokenizer.prototype._emitSeveralCodePoints = function (codePoints) {\n  for (var i = 0; i < codePoints.length; i++) this._emitCodePoint(codePoints[i]);\n}; //NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\n//So we can avoid additional checks here.\n\n\nTokenizer.prototype._emitChar = function (ch) {\n  this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\n}; //Character reference tokenization\n\n\nTokenizer.prototype._consumeNumericEntity = function (isHex) {\n  var digits = '',\n      nextCp = void 0;\n\n  do {\n    digits += toChar(this._consume());\n    nextCp = this._lookahead();\n  } while (nextCp !== $.EOF && isDigit(nextCp, isHex));\n\n  if (this._lookahead() === $.SEMICOLON) this._consume();\n  var referencedCp = parseInt(digits, isHex ? 16 : 10),\n      replacement = NUMERIC_ENTITY_REPLACEMENTS[referencedCp];\n  if (replacement) return replacement;\n  if (isReservedCodePoint(referencedCp)) return $.REPLACEMENT_CHARACTER;\n  return referencedCp;\n};\n\nTokenizer.prototype._consumeNamedEntity = function (startCp, inAttr) {\n  var referencedCodePoints = null,\n      entityCodePointsCount = 0,\n      cp = startCp,\n      leaf = NAMED_ENTITY_TRIE[cp],\n      consumedCount = 1,\n      semicolonTerminated = false;\n\n  for (; leaf && cp !== $.EOF; cp = this._consume(), consumedCount++, leaf = leaf.l && leaf.l[cp]) {\n    if (leaf.c) {\n      //NOTE: we have at least one named reference match. But we don't stop lookup at this point,\n      //because longer matches still can be found (e.g. '&not' and '&notin;') except the case\n      //then found match is terminated by semicolon.\n      referencedCodePoints = leaf.c;\n      entityCodePointsCount = consumedCount;\n\n      if (cp === $.SEMICOLON) {\n        semicolonTerminated = true;\n        break;\n      }\n    }\n  }\n\n  if (referencedCodePoints) {\n    if (!semicolonTerminated) {\n      //NOTE: unconsume excess (e.g. 'it' in '&notit')\n      this._unconsumeSeveral(consumedCount - entityCodePointsCount); //NOTE: If the character reference is being consumed as part of an attribute and the next character\n      //is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical\n      //reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be\n      //unconsumed, and nothing is returned.\n      //However, if this next character is in fact a U+003D EQUALS SIGN character (=), then this is a\n      //parse error, because some legacy user agents will misinterpret the markup in those cases.\n      //(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references)\n\n\n      if (inAttr) {\n        var nextCp = this._lookahead();\n\n        if (nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp)) {\n          this._unconsumeSeveral(entityCodePointsCount);\n\n          return null;\n        }\n      }\n    }\n\n    return referencedCodePoints;\n  }\n\n  this._unconsumeSeveral(consumedCount);\n\n  return null;\n};\n\nTokenizer.prototype._consumeCharacterReference = function (startCp, inAttr) {\n  if (this.disableEntitiesDecoding || isWhitespace(startCp) || startCp === $.GREATER_THAN_SIGN || startCp === $.AMPERSAND || startCp === this.additionalAllowedCp || startCp === $.EOF) {\n    //NOTE: not a character reference. No characters are consumed, and nothing is returned.\n    this._unconsume();\n\n    return null;\n  } else if (startCp === $.NUMBER_SIGN) {\n    //NOTE: we have a numeric entity candidate, now we should determine if it's hex or decimal\n    var isHex = false,\n        nextCp = this._lookahead();\n\n    if (nextCp === $.LATIN_SMALL_X || nextCp === $.LATIN_CAPITAL_X) {\n      this._consume();\n\n      isHex = true;\n    }\n\n    nextCp = this._lookahead(); //NOTE: if we have at least one digit this is a numeric entity for sure, so we consume it\n\n    if (nextCp !== $.EOF && isDigit(nextCp, isHex)) return [this._consumeNumericEntity(isHex)];else {\n      //NOTE: otherwise this is a bogus number entity and a parse error. Unconsume the number sign\n      //and the 'x'-character if appropriate.\n      this._unconsumeSeveral(isHex ? 2 : 1);\n\n      return null;\n    }\n  } else return this._consumeNamedEntity(startCp, inAttr);\n}; //State machine\n\n\nvar _ = Tokenizer.prototype; //12.2.4.1 Data state\n//------------------------------------------------------------------\n\n_[DATA_STATE] = function dataState(cp) {\n  if (cp === $.AMPERSAND) this.state = CHARACTER_REFERENCE_IN_DATA_STATE;else if (cp === $.LESS_THAN_SIGN) this.state = TAG_OPEN_STATE;else if (cp === $.NULL) this._emitCodePoint(cp);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n}; //12.2.4.2 Character reference in data state\n//------------------------------------------------------------------\n\n\n_[CHARACTER_REFERENCE_IN_DATA_STATE] = function characterReferenceInDataState(cp) {\n  this.state = DATA_STATE;\n  this.additionalAllowedCp = void 0;\n\n  var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n  if (referencedCodePoints) this._emitSeveralCodePoints(referencedCodePoints);else this._emitChar('&');\n}; //12.2.4.3 RCDATA state\n//------------------------------------------------------------------\n\n\n_[RCDATA_STATE] = function rcdataState(cp) {\n  if (cp === $.AMPERSAND) this.state = CHARACTER_REFERENCE_IN_RCDATA_STATE;else if (cp === $.LESS_THAN_SIGN) this.state = RCDATA_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n}; //12.2.4.4 Character reference in RCDATA state\n//------------------------------------------------------------------\n\n\n_[CHARACTER_REFERENCE_IN_RCDATA_STATE] = function characterReferenceInRcdataState(cp) {\n  this.state = RCDATA_STATE;\n  this.additionalAllowedCp = void 0;\n\n  var referencedCodePoints = this._consumeCharacterReference(cp, false);\n\n  if (referencedCodePoints) this._emitSeveralCodePoints(referencedCodePoints);else this._emitChar('&');\n}; //12.2.4.5 RAWTEXT state\n//------------------------------------------------------------------\n\n\n_[RAWTEXT_STATE] = function rawtextState(cp) {\n  if (cp === $.LESS_THAN_SIGN) this.state = RAWTEXT_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n}; //12.2.4.6 Script data state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_STATE] = function scriptDataState(cp) {\n  if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n}; //12.2.4.7 PLAINTEXT state\n//------------------------------------------------------------------\n\n\n_[PLAINTEXT_STATE] = function plaintextState(cp) {\n  if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._emitEOFToken();else this._emitCodePoint(cp);\n}; //12.2.4.8 Tag open state\n//------------------------------------------------------------------\n\n\n_[TAG_OPEN_STATE] = function tagOpenState(cp) {\n  if (cp === $.EXCLAMATION_MARK) this.state = MARKUP_DECLARATION_OPEN_STATE;else if (cp === $.SOLIDUS) this.state = END_TAG_OPEN_STATE;else if (isAsciiUpper(cp)) {\n    this._createStartTagToken(toAsciiLowerChar(cp));\n\n    this.state = TAG_NAME_STATE;\n  } else if (isAsciiLower(cp)) {\n    this._createStartTagToken(toChar(cp));\n\n    this.state = TAG_NAME_STATE;\n  } else if (cp === $.QUESTION_MARK) {\n    //NOTE: call bogus comment state directly with current consumed character to avoid unnecessary reconsumption.\n    this[BOGUS_COMMENT_STATE](cp);\n  } else {\n    this._emitChar('<');\n\n    this._reconsumeInState(DATA_STATE);\n  }\n}; //12.2.4.9 End tag open state\n//------------------------------------------------------------------\n\n\n_[END_TAG_OPEN_STATE] = function endTagOpenState(cp) {\n  if (isAsciiUpper(cp)) {\n    this._createEndTagToken(toAsciiLowerChar(cp));\n\n    this.state = TAG_NAME_STATE;\n  } else if (isAsciiLower(cp)) {\n    this._createEndTagToken(toChar(cp));\n\n    this.state = TAG_NAME_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) this.state = DATA_STATE;else if (cp === $.EOF) {\n    this._reconsumeInState(DATA_STATE);\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n  } else {\n    //NOTE: call bogus comment state directly with current consumed character to avoid unnecessary reconsumption.\n    this[BOGUS_COMMENT_STATE](cp);\n  }\n}; //12.2.4.10 Tag name state\n//------------------------------------------------------------------\n\n\n_[TAG_NAME_STATE] = function tagNameState(cp) {\n  if (isWhitespace(cp)) this.state = BEFORE_ATTRIBUTE_NAME_STATE;else if (cp === $.SOLIDUS) this.state = SELF_CLOSING_START_TAG_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (isAsciiUpper(cp)) this.currentToken.tagName += toAsciiLowerChar(cp);else if (cp === $.NULL) this.currentToken.tagName += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentToken.tagName += toChar(cp);\n}; //12.2.4.11 RCDATA less-than sign state\n//------------------------------------------------------------------\n\n\n_[RCDATA_LESS_THAN_SIGN_STATE] = function rcdataLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = RCDATA_END_TAG_OPEN_STATE;\n  } else {\n    this._emitChar('<');\n\n    this._reconsumeInState(RCDATA_STATE);\n  }\n}; //12.2.4.12 RCDATA end tag open state\n//------------------------------------------------------------------\n\n\n_[RCDATA_END_TAG_OPEN_STATE] = function rcdataEndTagOpenState(cp) {\n  if (isAsciiUpper(cp)) {\n    this._createEndTagToken(toAsciiLowerChar(cp));\n\n    this.tempBuff.push(cp);\n    this.state = RCDATA_END_TAG_NAME_STATE;\n  } else if (isAsciiLower(cp)) {\n    this._createEndTagToken(toChar(cp));\n\n    this.tempBuff.push(cp);\n    this.state = RCDATA_END_TAG_NAME_STATE;\n  } else {\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._reconsumeInState(RCDATA_STATE);\n  }\n}; //12.2.4.13 RCDATA end tag name state\n//------------------------------------------------------------------\n\n\n_[RCDATA_END_TAG_NAME_STATE] = function rcdataEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      }\n\n      if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      }\n\n      if (cp === $.GREATER_THAN_SIGN) {\n        this.state = DATA_STATE;\n\n        this._emitCurrentToken();\n\n        return;\n      }\n    }\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._emitSeveralCodePoints(this.tempBuff);\n\n    this._reconsumeInState(RCDATA_STATE);\n  }\n}; //12.2.4.14 RAWTEXT less-than sign state\n//------------------------------------------------------------------\n\n\n_[RAWTEXT_LESS_THAN_SIGN_STATE] = function rawtextLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = RAWTEXT_END_TAG_OPEN_STATE;\n  } else {\n    this._emitChar('<');\n\n    this._reconsumeInState(RAWTEXT_STATE);\n  }\n}; //12.2.4.15 RAWTEXT end tag open state\n//------------------------------------------------------------------\n\n\n_[RAWTEXT_END_TAG_OPEN_STATE] = function rawtextEndTagOpenState(cp) {\n  if (isAsciiUpper(cp)) {\n    this._createEndTagToken(toAsciiLowerChar(cp));\n\n    this.tempBuff.push(cp);\n    this.state = RAWTEXT_END_TAG_NAME_STATE;\n  } else if (isAsciiLower(cp)) {\n    this._createEndTagToken(toChar(cp));\n\n    this.tempBuff.push(cp);\n    this.state = RAWTEXT_END_TAG_NAME_STATE;\n  } else {\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._reconsumeInState(RAWTEXT_STATE);\n  }\n}; //12.2.4.16 RAWTEXT end tag name state\n//------------------------------------------------------------------\n\n\n_[RAWTEXT_END_TAG_NAME_STATE] = function rawtextEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      }\n\n      if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      }\n\n      if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n\n        this.state = DATA_STATE;\n        return;\n      }\n    }\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._emitSeveralCodePoints(this.tempBuff);\n\n    this._reconsumeInState(RAWTEXT_STATE);\n  }\n}; //12.2.4.17 Script data less-than sign state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_LESS_THAN_SIGN_STATE] = function scriptDataLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\n  } else if (cp === $.EXCLAMATION_MARK) {\n    this.state = SCRIPT_DATA_ESCAPE_START_STATE;\n\n    this._emitChar('<');\n\n    this._emitChar('!');\n  } else {\n    this._emitChar('<');\n\n    this._reconsumeInState(SCRIPT_DATA_STATE);\n  }\n}; //12.2.4.18 Script data end tag open state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_END_TAG_OPEN_STATE] = function scriptDataEndTagOpenState(cp) {\n  if (isAsciiUpper(cp)) {\n    this._createEndTagToken(toAsciiLowerChar(cp));\n\n    this.tempBuff.push(cp);\n    this.state = SCRIPT_DATA_END_TAG_NAME_STATE;\n  } else if (isAsciiLower(cp)) {\n    this._createEndTagToken(toChar(cp));\n\n    this.tempBuff.push(cp);\n    this.state = SCRIPT_DATA_END_TAG_NAME_STATE;\n  } else {\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._reconsumeInState(SCRIPT_DATA_STATE);\n  }\n}; //12.2.4.19 Script data end tag name state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_END_TAG_NAME_STATE] = function scriptDataEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      } else if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      } else if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n\n        this.state = DATA_STATE;\n        return;\n      }\n    }\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._emitSeveralCodePoints(this.tempBuff);\n\n    this._reconsumeInState(SCRIPT_DATA_STATE);\n  }\n}; //12.2.4.20 Script data escape start state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPE_START_STATE] = function scriptDataEscapeStartState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\n\n    this._emitChar('-');\n  } else this._reconsumeInState(SCRIPT_DATA_STATE);\n}; //12.2.4.21 Script data escape start dash state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPE_START_DASH_STATE] = function scriptDataEscapeStartDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n\n    this._emitChar('-');\n  } else this._reconsumeInState(SCRIPT_DATA_STATE);\n}; //12.2.4.22 Script data escaped state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPED_STATE] = function scriptDataEscapedState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\n\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._emitCodePoint(cp);\n}; //12.2.4.23 Script data escaped dash state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPED_DASH_STATE] = function scriptDataEscapedDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\n\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  }\n}; //12.2.4.24 Script data escaped dash dash state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPED_DASH_DASH_STATE] = function scriptDataEscapedDashDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this._emitChar('-');else if (cp === $.LESS_THAN_SIGN) this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = SCRIPT_DATA_STATE;\n\n    this._emitChar('>');\n  } else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  }\n}; //12.2.4.25 Script data escaped less-than sign state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataEscapedLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\n  } else if (isAsciiUpper(cp)) {\n    this.tempBuff = [];\n    this.tempBuff.push(toAsciiLowerCodePoint(cp));\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE;\n\n    this._emitChar('<');\n\n    this._emitCodePoint(cp);\n  } else if (isAsciiLower(cp)) {\n    this.tempBuff = [];\n    this.tempBuff.push(cp);\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE;\n\n    this._emitChar('<');\n\n    this._emitCodePoint(cp);\n  } else {\n    this._emitChar('<');\n\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n  }\n}; //12.2.4.26 Script data escaped end tag open state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE] = function scriptDataEscapedEndTagOpenState(cp) {\n  if (isAsciiUpper(cp)) {\n    this._createEndTagToken(toAsciiLowerChar(cp));\n\n    this.tempBuff.push(cp);\n    this.state = SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE;\n  } else if (isAsciiLower(cp)) {\n    this._createEndTagToken(toChar(cp));\n\n    this.tempBuff.push(cp);\n    this.state = SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE;\n  } else {\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n  }\n}; //12.2.4.27 Script data escaped end tag name state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE] = function scriptDataEscapedEndTagNameState(cp) {\n  if (isAsciiUpper(cp)) {\n    this.currentToken.tagName += toAsciiLowerChar(cp);\n    this.tempBuff.push(cp);\n  } else if (isAsciiLower(cp)) {\n    this.currentToken.tagName += toChar(cp);\n    this.tempBuff.push(cp);\n  } else {\n    if (this._isAppropriateEndTagToken()) {\n      if (isWhitespace(cp)) {\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\n        return;\n      }\n\n      if (cp === $.SOLIDUS) {\n        this.state = SELF_CLOSING_START_TAG_STATE;\n        return;\n      }\n\n      if (cp === $.GREATER_THAN_SIGN) {\n        this._emitCurrentToken();\n\n        this.state = DATA_STATE;\n        return;\n      }\n    }\n\n    this._emitChar('<');\n\n    this._emitChar('/');\n\n    this._emitSeveralCodePoints(this.tempBuff);\n\n    this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n  }\n}; //12.2.4.28 Script data double escape start state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE] = function scriptDataDoubleEscapeStartState(cp) {\n  if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n    this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  } else if (isAsciiUpper(cp)) {\n    this.tempBuff.push(toAsciiLowerCodePoint(cp));\n\n    this._emitCodePoint(cp);\n  } else if (isAsciiLower(cp)) {\n    this.tempBuff.push(cp);\n\n    this._emitCodePoint(cp);\n  } else this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\n}; //12.2.4.29 Script data double escaped state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_DOUBLE_ESCAPED_STATE] = function scriptDataDoubleEscapedState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\n\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    this._emitChar('<');\n  } else if (cp === $.NULL) this._emitChar(UNICODE.REPLACEMENT_CHARACTER);else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._emitCodePoint(cp);\n}; //12.2.4.30 Script data double escaped dash state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE] = function scriptDataDoubleEscapedDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\n\n    this._emitChar('-');\n  } else if (cp === $.LESS_THAN_SIGN) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    this._emitChar('<');\n  } else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  }\n}; //12.2.4.31 Script data double escaped dash dash state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE] = function scriptDataDoubleEscapedDashDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this._emitChar('-');else if (cp === $.LESS_THAN_SIGN) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\n\n    this._emitChar('<');\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = SCRIPT_DATA_STATE;\n\n    this._emitChar('>');\n  } else if (cp === $.NULL) {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  }\n}; //12.2.4.32 Script data double escaped less-than sign state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataDoubleEscapedLessThanSignState(cp) {\n  if (cp === $.SOLIDUS) {\n    this.tempBuff = [];\n    this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\n\n    this._emitChar('/');\n  } else this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n}; //12.2.4.33 Script data double escape end state\n//------------------------------------------------------------------\n\n\n_[SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE] = function scriptDataDoubleEscapeEndState(cp) {\n  if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\n    this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\n\n    this._emitCodePoint(cp);\n  } else if (isAsciiUpper(cp)) {\n    this.tempBuff.push(toAsciiLowerCodePoint(cp));\n\n    this._emitCodePoint(cp);\n  } else if (isAsciiLower(cp)) {\n    this.tempBuff.push(cp);\n\n    this._emitCodePoint(cp);\n  } else this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\n}; //12.2.4.34 Before attribute name state\n//------------------------------------------------------------------\n\n\n_[BEFORE_ATTRIBUTE_NAME_STATE] = function beforeAttributeNameState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.SOLIDUS) this.state = SELF_CLOSING_START_TAG_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (isAsciiUpper(cp)) {\n    this._createAttr(toAsciiLowerChar(cp));\n\n    this.state = ATTRIBUTE_NAME_STATE;\n  } else if (cp === $.NULL) {\n    this._createAttr(UNICODE.REPLACEMENT_CHARACTER);\n\n    this.state = ATTRIBUTE_NAME_STATE;\n  } else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN || cp === $.EQUALS_SIGN) {\n    this._createAttr(toChar(cp));\n\n    this.state = ATTRIBUTE_NAME_STATE;\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this._createAttr(toChar(cp));\n\n    this.state = ATTRIBUTE_NAME_STATE;\n  }\n}; //12.2.4.35 Attribute name state\n//------------------------------------------------------------------\n\n\n_[ATTRIBUTE_NAME_STATE] = function attributeNameState(cp) {\n  if (isWhitespace(cp)) this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);else if (cp === $.SOLIDUS) this._leaveAttrName(SELF_CLOSING_START_TAG_STATE);else if (cp === $.EQUALS_SIGN) this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);else if (cp === $.GREATER_THAN_SIGN) {\n    this._leaveAttrName(DATA_STATE);\n\n    this._emitCurrentToken();\n  } else if (isAsciiUpper(cp)) this.currentAttr.name += toAsciiLowerChar(cp);else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) this.currentAttr.name += toChar(cp);else if (cp === $.NULL) this.currentAttr.name += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentAttr.name += toChar(cp);\n}; //12.2.4.36 After attribute name state\n//------------------------------------------------------------------\n\n\n_[AFTER_ATTRIBUTE_NAME_STATE] = function afterAttributeNameState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.SOLIDUS) this.state = SELF_CLOSING_START_TAG_STATE;else if (cp === $.EQUALS_SIGN) this.state = BEFORE_ATTRIBUTE_VALUE_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (isAsciiUpper(cp)) {\n    this._createAttr(toAsciiLowerChar(cp));\n\n    this.state = ATTRIBUTE_NAME_STATE;\n  } else if (cp === $.NULL) {\n    this._createAttr(UNICODE.REPLACEMENT_CHARACTER);\n\n    this.state = ATTRIBUTE_NAME_STATE;\n  } else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) {\n    this._createAttr(toChar(cp));\n\n    this.state = ATTRIBUTE_NAME_STATE;\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this._createAttr(toChar(cp));\n\n    this.state = ATTRIBUTE_NAME_STATE;\n  }\n}; //12.2.4.37 Before attribute value state\n//------------------------------------------------------------------\n\n\n_[BEFORE_ATTRIBUTE_VALUE_STATE] = function beforeAttributeValueState(cp) {\n  if (isWhitespace(cp)) return;\n  if (cp === $.QUOTATION_MARK) this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;else if (cp === $.AMPERSAND) this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);else if (cp === $.APOSTROPHE) this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;else if (cp === $.NULL) {\n    this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = ATTRIBUTE_VALUE_UNQUOTED_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.LESS_THAN_SIGN || cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT) {\n    this.currentAttr.value += toChar(cp);\n    this.state = ATTRIBUTE_VALUE_UNQUOTED_STATE;\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else {\n    this.currentAttr.value += toChar(cp);\n    this.state = ATTRIBUTE_VALUE_UNQUOTED_STATE;\n  }\n}; //12.2.4.38 Attribute value (double-quoted) state\n//------------------------------------------------------------------\n\n\n_[ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE] = function attributeValueDoubleQuotedState(cp) {\n  if (cp === $.QUOTATION_MARK) this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;else if (cp === $.AMPERSAND) {\n    this.additionalAllowedCp = $.QUOTATION_MARK;\n    this.returnState = this.state;\n    this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n  } else if (cp === $.NULL) this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentAttr.value += toChar(cp);\n}; //12.2.4.39 Attribute value (single-quoted) state\n//------------------------------------------------------------------\n\n\n_[ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE] = function attributeValueSingleQuotedState(cp) {\n  if (cp === $.APOSTROPHE) this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;else if (cp === $.AMPERSAND) {\n    this.additionalAllowedCp = $.APOSTROPHE;\n    this.returnState = this.state;\n    this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n  } else if (cp === $.NULL) this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentAttr.value += toChar(cp);\n}; //12.2.4.40 Attribute value (unquoted) state\n//------------------------------------------------------------------\n\n\n_[ATTRIBUTE_VALUE_UNQUOTED_STATE] = function attributeValueUnquotedState(cp) {\n  if (isWhitespace(cp)) this.state = BEFORE_ATTRIBUTE_NAME_STATE;else if (cp === $.AMPERSAND) {\n    this.additionalAllowedCp = $.GREATER_THAN_SIGN;\n    this.returnState = this.state;\n    this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.NULL) this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN || cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT) {\n    this.currentAttr.value += toChar(cp);\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this.currentAttr.value += toChar(cp);\n}; //12.2.4.41 Character reference in attribute value state\n//------------------------------------------------------------------\n\n\n_[CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE] = function characterReferenceInAttributeValueState(cp) {\n  var referencedCodePoints = this._consumeCharacterReference(cp, true);\n\n  if (referencedCodePoints) {\n    for (var i = 0; i < referencedCodePoints.length; i++) this.currentAttr.value += toChar(referencedCodePoints[i]);\n  } else this.currentAttr.value += '&';\n\n  this.state = this.returnState;\n}; //12.2.4.42 After attribute value (quoted) state\n//------------------------------------------------------------------\n\n\n_[AFTER_ATTRIBUTE_VALUE_QUOTED_STATE] = function afterAttributeValueQuotedState(cp) {\n  if (isWhitespace(cp)) this.state = BEFORE_ATTRIBUTE_NAME_STATE;else if (cp === $.SOLIDUS) this.state = SELF_CLOSING_START_TAG_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n}; //12.2.4.43 Self-closing start tag state\n//------------------------------------------------------------------\n\n\n_[SELF_CLOSING_START_TAG_STATE] = function selfClosingStartTagState(cp) {\n  if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.selfClosing = true;\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) this._reconsumeInState(DATA_STATE);else this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\n}; //12.2.4.44 Bogus comment state\n//------------------------------------------------------------------\n\n\n_[BOGUS_COMMENT_STATE] = function bogusCommentState(cp) {\n  this._createCommentToken();\n\n  while (true) {\n    if (cp === $.GREATER_THAN_SIGN) {\n      this.state = DATA_STATE;\n      break;\n    } else if (cp === $.EOF) {\n      this._reconsumeInState(DATA_STATE);\n\n      break;\n    } else {\n      this.currentToken.data += cp === $.NULL ? UNICODE.REPLACEMENT_CHARACTER : toChar(cp);\n      cp = this._consume();\n    }\n  }\n\n  this._emitCurrentToken();\n}; //12.2.4.45 Markup declaration open state\n//------------------------------------------------------------------\n\n\n_[MARKUP_DECLARATION_OPEN_STATE] = function markupDeclarationOpenState(cp) {\n  if (this._consumeSubsequentIfMatch($$.DASH_DASH_STRING, cp, true)) {\n    this._createCommentToken();\n\n    this.state = COMMENT_START_STATE;\n  } else if (this._consumeSubsequentIfMatch($$.DOCTYPE_STRING, cp, false)) this.state = DOCTYPE_STATE;else if (this.allowCDATA && this._consumeSubsequentIfMatch($$.CDATA_START_STRING, cp, true)) this.state = CDATA_SECTION_STATE;else {\n    //NOTE: call bogus comment state directly with current consumed character to avoid unnecessary reconsumption.\n    this[BOGUS_COMMENT_STATE](cp);\n  }\n}; //12.2.4.46 Comment start state\n//------------------------------------------------------------------\n\n\n_[COMMENT_START_STATE] = function commentStartState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_START_DASH_STATE;else if (cp === $.NULL) {\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n}; //12.2.4.47 Comment start dash state\n//------------------------------------------------------------------\n\n\n_[COMMENT_START_DASH_STATE] = function commentStartDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_END_STATE;else if (cp === $.NULL) {\n    this.currentToken.data += '-';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += '-';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n}; //12.2.4.48 Comment state\n//------------------------------------------------------------------\n\n\n_[COMMENT_STATE] = function commentState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_END_DASH_STATE;else if (cp === $.NULL) this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.data += toChar(cp);\n}; //12.2.4.49 Comment end dash state\n//------------------------------------------------------------------\n\n\n_[COMMENT_END_DASH_STATE] = function commentEndDashState(cp) {\n  if (cp === $.HYPHEN_MINUS) this.state = COMMENT_END_STATE;else if (cp === $.NULL) {\n    this.currentToken.data += '-';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += '-';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n}; //12.2.4.50 Comment end state\n//------------------------------------------------------------------\n\n\n_[COMMENT_END_STATE] = function commentEndState(cp) {\n  if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EXCLAMATION_MARK) this.state = COMMENT_END_BANG_STATE;else if (cp === $.HYPHEN_MINUS) this.currentToken.data += '-';else if (cp === $.NULL) {\n    this.currentToken.data += '--';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.EOF) {\n    this._reconsumeInState(DATA_STATE);\n\n    this._emitCurrentToken();\n  } else {\n    this.currentToken.data += '--';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n}; //12.2.4.51 Comment end bang state\n//------------------------------------------------------------------\n\n\n_[COMMENT_END_BANG_STATE] = function commentEndBangState(cp) {\n  if (cp === $.HYPHEN_MINUS) {\n    this.currentToken.data += '--!';\n    this.state = COMMENT_END_DASH_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.NULL) {\n    this.currentToken.data += '--!';\n    this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\n    this.state = COMMENT_STATE;\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.data += '--!';\n    this.currentToken.data += toChar(cp);\n    this.state = COMMENT_STATE;\n  }\n}; //12.2.4.52 DOCTYPE state\n//------------------------------------------------------------------\n\n\n_[DOCTYPE_STATE] = function doctypeState(cp) {\n  if (isWhitespace(cp)) this.state = BEFORE_DOCTYPE_NAME_STATE;else if (cp === $.EOF) {\n    this._createDoctypeToken();\n\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\n}; //12.2.4.53 Before DOCTYPE name state\n//------------------------------------------------------------------\n\n\n_[BEFORE_DOCTYPE_NAME_STATE] = function beforeDoctypeNameState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (isAsciiUpper(cp)) {\n    this._createDoctypeToken(toAsciiLowerChar(cp));\n\n    this.state = DOCTYPE_NAME_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this._createDoctypeToken();\n\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this._createDoctypeToken();\n\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else if (cp === $.NULL) {\n    this._createDoctypeToken(UNICODE.REPLACEMENT_CHARACTER);\n\n    this.state = DOCTYPE_NAME_STATE;\n  } else {\n    this._createDoctypeToken(toChar(cp));\n\n    this.state = DOCTYPE_NAME_STATE;\n  }\n}; //12.2.4.54 DOCTYPE name state\n//------------------------------------------------------------------\n\n\n_[DOCTYPE_NAME_STATE] = function doctypeNameState(cp) {\n  if (isWhitespace(cp)) this.state = AFTER_DOCTYPE_NAME_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (isAsciiUpper(cp)) this.currentToken.name += toAsciiLowerChar(cp);else if (cp === $.NULL) this.currentToken.name += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.name += toChar(cp);\n}; //12.2.4.55 After DOCTYPE name state\n//------------------------------------------------------------------\n\n\n_[AFTER_DOCTYPE_NAME_STATE] = function afterDoctypeNameState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.GREATER_THAN_SIGN) {\n    this.state = DATA_STATE;\n\n    this._emitCurrentToken();\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else if (this._consumeSubsequentIfMatch($$.PUBLIC_STRING, cp, false)) this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE;else if (this._consumeSubsequentIfMatch($$.SYSTEM_STRING, cp, false)) this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE;else {\n    this.currentToken.forceQuirks = true;\n    this.state = BOGUS_DOCTYPE_STATE;\n  }\n}; //12.2.4.56 After DOCTYPE public keyword state\n//------------------------------------------------------------------\n\n\n_[AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE] = function afterDoctypePublicKeywordState(cp) {\n  if (isWhitespace(cp)) this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;else if (cp === $.QUOTATION_MARK) {\n    this.currentToken.publicId = '';\n    this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.publicId = '';\n    this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.forceQuirks = true;\n    this.state = BOGUS_DOCTYPE_STATE;\n  }\n}; //12.2.4.57 Before DOCTYPE public identifier state\n//------------------------------------------------------------------\n\n\n_[BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function beforeDoctypePublicIdentifierState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.QUOTATION_MARK) {\n    this.currentToken.publicId = '';\n    this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.publicId = '';\n    this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.forceQuirks = true;\n    this.state = BOGUS_DOCTYPE_STATE;\n  }\n}; //12.2.4.58 DOCTYPE public identifier (double-quoted) state\n//------------------------------------------------------------------\n\n\n_[DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypePublicIdentifierDoubleQuotedState(cp) {\n  if (cp === $.QUOTATION_MARK) this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;else if (cp === $.NULL) this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.publicId += toChar(cp);\n}; //12.2.4.59 DOCTYPE public identifier (single-quoted) state\n//------------------------------------------------------------------\n\n\n_[DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypePublicIdentifierSingleQuotedState(cp) {\n  if (cp === $.APOSTROPHE) this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;else if (cp === $.NULL) this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.publicId += toChar(cp);\n}; //12.2.4.60 After DOCTYPE public identifier state\n//------------------------------------------------------------------\n\n\n_[AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function afterDoctypePublicIdentifierState(cp) {\n  if (isWhitespace(cp)) this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.QUOTATION_MARK) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.forceQuirks = true;\n    this.state = BOGUS_DOCTYPE_STATE;\n  }\n}; //12.2.4.61 Between DOCTYPE public and system identifiers state\n//------------------------------------------------------------------\n\n\n_[BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE] = function betweenDoctypePublicAndSystemIdentifiersState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.QUOTATION_MARK) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.forceQuirks = true;\n    this.state = BOGUS_DOCTYPE_STATE;\n  }\n}; //12.2.4.62 After DOCTYPE system keyword state\n//------------------------------------------------------------------\n\n\n_[AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE] = function afterDoctypeSystemKeywordState(cp) {\n  if (isWhitespace(cp)) this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;else if (cp === $.QUOTATION_MARK) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.forceQuirks = true;\n    this.state = BOGUS_DOCTYPE_STATE;\n  }\n}; //12.2.4.63 Before DOCTYPE system identifier state\n//------------------------------------------------------------------\n\n\n_[BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function beforeDoctypeSystemIdentifierState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.QUOTATION_MARK) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\n  } else if (cp === $.APOSTROPHE) {\n    this.currentToken.systemId = '';\n    this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\n  } else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else {\n    this.currentToken.forceQuirks = true;\n    this.state = BOGUS_DOCTYPE_STATE;\n  }\n}; //12.2.4.64 DOCTYPE system identifier (double-quoted) state\n//------------------------------------------------------------------\n\n\n_[DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypeSystemIdentifierDoubleQuotedState(cp) {\n  if (cp === $.QUOTATION_MARK) this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.NULL) this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.systemId += toChar(cp);\n}; //12.2.4.65 DOCTYPE system identifier (single-quoted) state\n//------------------------------------------------------------------\n\n\n_[DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypeSystemIdentifierSingleQuotedState(cp) {\n  if (cp === $.APOSTROPHE) this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;else if (cp === $.GREATER_THAN_SIGN) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.NULL) this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.currentToken.systemId += toChar(cp);\n}; //12.2.4.66 After DOCTYPE system identifier state\n//------------------------------------------------------------------\n\n\n_[AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function afterDoctypeSystemIdentifierState(cp) {\n  if (isWhitespace(cp)) return;\n\n  if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this.currentToken.forceQuirks = true;\n\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  } else this.state = BOGUS_DOCTYPE_STATE;\n}; //12.2.4.67 Bogus DOCTYPE state\n//------------------------------------------------------------------\n\n\n_[BOGUS_DOCTYPE_STATE] = function bogusDoctypeState(cp) {\n  if (cp === $.GREATER_THAN_SIGN) {\n    this._emitCurrentToken();\n\n    this.state = DATA_STATE;\n  } else if (cp === $.EOF) {\n    this._emitCurrentToken();\n\n    this._reconsumeInState(DATA_STATE);\n  }\n}; //12.2.4.68 CDATA section state\n//------------------------------------------------------------------\n\n\n_[CDATA_SECTION_STATE] = function cdataSectionState(cp) {\n  while (true) {\n    if (cp === $.EOF) {\n      this._reconsumeInState(DATA_STATE);\n\n      break;\n    } else if (this._consumeSubsequentIfMatch($$.CDATA_END_STRING, cp, true)) {\n      this.state = DATA_STATE;\n      break;\n    } else {\n      this._emitCodePoint(cp);\n\n      cp = this._consume();\n    }\n  }\n};","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/node_modules/parse5/lib/tokenization/tokenizer.js"],"names":["Preprocessor","require","LocationInfoMixin","UNICODE","NAMED_ENTITY_TRIE","$","CODE_POINTS","$$","CODE_POINT_SEQUENCES","NUMERIC_ENTITY_REPLACEMENTS","DATA_STATE","CHARACTER_REFERENCE_IN_DATA_STATE","RCDATA_STATE","CHARACTER_REFERENCE_IN_RCDATA_STATE","RAWTEXT_STATE","SCRIPT_DATA_STATE","PLAINTEXT_STATE","TAG_OPEN_STATE","END_TAG_OPEN_STATE","TAG_NAME_STATE","RCDATA_LESS_THAN_SIGN_STATE","RCDATA_END_TAG_OPEN_STATE","RCDATA_END_TAG_NAME_STATE","RAWTEXT_LESS_THAN_SIGN_STATE","RAWTEXT_END_TAG_OPEN_STATE","RAWTEXT_END_TAG_NAME_STATE","SCRIPT_DATA_LESS_THAN_SIGN_STATE","SCRIPT_DATA_END_TAG_OPEN_STATE","SCRIPT_DATA_END_TAG_NAME_STATE","SCRIPT_DATA_ESCAPE_START_STATE","SCRIPT_DATA_ESCAPE_START_DASH_STATE","SCRIPT_DATA_ESCAPED_STATE","SCRIPT_DATA_ESCAPED_DASH_STATE","SCRIPT_DATA_ESCAPED_DASH_DASH_STATE","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE","SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE","SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE","SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE","SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE","BEFORE_ATTRIBUTE_NAME_STATE","ATTRIBUTE_NAME_STATE","AFTER_ATTRIBUTE_NAME_STATE","BEFORE_ATTRIBUTE_VALUE_STATE","ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE","ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE","ATTRIBUTE_VALUE_UNQUOTED_STATE","CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE","AFTER_ATTRIBUTE_VALUE_QUOTED_STATE","SELF_CLOSING_START_TAG_STATE","BOGUS_COMMENT_STATE","MARKUP_DECLARATION_OPEN_STATE","COMMENT_START_STATE","COMMENT_START_DASH_STATE","COMMENT_STATE","COMMENT_END_DASH_STATE","COMMENT_END_STATE","COMMENT_END_BANG_STATE","DOCTYPE_STATE","BEFORE_DOCTYPE_NAME_STATE","DOCTYPE_NAME_STATE","AFTER_DOCTYPE_NAME_STATE","AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE","AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE","AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE","AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE","BOGUS_DOCTYPE_STATE","CDATA_SECTION_STATE","isWhitespace","cp","SPACE","LINE_FEED","TABULATION","FORM_FEED","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLower","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiAlphaNumeric","isDigit","isHex","LATIN_CAPITAL_F","LATIN_SMALL_F","isReservedCodePoint","toAsciiLowerCodePoint","toChar","String","fromCharCode","toAsciiLowerChar","Tokenizer","module","exports","html","options","disableEntitiesDecoding","preprocessor","tokenQueue","allowCDATA","state","returnState","consumptionPos","tempBuff","additionalAllowedCp","lastStartTagName","currentCharacterToken","currentToken","currentAttr","decodeHtmlEntities","locationInfo","assign","CHARACTER_TOKEN","NULL_CHARACTER_TOKEN","WHITESPACE_CHARACTER_TOKEN","START_TAG_TOKEN","END_TAG_TOKEN","COMMENT_TOKEN","DOCTYPE_TOKEN","EOF_TOKEN","MODE","prototype","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","PLAINTEXT","getTokenAttr","token","attrName","i","attrs","length","name","value","getNextToken","_consume","shift","advanceAndPeekCodePoint","_unconsume","retreat","_unconsumeSeveral","count","_reconsumeInState","_consumeSubsequentIfMatch","pattern","startCp","caseSensitive","rollbackPos","isMatch","patternLength","patternPos","patternCp","EOF","_lookahead","isTempBufferEqualToScriptString","SCRIPT_STRING","buildStartTagToken","tagName","type","selfClosing","buildEndTagToken","ignored","_createStartTagToken","tagNameFirstCh","_createEndTagToken","_createCommentToken","data","_createDoctypeToken","doctypeNameFirstCh","forceQuirks","publicId","systemId","_createCharacterToken","ch","chars","_createAttr","attrNameFirstCh","_isDuplicateAttr","_leaveAttrName","toState","push","_isAppropriateEndTagToken","_emitCurrentToken","_emitCurrentCharacterToken","_emitEOFToken","_appendCharToCurrentCharacterToken","_emitCodePoint","NULL","_emitSeveralCodePoints","codePoints","_emitChar","_consumeNumericEntity","digits","nextCp","SEMICOLON","referencedCp","parseInt","replacement","REPLACEMENT_CHARACTER","_consumeNamedEntity","inAttr","referencedCodePoints","entityCodePointsCount","leaf","consumedCount","semicolonTerminated","l","c","EQUALS_SIGN","_consumeCharacterReference","GREATER_THAN_SIGN","AMPERSAND","NUMBER_SIGN","LATIN_SMALL_X","LATIN_CAPITAL_X","_","dataState","LESS_THAN_SIGN","characterReferenceInDataState","rcdataState","characterReferenceInRcdataState","rawtextState","scriptDataState","plaintextState","tagOpenState","EXCLAMATION_MARK","SOLIDUS","QUESTION_MARK","endTagOpenState","tagNameState","rcdataLessThanSignState","rcdataEndTagOpenState","rcdataEndTagNameState","rawtextLessThanSignState","rawtextEndTagOpenState","rawtextEndTagNameState","scriptDataLessThanSignState","scriptDataEndTagOpenState","scriptDataEndTagNameState","scriptDataEscapeStartState","HYPHEN_MINUS","scriptDataEscapeStartDashState","scriptDataEscapedState","scriptDataEscapedDashState","scriptDataEscapedDashDashState","scriptDataEscapedLessThanSignState","scriptDataEscapedEndTagOpenState","scriptDataEscapedEndTagNameState","scriptDataDoubleEscapeStartState","scriptDataDoubleEscapedState","scriptDataDoubleEscapedDashState","scriptDataDoubleEscapedDashDashState","scriptDataDoubleEscapedLessThanSignState","scriptDataDoubleEscapeEndState","beforeAttributeNameState","QUOTATION_MARK","APOSTROPHE","attributeNameState","afterAttributeNameState","beforeAttributeValueState","GRAVE_ACCENT","attributeValueDoubleQuotedState","attributeValueSingleQuotedState","attributeValueUnquotedState","characterReferenceInAttributeValueState","afterAttributeValueQuotedState","selfClosingStartTagState","bogusCommentState","markupDeclarationOpenState","DASH_DASH_STRING","DOCTYPE_STRING","CDATA_START_STRING","commentStartState","commentStartDashState","commentState","commentEndDashState","commentEndState","commentEndBangState","doctypeState","beforeDoctypeNameState","doctypeNameState","afterDoctypeNameState","PUBLIC_STRING","SYSTEM_STRING","afterDoctypePublicKeywordState","beforeDoctypePublicIdentifierState","doctypePublicIdentifierDoubleQuotedState","doctypePublicIdentifierSingleQuotedState","afterDoctypePublicIdentifierState","betweenDoctypePublicAndSystemIdentifiersState","afterDoctypeSystemKeywordState","beforeDoctypeSystemIdentifierState","doctypeSystemIdentifierDoubleQuotedState","doctypeSystemIdentifierSingleQuotedState","afterDoctypeSystemIdentifierState","bogusDoctypeState","cdataSectionState","CDATA_END_STRING"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar Preprocessor = require('./preprocessor'),\r\n    LocationInfoMixin = require('./location_info_mixin'),\r\n    UNICODE = require('../common/unicode'),\r\n    NAMED_ENTITY_TRIE = require('./named_entity_trie');\r\n\r\n//Aliases\r\nvar $ = UNICODE.CODE_POINTS,\r\n    $$ = UNICODE.CODE_POINT_SEQUENCES;\r\n\r\n//Replacement code points for numeric entities\r\nvar NUMERIC_ENTITY_REPLACEMENTS = {\r\n    0x00: 0xFFFD, 0x0D: 0x000D, 0x80: 0x20AC, 0x81: 0x0081, 0x82: 0x201A, 0x83: 0x0192, 0x84: 0x201E,\r\n    0x85: 0x2026, 0x86: 0x2020, 0x87: 0x2021, 0x88: 0x02C6, 0x89: 0x2030, 0x8A: 0x0160, 0x8B: 0x2039,\r\n    0x8C: 0x0152, 0x8D: 0x008D, 0x8E: 0x017D, 0x8F: 0x008F, 0x90: 0x0090, 0x91: 0x2018, 0x92: 0x2019,\r\n    0x93: 0x201C, 0x94: 0x201D, 0x95: 0x2022, 0x96: 0x2013, 0x97: 0x2014, 0x98: 0x02DC, 0x99: 0x2122,\r\n    0x9A: 0x0161, 0x9B: 0x203A, 0x9C: 0x0153, 0x9D: 0x009D, 0x9E: 0x017E, 0x9F: 0x0178\r\n};\r\n\r\n//States\r\nvar DATA_STATE = 'DATA_STATE',\r\n    CHARACTER_REFERENCE_IN_DATA_STATE = 'CHARACTER_REFERENCE_IN_DATA_STATE',\r\n    RCDATA_STATE = 'RCDATA_STATE',\r\n    CHARACTER_REFERENCE_IN_RCDATA_STATE = 'CHARACTER_REFERENCE_IN_RCDATA_STATE',\r\n    RAWTEXT_STATE = 'RAWTEXT_STATE',\r\n    SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE',\r\n    PLAINTEXT_STATE = 'PLAINTEXT_STATE',\r\n    TAG_OPEN_STATE = 'TAG_OPEN_STATE',\r\n    END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE',\r\n    TAG_NAME_STATE = 'TAG_NAME_STATE',\r\n    RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE',\r\n    RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE',\r\n    RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE',\r\n    RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE',\r\n    RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE',\r\n    RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE',\r\n    SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE',\r\n    SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE',\r\n    SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE',\r\n    SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE',\r\n    SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE',\r\n    SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE',\r\n    SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE',\r\n    SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE',\r\n    SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE',\r\n    SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE',\r\n    SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE',\r\n    SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE',\r\n    SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE',\r\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE',\r\n    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE',\r\n    SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE',\r\n    SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE',\r\n    BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE',\r\n    ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE',\r\n    AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE',\r\n    BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE',\r\n    ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE',\r\n    ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE',\r\n    ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE',\r\n    CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE = 'CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE',\r\n    AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE',\r\n    SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE',\r\n    BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE',\r\n    MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE',\r\n    COMMENT_START_STATE = 'COMMENT_START_STATE',\r\n    COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE',\r\n    COMMENT_STATE = 'COMMENT_STATE',\r\n    COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE',\r\n    COMMENT_END_STATE = 'COMMENT_END_STATE',\r\n    COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE',\r\n    DOCTYPE_STATE = 'DOCTYPE_STATE',\r\n    BEFORE_DOCTYPE_NAME_STATE = 'BEFORE_DOCTYPE_NAME_STATE',\r\n    DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE',\r\n    AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE',\r\n    AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = 'AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE',\r\n    BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE',\r\n    DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE',\r\n    DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE',\r\n    AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE',\r\n    BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE',\r\n    AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = 'AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE',\r\n    BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\r\n    DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE',\r\n    DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE',\r\n    AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE',\r\n    BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE',\r\n    CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';\r\n\r\n//Utils\r\n\r\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\r\n//this functions if they will be situated in another module due to context switch.\r\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\r\nfunction isWhitespace(cp) {\r\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\r\n}\r\n\r\nfunction isAsciiDigit(cp) {\r\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\r\n}\r\n\r\nfunction isAsciiUpper(cp) {\r\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\r\n}\r\n\r\nfunction isAsciiLower(cp) {\r\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\r\n}\r\n\r\nfunction isAsciiAlphaNumeric(cp) {\r\n    return isAsciiDigit(cp) || isAsciiUpper(cp) || isAsciiLower(cp);\r\n}\r\n\r\nfunction isDigit(cp, isHex) {\r\n    return isAsciiDigit(cp) || (isHex && ((cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F) ||\r\n                                          (cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F)));\r\n}\r\n\r\nfunction isReservedCodePoint(cp) {\r\n    return cp >= 0xD800 && cp <= 0xDFFF || cp > 0x10FFFF;\r\n}\r\n\r\nfunction toAsciiLowerCodePoint(cp) {\r\n    return cp + 0x0020;\r\n}\r\n\r\n//NOTE: String.fromCharCode() function can handle only characters from BMP subset.\r\n//So, we need to workaround this manually.\r\n//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)\r\nfunction toChar(cp) {\r\n    if (cp <= 0xFFFF)\r\n        return String.fromCharCode(cp);\r\n\r\n    cp -= 0x10000;\r\n    return String.fromCharCode(cp >>> 10 & 0x3FF | 0xD800) + String.fromCharCode(0xDC00 | cp & 0x3FF);\r\n}\r\n\r\nfunction toAsciiLowerChar(cp) {\r\n    return String.fromCharCode(toAsciiLowerCodePoint(cp));\r\n}\r\n\r\n//Tokenizer\r\nvar Tokenizer = module.exports = function (html, options) {\r\n    this.disableEntitiesDecoding = false;\r\n\r\n    this.preprocessor = new Preprocessor(html);\r\n\r\n    this.tokenQueue = [];\r\n\r\n    this.allowCDATA = false;\r\n\r\n    this.state = DATA_STATE;\r\n    this.returnState = '';\r\n\r\n    this.consumptionPos = 0;\r\n\r\n    this.tempBuff = [];\r\n    this.additionalAllowedCp = void 0;\r\n    this.lastStartTagName = '';\r\n\r\n    this.currentCharacterToken = null;\r\n    this.currentToken = null;\r\n    this.currentAttr = null;\r\n\r\n    if (options) {\r\n        this.disableEntitiesDecoding = !options.decodeHtmlEntities;\r\n\r\n        if (options.locationInfo)\r\n            LocationInfoMixin.assign(this);\r\n    }\r\n};\r\n\r\n//Token types\r\nTokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';\r\nTokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';\r\nTokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';\r\nTokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';\r\nTokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';\r\nTokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';\r\nTokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';\r\nTokenizer.EOF_TOKEN = 'EOF_TOKEN';\r\n\r\n//Tokenizer initial states for different modes\r\nTokenizer.MODE = Tokenizer.prototype.MODE = {\r\n    DATA: DATA_STATE,\r\n    RCDATA: RCDATA_STATE,\r\n    RAWTEXT: RAWTEXT_STATE,\r\n    SCRIPT_DATA: SCRIPT_DATA_STATE,\r\n    PLAINTEXT: PLAINTEXT_STATE\r\n};\r\n\r\n//Static\r\nTokenizer.getTokenAttr = function (token, attrName) {\r\n    for (var i = token.attrs.length - 1; i >= 0; i--) {\r\n        if (token.attrs[i].name === attrName)\r\n            return token.attrs[i].value;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n//Get token\r\nTokenizer.prototype.getNextToken = function () {\r\n    while (!this.tokenQueue.length)\r\n        this[this.state](this._consume());\r\n\r\n    return this.tokenQueue.shift();\r\n};\r\n\r\n//Consumption\r\nTokenizer.prototype._consume = function () {\r\n    this.consumptionPos++;\r\n    return this.preprocessor.advanceAndPeekCodePoint();\r\n};\r\n\r\nTokenizer.prototype._unconsume = function () {\r\n    this.consumptionPos--;\r\n    this.preprocessor.retreat();\r\n};\r\n\r\nTokenizer.prototype._unconsumeSeveral = function (count) {\r\n    while (count--)\r\n        this._unconsume();\r\n};\r\n\r\nTokenizer.prototype._reconsumeInState = function (state) {\r\n    this.state = state;\r\n    this._unconsume();\r\n};\r\n\r\nTokenizer.prototype._consumeSubsequentIfMatch = function (pattern, startCp, caseSensitive) {\r\n    var rollbackPos = this.consumptionPos,\r\n        isMatch = true,\r\n        patternLength = pattern.length,\r\n        patternPos = 0,\r\n        cp = startCp,\r\n        patternCp = void 0;\r\n\r\n    for (; patternPos < patternLength; patternPos++) {\r\n        if (patternPos > 0)\r\n            cp = this._consume();\r\n\r\n        if (cp === $.EOF) {\r\n            isMatch = false;\r\n            break;\r\n        }\r\n\r\n        patternCp = pattern[patternPos];\r\n\r\n        if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {\r\n            isMatch = false;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (!isMatch)\r\n        this._unconsumeSeveral(this.consumptionPos - rollbackPos);\r\n\r\n    return isMatch;\r\n};\r\n\r\n//Lookahead\r\nTokenizer.prototype._lookahead = function () {\r\n    var cp = this.preprocessor.advanceAndPeekCodePoint();\r\n    this.preprocessor.retreat();\r\n\r\n    return cp;\r\n};\r\n\r\n//Temp buffer\r\nTokenizer.prototype.isTempBufferEqualToScriptString = function () {\r\n    if (this.tempBuff.length !== $$.SCRIPT_STRING.length)\r\n        return false;\r\n\r\n    for (var i = 0; i < this.tempBuff.length; i++) {\r\n        if (this.tempBuff[i] !== $$.SCRIPT_STRING[i])\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\n//Token creation\r\nTokenizer.prototype.buildStartTagToken = function (tagName) {\r\n    return {\r\n        type: Tokenizer.START_TAG_TOKEN,\r\n        tagName: tagName,\r\n        selfClosing: false,\r\n        attrs: []\r\n    };\r\n};\r\n\r\nTokenizer.prototype.buildEndTagToken = function (tagName) {\r\n    return {\r\n        type: Tokenizer.END_TAG_TOKEN,\r\n        tagName: tagName,\r\n        ignored: false,\r\n        attrs: []\r\n    };\r\n};\r\n\r\nTokenizer.prototype._createStartTagToken = function (tagNameFirstCh) {\r\n    this.currentToken = this.buildStartTagToken(tagNameFirstCh);\r\n};\r\n\r\nTokenizer.prototype._createEndTagToken = function (tagNameFirstCh) {\r\n    this.currentToken = this.buildEndTagToken(tagNameFirstCh);\r\n};\r\n\r\nTokenizer.prototype._createCommentToken = function () {\r\n    this.currentToken = {\r\n        type: Tokenizer.COMMENT_TOKEN,\r\n        data: ''\r\n    };\r\n};\r\n\r\nTokenizer.prototype._createDoctypeToken = function (doctypeNameFirstCh) {\r\n    this.currentToken = {\r\n        type: Tokenizer.DOCTYPE_TOKEN,\r\n        name: doctypeNameFirstCh || '',\r\n        forceQuirks: false,\r\n        publicId: null,\r\n        systemId: null\r\n    };\r\n};\r\n\r\nTokenizer.prototype._createCharacterToken = function (type, ch) {\r\n    this.currentCharacterToken = {\r\n        type: type,\r\n        chars: ch\r\n    };\r\n};\r\n\r\n//Tag attributes\r\nTokenizer.prototype._createAttr = function (attrNameFirstCh) {\r\n    this.currentAttr = {\r\n        name: attrNameFirstCh,\r\n        value: ''\r\n    };\r\n};\r\n\r\nTokenizer.prototype._isDuplicateAttr = function () {\r\n    return Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) !== null;\r\n};\r\n\r\nTokenizer.prototype._leaveAttrName = function (toState) {\r\n    this.state = toState;\r\n\r\n    if (!this._isDuplicateAttr())\r\n        this.currentToken.attrs.push(this.currentAttr);\r\n};\r\n\r\n//Appropriate end tag token\r\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#appropriate-end-tag-token)\r\nTokenizer.prototype._isAppropriateEndTagToken = function () {\r\n    return this.lastStartTagName === this.currentToken.tagName;\r\n};\r\n\r\n//Token emission\r\nTokenizer.prototype._emitCurrentToken = function () {\r\n    this._emitCurrentCharacterToken();\r\n\r\n    //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.\r\n    if (this.currentToken.type === Tokenizer.START_TAG_TOKEN)\r\n        this.lastStartTagName = this.currentToken.tagName;\r\n\r\n    this.tokenQueue.push(this.currentToken);\r\n    this.currentToken = null;\r\n};\r\n\r\nTokenizer.prototype._emitCurrentCharacterToken = function () {\r\n    if (this.currentCharacterToken) {\r\n        this.tokenQueue.push(this.currentCharacterToken);\r\n        this.currentCharacterToken = null;\r\n    }\r\n};\r\n\r\nTokenizer.prototype._emitEOFToken = function () {\r\n    this._emitCurrentCharacterToken();\r\n    this.tokenQueue.push({type: Tokenizer.EOF_TOKEN});\r\n};\r\n\r\n//Characters emission\r\n\r\n//OPTIMIZATION: specification uses only one type of character tokens (one token per character).\r\n//This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\r\n//If we have a sequence of characters that belong to the same group, parser can process it\r\n//as a single solid character token.\r\n//So, there are 3 types of character tokens in parse5:\r\n//1)NULL_CHARACTER_TOKEN - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\r\n//2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\r\n//3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\r\nTokenizer.prototype._appendCharToCurrentCharacterToken = function (type, ch) {\r\n    if (this.currentCharacterToken && this.currentCharacterToken.type !== type)\r\n        this._emitCurrentCharacterToken();\r\n\r\n    if (this.currentCharacterToken)\r\n        this.currentCharacterToken.chars += ch;\r\n\r\n    else\r\n        this._createCharacterToken(type, ch);\r\n};\r\n\r\nTokenizer.prototype._emitCodePoint = function (cp) {\r\n    var type = Tokenizer.CHARACTER_TOKEN;\r\n\r\n    if (isWhitespace(cp))\r\n        type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;\r\n\r\n    else if (cp === $.NULL)\r\n        type = Tokenizer.NULL_CHARACTER_TOKEN;\r\n\r\n    this._appendCharToCurrentCharacterToken(type, toChar(cp));\r\n};\r\n\r\nTokenizer.prototype._emitSeveralCodePoints = function (codePoints) {\r\n    for (var i = 0; i < codePoints.length; i++)\r\n        this._emitCodePoint(codePoints[i]);\r\n};\r\n\r\n//NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.\r\n//So we can avoid additional checks here.\r\nTokenizer.prototype._emitChar = function (ch) {\r\n    this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);\r\n};\r\n\r\n//Character reference tokenization\r\nTokenizer.prototype._consumeNumericEntity = function (isHex) {\r\n    var digits = '',\r\n        nextCp = void 0;\r\n\r\n    do {\r\n        digits += toChar(this._consume());\r\n        nextCp = this._lookahead();\r\n    } while (nextCp !== $.EOF && isDigit(nextCp, isHex));\r\n\r\n    if (this._lookahead() === $.SEMICOLON)\r\n        this._consume();\r\n\r\n    var referencedCp = parseInt(digits, isHex ? 16 : 10),\r\n        replacement = NUMERIC_ENTITY_REPLACEMENTS[referencedCp];\r\n\r\n    if (replacement)\r\n        return replacement;\r\n\r\n    if (isReservedCodePoint(referencedCp))\r\n        return $.REPLACEMENT_CHARACTER;\r\n\r\n    return referencedCp;\r\n};\r\n\r\nTokenizer.prototype._consumeNamedEntity = function (startCp, inAttr) {\r\n    var referencedCodePoints = null,\r\n        entityCodePointsCount = 0,\r\n        cp = startCp,\r\n        leaf = NAMED_ENTITY_TRIE[cp],\r\n        consumedCount = 1,\r\n        semicolonTerminated = false;\r\n\r\n    for (; leaf && cp !== $.EOF; cp = this._consume(), consumedCount++, leaf = leaf.l && leaf.l[cp]) {\r\n        if (leaf.c) {\r\n            //NOTE: we have at least one named reference match. But we don't stop lookup at this point,\r\n            //because longer matches still can be found (e.g. '&not' and '&notin;') except the case\r\n            //then found match is terminated by semicolon.\r\n            referencedCodePoints = leaf.c;\r\n            entityCodePointsCount = consumedCount;\r\n\r\n            if (cp === $.SEMICOLON) {\r\n                semicolonTerminated = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (referencedCodePoints) {\r\n        if (!semicolonTerminated) {\r\n            //NOTE: unconsume excess (e.g. 'it' in '&notit')\r\n            this._unconsumeSeveral(consumedCount - entityCodePointsCount);\r\n\r\n            //NOTE: If the character reference is being consumed as part of an attribute and the next character\r\n            //is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical\r\n            //reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be\r\n            //unconsumed, and nothing is returned.\r\n            //However, if this next character is in fact a U+003D EQUALS SIGN character (=), then this is a\r\n            //parse error, because some legacy user agents will misinterpret the markup in those cases.\r\n            //(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references)\r\n            if (inAttr) {\r\n                var nextCp = this._lookahead();\r\n\r\n                if (nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp)) {\r\n                    this._unconsumeSeveral(entityCodePointsCount);\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n\r\n        return referencedCodePoints;\r\n    }\r\n\r\n    this._unconsumeSeveral(consumedCount);\r\n\r\n    return null;\r\n};\r\n\r\nTokenizer.prototype._consumeCharacterReference = function (startCp, inAttr) {\r\n    if (this.disableEntitiesDecoding || isWhitespace(startCp) || startCp === $.GREATER_THAN_SIGN ||\r\n        startCp === $.AMPERSAND || startCp === this.additionalAllowedCp || startCp === $.EOF) {\r\n        //NOTE: not a character reference. No characters are consumed, and nothing is returned.\r\n        this._unconsume();\r\n        return null;\r\n    }\r\n\r\n    else if (startCp === $.NUMBER_SIGN) {\r\n        //NOTE: we have a numeric entity candidate, now we should determine if it's hex or decimal\r\n        var isHex = false,\r\n            nextCp = this._lookahead();\r\n\r\n        if (nextCp === $.LATIN_SMALL_X || nextCp === $.LATIN_CAPITAL_X) {\r\n            this._consume();\r\n            isHex = true;\r\n        }\r\n\r\n        nextCp = this._lookahead();\r\n\r\n        //NOTE: if we have at least one digit this is a numeric entity for sure, so we consume it\r\n        if (nextCp !== $.EOF && isDigit(nextCp, isHex))\r\n            return [this._consumeNumericEntity(isHex)];\r\n\r\n        else {\r\n            //NOTE: otherwise this is a bogus number entity and a parse error. Unconsume the number sign\r\n            //and the 'x'-character if appropriate.\r\n            this._unconsumeSeveral(isHex ? 2 : 1);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    else\r\n        return this._consumeNamedEntity(startCp, inAttr);\r\n};\r\n\r\n//State machine\r\nvar _ = Tokenizer.prototype;\r\n\r\n//12.2.4.1 Data state\r\n//------------------------------------------------------------------\r\n_[DATA_STATE] = function dataState(cp) {\r\n    if (cp === $.AMPERSAND)\r\n        this.state = CHARACTER_REFERENCE_IN_DATA_STATE;\r\n\r\n    else if (cp === $.LESS_THAN_SIGN)\r\n        this.state = TAG_OPEN_STATE;\r\n\r\n    else if (cp === $.NULL)\r\n        this._emitCodePoint(cp);\r\n\r\n    else if (cp === $.EOF)\r\n        this._emitEOFToken();\r\n\r\n    else\r\n        this._emitCodePoint(cp);\r\n};\r\n\r\n\r\n//12.2.4.2 Character reference in data state\r\n//------------------------------------------------------------------\r\n_[CHARACTER_REFERENCE_IN_DATA_STATE] = function characterReferenceInDataState(cp) {\r\n    this.state = DATA_STATE;\r\n    this.additionalAllowedCp = void 0;\r\n\r\n    var referencedCodePoints = this._consumeCharacterReference(cp, false);\r\n\r\n    if (referencedCodePoints)\r\n        this._emitSeveralCodePoints(referencedCodePoints);\r\n    else\r\n        this._emitChar('&');\r\n};\r\n\r\n\r\n//12.2.4.3 RCDATA state\r\n//------------------------------------------------------------------\r\n_[RCDATA_STATE] = function rcdataState(cp) {\r\n    if (cp === $.AMPERSAND)\r\n        this.state = CHARACTER_REFERENCE_IN_RCDATA_STATE;\r\n\r\n    else if (cp === $.LESS_THAN_SIGN)\r\n        this.state = RCDATA_LESS_THAN_SIGN_STATE;\r\n\r\n    else if (cp === $.NULL)\r\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\r\n\r\n    else if (cp === $.EOF)\r\n        this._emitEOFToken();\r\n\r\n    else\r\n        this._emitCodePoint(cp);\r\n};\r\n\r\n\r\n//12.2.4.4 Character reference in RCDATA state\r\n//------------------------------------------------------------------\r\n_[CHARACTER_REFERENCE_IN_RCDATA_STATE] = function characterReferenceInRcdataState(cp) {\r\n    this.state = RCDATA_STATE;\r\n    this.additionalAllowedCp = void 0;\r\n\r\n    var referencedCodePoints = this._consumeCharacterReference(cp, false);\r\n\r\n    if (referencedCodePoints)\r\n        this._emitSeveralCodePoints(referencedCodePoints);\r\n    else\r\n        this._emitChar('&');\r\n};\r\n\r\n\r\n//12.2.4.5 RAWTEXT state\r\n//------------------------------------------------------------------\r\n_[RAWTEXT_STATE] = function rawtextState(cp) {\r\n    if (cp === $.LESS_THAN_SIGN)\r\n        this.state = RAWTEXT_LESS_THAN_SIGN_STATE;\r\n\r\n    else if (cp === $.NULL)\r\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\r\n\r\n    else if (cp === $.EOF)\r\n        this._emitEOFToken();\r\n\r\n    else\r\n        this._emitCodePoint(cp);\r\n};\r\n\r\n\r\n//12.2.4.6 Script data state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_STATE] = function scriptDataState(cp) {\r\n    if (cp === $.LESS_THAN_SIGN)\r\n        this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;\r\n\r\n    else if (cp === $.NULL)\r\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\r\n\r\n    else if (cp === $.EOF)\r\n        this._emitEOFToken();\r\n\r\n    else\r\n        this._emitCodePoint(cp);\r\n};\r\n\r\n\r\n//12.2.4.7 PLAINTEXT state\r\n//------------------------------------------------------------------\r\n_[PLAINTEXT_STATE] = function plaintextState(cp) {\r\n    if (cp === $.NULL)\r\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\r\n\r\n    else if (cp === $.EOF)\r\n        this._emitEOFToken();\r\n\r\n    else\r\n        this._emitCodePoint(cp);\r\n};\r\n\r\n\r\n//12.2.4.8 Tag open state\r\n//------------------------------------------------------------------\r\n_[TAG_OPEN_STATE] = function tagOpenState(cp) {\r\n    if (cp === $.EXCLAMATION_MARK)\r\n        this.state = MARKUP_DECLARATION_OPEN_STATE;\r\n\r\n    else if (cp === $.SOLIDUS)\r\n        this.state = END_TAG_OPEN_STATE;\r\n\r\n    else if (isAsciiUpper(cp)) {\r\n        this._createStartTagToken(toAsciiLowerChar(cp));\r\n        this.state = TAG_NAME_STATE;\r\n    }\r\n\r\n    else if (isAsciiLower(cp)) {\r\n        this._createStartTagToken(toChar(cp));\r\n        this.state = TAG_NAME_STATE;\r\n    }\r\n\r\n    else if (cp === $.QUESTION_MARK) {\r\n        //NOTE: call bogus comment state directly with current consumed character to avoid unnecessary reconsumption.\r\n        this[BOGUS_COMMENT_STATE](cp);\r\n    }\r\n\r\n    else {\r\n        this._emitChar('<');\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.9 End tag open state\r\n//------------------------------------------------------------------\r\n_[END_TAG_OPEN_STATE] = function endTagOpenState(cp) {\r\n    if (isAsciiUpper(cp)) {\r\n        this._createEndTagToken(toAsciiLowerChar(cp));\r\n        this.state = TAG_NAME_STATE;\r\n    }\r\n\r\n    else if (isAsciiLower(cp)) {\r\n        this._createEndTagToken(toChar(cp));\r\n        this.state = TAG_NAME_STATE;\r\n    }\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN)\r\n        this.state = DATA_STATE;\r\n\r\n    else if (cp === $.EOF) {\r\n        this._reconsumeInState(DATA_STATE);\r\n        this._emitChar('<');\r\n        this._emitChar('/');\r\n    }\r\n\r\n    else {\r\n        //NOTE: call bogus comment state directly with current consumed character to avoid unnecessary reconsumption.\r\n        this[BOGUS_COMMENT_STATE](cp);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.10 Tag name state\r\n//------------------------------------------------------------------\r\n_[TAG_NAME_STATE] = function tagNameState(cp) {\r\n    if (isWhitespace(cp))\r\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\r\n\r\n    else if (cp === $.SOLIDUS)\r\n        this.state = SELF_CLOSING_START_TAG_STATE;\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.state = DATA_STATE;\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else if (isAsciiUpper(cp))\r\n        this.currentToken.tagName += toAsciiLowerChar(cp);\r\n\r\n    else if (cp === $.NULL)\r\n        this.currentToken.tagName += UNICODE.REPLACEMENT_CHARACTER;\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else\r\n        this.currentToken.tagName += toChar(cp);\r\n};\r\n\r\n\r\n//12.2.4.11 RCDATA less-than sign state\r\n//------------------------------------------------------------------\r\n_[RCDATA_LESS_THAN_SIGN_STATE] = function rcdataLessThanSignState(cp) {\r\n    if (cp === $.SOLIDUS) {\r\n        this.tempBuff = [];\r\n        this.state = RCDATA_END_TAG_OPEN_STATE;\r\n    }\r\n\r\n    else {\r\n        this._emitChar('<');\r\n        this._reconsumeInState(RCDATA_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.12 RCDATA end tag open state\r\n//------------------------------------------------------------------\r\n_[RCDATA_END_TAG_OPEN_STATE] = function rcdataEndTagOpenState(cp) {\r\n    if (isAsciiUpper(cp)) {\r\n        this._createEndTagToken(toAsciiLowerChar(cp));\r\n        this.tempBuff.push(cp);\r\n        this.state = RCDATA_END_TAG_NAME_STATE;\r\n    }\r\n\r\n    else if (isAsciiLower(cp)) {\r\n        this._createEndTagToken(toChar(cp));\r\n        this.tempBuff.push(cp);\r\n        this.state = RCDATA_END_TAG_NAME_STATE;\r\n    }\r\n\r\n    else {\r\n        this._emitChar('<');\r\n        this._emitChar('/');\r\n        this._reconsumeInState(RCDATA_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.13 RCDATA end tag name state\r\n//------------------------------------------------------------------\r\n_[RCDATA_END_TAG_NAME_STATE] = function rcdataEndTagNameState(cp) {\r\n    if (isAsciiUpper(cp)) {\r\n        this.currentToken.tagName += toAsciiLowerChar(cp);\r\n        this.tempBuff.push(cp);\r\n    }\r\n\r\n    else if (isAsciiLower(cp)) {\r\n        this.currentToken.tagName += toChar(cp);\r\n        this.tempBuff.push(cp);\r\n    }\r\n\r\n    else {\r\n        if (this._isAppropriateEndTagToken()) {\r\n            if (isWhitespace(cp)) {\r\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\r\n                return;\r\n            }\r\n\r\n            if (cp === $.SOLIDUS) {\r\n                this.state = SELF_CLOSING_START_TAG_STATE;\r\n                return;\r\n            }\r\n\r\n            if (cp === $.GREATER_THAN_SIGN) {\r\n                this.state = DATA_STATE;\r\n                this._emitCurrentToken();\r\n                return;\r\n            }\r\n        }\r\n\r\n        this._emitChar('<');\r\n        this._emitChar('/');\r\n        this._emitSeveralCodePoints(this.tempBuff);\r\n        this._reconsumeInState(RCDATA_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.14 RAWTEXT less-than sign state\r\n//------------------------------------------------------------------\r\n_[RAWTEXT_LESS_THAN_SIGN_STATE] = function rawtextLessThanSignState(cp) {\r\n    if (cp === $.SOLIDUS) {\r\n        this.tempBuff = [];\r\n        this.state = RAWTEXT_END_TAG_OPEN_STATE;\r\n    }\r\n\r\n    else {\r\n        this._emitChar('<');\r\n        this._reconsumeInState(RAWTEXT_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.15 RAWTEXT end tag open state\r\n//------------------------------------------------------------------\r\n_[RAWTEXT_END_TAG_OPEN_STATE] = function rawtextEndTagOpenState(cp) {\r\n    if (isAsciiUpper(cp)) {\r\n        this._createEndTagToken(toAsciiLowerChar(cp));\r\n        this.tempBuff.push(cp);\r\n        this.state = RAWTEXT_END_TAG_NAME_STATE;\r\n    }\r\n\r\n    else if (isAsciiLower(cp)) {\r\n        this._createEndTagToken(toChar(cp));\r\n        this.tempBuff.push(cp);\r\n        this.state = RAWTEXT_END_TAG_NAME_STATE;\r\n    }\r\n\r\n    else {\r\n        this._emitChar('<');\r\n        this._emitChar('/');\r\n        this._reconsumeInState(RAWTEXT_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.16 RAWTEXT end tag name state\r\n//------------------------------------------------------------------\r\n_[RAWTEXT_END_TAG_NAME_STATE] = function rawtextEndTagNameState(cp) {\r\n    if (isAsciiUpper(cp)) {\r\n        this.currentToken.tagName += toAsciiLowerChar(cp);\r\n        this.tempBuff.push(cp);\r\n    }\r\n\r\n    else if (isAsciiLower(cp)) {\r\n        this.currentToken.tagName += toChar(cp);\r\n        this.tempBuff.push(cp);\r\n    }\r\n\r\n    else {\r\n        if (this._isAppropriateEndTagToken()) {\r\n            if (isWhitespace(cp)) {\r\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\r\n                return;\r\n            }\r\n\r\n            if (cp === $.SOLIDUS) {\r\n                this.state = SELF_CLOSING_START_TAG_STATE;\r\n                return;\r\n            }\r\n\r\n            if (cp === $.GREATER_THAN_SIGN) {\r\n                this._emitCurrentToken();\r\n                this.state = DATA_STATE;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this._emitChar('<');\r\n        this._emitChar('/');\r\n        this._emitSeveralCodePoints(this.tempBuff);\r\n        this._reconsumeInState(RAWTEXT_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.17 Script data less-than sign state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_LESS_THAN_SIGN_STATE] = function scriptDataLessThanSignState(cp) {\r\n    if (cp === $.SOLIDUS) {\r\n        this.tempBuff = [];\r\n        this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;\r\n    }\r\n\r\n    else if (cp === $.EXCLAMATION_MARK) {\r\n        this.state = SCRIPT_DATA_ESCAPE_START_STATE;\r\n        this._emitChar('<');\r\n        this._emitChar('!');\r\n    }\r\n\r\n    else {\r\n        this._emitChar('<');\r\n        this._reconsumeInState(SCRIPT_DATA_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.18 Script data end tag open state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_END_TAG_OPEN_STATE] = function scriptDataEndTagOpenState(cp) {\r\n    if (isAsciiUpper(cp)) {\r\n        this._createEndTagToken(toAsciiLowerChar(cp));\r\n        this.tempBuff.push(cp);\r\n        this.state = SCRIPT_DATA_END_TAG_NAME_STATE;\r\n    }\r\n\r\n    else if (isAsciiLower(cp)) {\r\n        this._createEndTagToken(toChar(cp));\r\n        this.tempBuff.push(cp);\r\n        this.state = SCRIPT_DATA_END_TAG_NAME_STATE;\r\n    }\r\n\r\n    else {\r\n        this._emitChar('<');\r\n        this._emitChar('/');\r\n        this._reconsumeInState(SCRIPT_DATA_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.19 Script data end tag name state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_END_TAG_NAME_STATE] = function scriptDataEndTagNameState(cp) {\r\n    if (isAsciiUpper(cp)) {\r\n        this.currentToken.tagName += toAsciiLowerChar(cp);\r\n        this.tempBuff.push(cp);\r\n    }\r\n\r\n    else if (isAsciiLower(cp)) {\r\n        this.currentToken.tagName += toChar(cp);\r\n        this.tempBuff.push(cp);\r\n    }\r\n\r\n    else {\r\n        if (this._isAppropriateEndTagToken()) {\r\n            if (isWhitespace(cp)) {\r\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\r\n                return;\r\n            }\r\n\r\n            else if (cp === $.SOLIDUS) {\r\n                this.state = SELF_CLOSING_START_TAG_STATE;\r\n                return;\r\n            }\r\n\r\n            else if (cp === $.GREATER_THAN_SIGN) {\r\n                this._emitCurrentToken();\r\n                this.state = DATA_STATE;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this._emitChar('<');\r\n        this._emitChar('/');\r\n        this._emitSeveralCodePoints(this.tempBuff);\r\n        this._reconsumeInState(SCRIPT_DATA_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.20 Script data escape start state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_ESCAPE_START_STATE] = function scriptDataEscapeStartState(cp) {\r\n    if (cp === $.HYPHEN_MINUS) {\r\n        this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;\r\n        this._emitChar('-');\r\n    }\r\n\r\n    else\r\n        this._reconsumeInState(SCRIPT_DATA_STATE);\r\n};\r\n\r\n\r\n//12.2.4.21 Script data escape start dash state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_ESCAPE_START_DASH_STATE] = function scriptDataEscapeStartDashState(cp) {\r\n    if (cp === $.HYPHEN_MINUS) {\r\n        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\r\n        this._emitChar('-');\r\n    }\r\n\r\n    else\r\n        this._reconsumeInState(SCRIPT_DATA_STATE);\r\n};\r\n\r\n\r\n//12.2.4.22 Script data escaped state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_ESCAPED_STATE] = function scriptDataEscapedState(cp) {\r\n    if (cp === $.HYPHEN_MINUS) {\r\n        this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;\r\n        this._emitChar('-');\r\n    }\r\n\r\n    else if (cp === $.LESS_THAN_SIGN)\r\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\r\n\r\n    else if (cp === $.NULL)\r\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else\r\n        this._emitCodePoint(cp);\r\n};\r\n\r\n\r\n//12.2.4.23 Script data escaped dash state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_ESCAPED_DASH_STATE] = function scriptDataEscapedDashState(cp) {\r\n    if (cp === $.HYPHEN_MINUS) {\r\n        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;\r\n        this._emitChar('-');\r\n    }\r\n\r\n    else if (cp === $.LESS_THAN_SIGN)\r\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\r\n\r\n    else if (cp === $.NULL) {\r\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\r\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\r\n    }\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else {\r\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\r\n        this._emitCodePoint(cp);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.24 Script data escaped dash dash state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_ESCAPED_DASH_DASH_STATE] = function scriptDataEscapedDashDashState(cp) {\r\n    if (cp === $.HYPHEN_MINUS)\r\n        this._emitChar('-');\r\n\r\n    else if (cp === $.LESS_THAN_SIGN)\r\n        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.state = SCRIPT_DATA_STATE;\r\n        this._emitChar('>');\r\n    }\r\n\r\n    else if (cp === $.NULL) {\r\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\r\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\r\n    }\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else {\r\n        this.state = SCRIPT_DATA_ESCAPED_STATE;\r\n        this._emitCodePoint(cp);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.25 Script data escaped less-than sign state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataEscapedLessThanSignState(cp) {\r\n    if (cp === $.SOLIDUS) {\r\n        this.tempBuff = [];\r\n        this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;\r\n    }\r\n\r\n    else if (isAsciiUpper(cp)) {\r\n        this.tempBuff = [];\r\n        this.tempBuff.push(toAsciiLowerCodePoint(cp));\r\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE;\r\n        this._emitChar('<');\r\n        this._emitCodePoint(cp);\r\n    }\r\n\r\n    else if (isAsciiLower(cp)) {\r\n        this.tempBuff = [];\r\n        this.tempBuff.push(cp);\r\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE;\r\n        this._emitChar('<');\r\n        this._emitCodePoint(cp);\r\n    }\r\n\r\n    else {\r\n        this._emitChar('<');\r\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.26 Script data escaped end tag open state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE] = function scriptDataEscapedEndTagOpenState(cp) {\r\n    if (isAsciiUpper(cp)) {\r\n        this._createEndTagToken(toAsciiLowerChar(cp));\r\n        this.tempBuff.push(cp);\r\n        this.state = SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE;\r\n    }\r\n\r\n    else if (isAsciiLower(cp)) {\r\n        this._createEndTagToken(toChar(cp));\r\n        this.tempBuff.push(cp);\r\n        this.state = SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE;\r\n    }\r\n\r\n    else {\r\n        this._emitChar('<');\r\n        this._emitChar('/');\r\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.27 Script data escaped end tag name state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE] = function scriptDataEscapedEndTagNameState(cp) {\r\n    if (isAsciiUpper(cp)) {\r\n        this.currentToken.tagName += toAsciiLowerChar(cp);\r\n        this.tempBuff.push(cp);\r\n    }\r\n\r\n    else if (isAsciiLower(cp)) {\r\n        this.currentToken.tagName += toChar(cp);\r\n        this.tempBuff.push(cp);\r\n    }\r\n\r\n    else {\r\n        if (this._isAppropriateEndTagToken()) {\r\n            if (isWhitespace(cp)) {\r\n                this.state = BEFORE_ATTRIBUTE_NAME_STATE;\r\n                return;\r\n            }\r\n\r\n            if (cp === $.SOLIDUS) {\r\n                this.state = SELF_CLOSING_START_TAG_STATE;\r\n                return;\r\n            }\r\n\r\n            if (cp === $.GREATER_THAN_SIGN) {\r\n                this._emitCurrentToken();\r\n                this.state = DATA_STATE;\r\n                return;\r\n            }\r\n        }\r\n\r\n        this._emitChar('<');\r\n        this._emitChar('/');\r\n        this._emitSeveralCodePoints(this.tempBuff);\r\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.28 Script data double escape start state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE] = function scriptDataDoubleEscapeStartState(cp) {\r\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\r\n        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE;\r\n        this._emitCodePoint(cp);\r\n    }\r\n\r\n    else if (isAsciiUpper(cp)) {\r\n        this.tempBuff.push(toAsciiLowerCodePoint(cp));\r\n        this._emitCodePoint(cp);\r\n    }\r\n\r\n    else if (isAsciiLower(cp)) {\r\n        this.tempBuff.push(cp);\r\n        this._emitCodePoint(cp);\r\n    }\r\n\r\n    else\r\n        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);\r\n};\r\n\r\n\r\n//12.2.4.29 Script data double escaped state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_DOUBLE_ESCAPED_STATE] = function scriptDataDoubleEscapedState(cp) {\r\n    if (cp === $.HYPHEN_MINUS) {\r\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;\r\n        this._emitChar('-');\r\n    }\r\n\r\n    else if (cp === $.LESS_THAN_SIGN) {\r\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\r\n        this._emitChar('<');\r\n    }\r\n\r\n    else if (cp === $.NULL)\r\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else\r\n        this._emitCodePoint(cp);\r\n};\r\n\r\n\r\n//12.2.4.30 Script data double escaped dash state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE] = function scriptDataDoubleEscapedDashState(cp) {\r\n    if (cp === $.HYPHEN_MINUS) {\r\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;\r\n        this._emitChar('-');\r\n    }\r\n\r\n    else if (cp === $.LESS_THAN_SIGN) {\r\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\r\n        this._emitChar('<');\r\n    }\r\n\r\n    else if (cp === $.NULL) {\r\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\r\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\r\n    }\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else {\r\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\r\n        this._emitCodePoint(cp);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.31 Script data double escaped dash dash state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE] = function scriptDataDoubleEscapedDashDashState(cp) {\r\n    if (cp === $.HYPHEN_MINUS)\r\n        this._emitChar('-');\r\n\r\n    else if (cp === $.LESS_THAN_SIGN) {\r\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;\r\n        this._emitChar('<');\r\n    }\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.state = SCRIPT_DATA_STATE;\r\n        this._emitChar('>');\r\n    }\r\n\r\n    else if (cp === $.NULL) {\r\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\r\n        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);\r\n    }\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else {\r\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\r\n        this._emitCodePoint(cp);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.32 Script data double escaped less-than sign state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataDoubleEscapedLessThanSignState(cp) {\r\n    if (cp === $.SOLIDUS) {\r\n        this.tempBuff = [];\r\n        this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;\r\n        this._emitChar('/');\r\n    }\r\n\r\n    else\r\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\r\n};\r\n\r\n\r\n//12.2.4.33 Script data double escape end state\r\n//------------------------------------------------------------------\r\n_[SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE] = function scriptDataDoubleEscapeEndState(cp) {\r\n    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {\r\n        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;\r\n\r\n        this._emitCodePoint(cp);\r\n    }\r\n\r\n    else if (isAsciiUpper(cp)) {\r\n        this.tempBuff.push(toAsciiLowerCodePoint(cp));\r\n        this._emitCodePoint(cp);\r\n    }\r\n\r\n    else if (isAsciiLower(cp)) {\r\n        this.tempBuff.push(cp);\r\n        this._emitCodePoint(cp);\r\n    }\r\n\r\n    else\r\n        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);\r\n};\r\n\r\n\r\n//12.2.4.34 Before attribute name state\r\n//------------------------------------------------------------------\r\n_[BEFORE_ATTRIBUTE_NAME_STATE] = function beforeAttributeNameState(cp) {\r\n    if (isWhitespace(cp))\r\n        return;\r\n\r\n    if (cp === $.SOLIDUS)\r\n        this.state = SELF_CLOSING_START_TAG_STATE;\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.state = DATA_STATE;\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else if (isAsciiUpper(cp)) {\r\n        this._createAttr(toAsciiLowerChar(cp));\r\n        this.state = ATTRIBUTE_NAME_STATE;\r\n    }\r\n\r\n    else if (cp === $.NULL) {\r\n        this._createAttr(UNICODE.REPLACEMENT_CHARACTER);\r\n        this.state = ATTRIBUTE_NAME_STATE;\r\n    }\r\n\r\n    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN || cp === $.EQUALS_SIGN) {\r\n        this._createAttr(toChar(cp));\r\n        this.state = ATTRIBUTE_NAME_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else {\r\n        this._createAttr(toChar(cp));\r\n        this.state = ATTRIBUTE_NAME_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.35 Attribute name state\r\n//------------------------------------------------------------------\r\n_[ATTRIBUTE_NAME_STATE] = function attributeNameState(cp) {\r\n    if (isWhitespace(cp))\r\n        this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);\r\n\r\n    else if (cp === $.SOLIDUS)\r\n        this._leaveAttrName(SELF_CLOSING_START_TAG_STATE);\r\n\r\n    else if (cp === $.EQUALS_SIGN)\r\n        this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this._leaveAttrName(DATA_STATE);\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else if (isAsciiUpper(cp))\r\n        this.currentAttr.name += toAsciiLowerChar(cp);\r\n\r\n    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN)\r\n        this.currentAttr.name += toChar(cp);\r\n\r\n    else if (cp === $.NULL)\r\n        this.currentAttr.name += UNICODE.REPLACEMENT_CHARACTER;\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else\r\n        this.currentAttr.name += toChar(cp);\r\n};\r\n\r\n\r\n//12.2.4.36 After attribute name state\r\n//------------------------------------------------------------------\r\n_[AFTER_ATTRIBUTE_NAME_STATE] = function afterAttributeNameState(cp) {\r\n    if (isWhitespace(cp))\r\n        return;\r\n\r\n    if (cp === $.SOLIDUS)\r\n        this.state = SELF_CLOSING_START_TAG_STATE;\r\n\r\n    else if (cp === $.EQUALS_SIGN)\r\n        this.state = BEFORE_ATTRIBUTE_VALUE_STATE;\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.state = DATA_STATE;\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else if (isAsciiUpper(cp)) {\r\n        this._createAttr(toAsciiLowerChar(cp));\r\n        this.state = ATTRIBUTE_NAME_STATE;\r\n    }\r\n\r\n    else if (cp === $.NULL) {\r\n        this._createAttr(UNICODE.REPLACEMENT_CHARACTER);\r\n        this.state = ATTRIBUTE_NAME_STATE;\r\n    }\r\n\r\n    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) {\r\n        this._createAttr(toChar(cp));\r\n        this.state = ATTRIBUTE_NAME_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else {\r\n        this._createAttr(toChar(cp));\r\n        this.state = ATTRIBUTE_NAME_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.37 Before attribute value state\r\n//------------------------------------------------------------------\r\n_[BEFORE_ATTRIBUTE_VALUE_STATE] = function beforeAttributeValueState(cp) {\r\n    if (isWhitespace(cp))\r\n        return;\r\n\r\n    if (cp === $.QUOTATION_MARK)\r\n        this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;\r\n\r\n    else if (cp === $.AMPERSAND)\r\n        this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);\r\n\r\n    else if (cp === $.APOSTROPHE)\r\n        this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;\r\n\r\n    else if (cp === $.NULL) {\r\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\r\n        this.state = ATTRIBUTE_VALUE_UNQUOTED_STATE;\r\n    }\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.state = DATA_STATE;\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else if (cp === $.LESS_THAN_SIGN || cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT) {\r\n        this.currentAttr.value += toChar(cp);\r\n        this.state = ATTRIBUTE_VALUE_UNQUOTED_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else {\r\n        this.currentAttr.value += toChar(cp);\r\n        this.state = ATTRIBUTE_VALUE_UNQUOTED_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.38 Attribute value (double-quoted) state\r\n//------------------------------------------------------------------\r\n_[ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE] = function attributeValueDoubleQuotedState(cp) {\r\n    if (cp === $.QUOTATION_MARK)\r\n        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\r\n\r\n    else if (cp === $.AMPERSAND) {\r\n        this.additionalAllowedCp = $.QUOTATION_MARK;\r\n        this.returnState = this.state;\r\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\r\n    }\r\n\r\n    else if (cp === $.NULL)\r\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else\r\n        this.currentAttr.value += toChar(cp);\r\n};\r\n\r\n\r\n//12.2.4.39 Attribute value (single-quoted) state\r\n//------------------------------------------------------------------\r\n_[ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE] = function attributeValueSingleQuotedState(cp) {\r\n    if (cp === $.APOSTROPHE)\r\n        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;\r\n\r\n    else if (cp === $.AMPERSAND) {\r\n        this.additionalAllowedCp = $.APOSTROPHE;\r\n        this.returnState = this.state;\r\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\r\n    }\r\n\r\n    else if (cp === $.NULL)\r\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else\r\n        this.currentAttr.value += toChar(cp);\r\n};\r\n\r\n\r\n//12.2.4.40 Attribute value (unquoted) state\r\n//------------------------------------------------------------------\r\n_[ATTRIBUTE_VALUE_UNQUOTED_STATE] = function attributeValueUnquotedState(cp) {\r\n    if (isWhitespace(cp))\r\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\r\n\r\n    else if (cp === $.AMPERSAND) {\r\n        this.additionalAllowedCp = $.GREATER_THAN_SIGN;\r\n        this.returnState = this.state;\r\n        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;\r\n    }\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.state = DATA_STATE;\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else if (cp === $.NULL)\r\n        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;\r\n\r\n    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN ||\r\n             cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT) {\r\n        this.currentAttr.value += toChar(cp);\r\n    }\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else\r\n        this.currentAttr.value += toChar(cp);\r\n};\r\n\r\n\r\n//12.2.4.41 Character reference in attribute value state\r\n//------------------------------------------------------------------\r\n_[CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE] = function characterReferenceInAttributeValueState(cp) {\r\n    var referencedCodePoints = this._consumeCharacterReference(cp, true);\r\n\r\n    if (referencedCodePoints) {\r\n        for (var i = 0; i < referencedCodePoints.length; i++)\r\n            this.currentAttr.value += toChar(referencedCodePoints[i]);\r\n    } else\r\n        this.currentAttr.value += '&';\r\n\r\n    this.state = this.returnState;\r\n};\r\n\r\n\r\n//12.2.4.42 After attribute value (quoted) state\r\n//------------------------------------------------------------------\r\n_[AFTER_ATTRIBUTE_VALUE_QUOTED_STATE] = function afterAttributeValueQuotedState(cp) {\r\n    if (isWhitespace(cp))\r\n        this.state = BEFORE_ATTRIBUTE_NAME_STATE;\r\n\r\n    else if (cp === $.SOLIDUS)\r\n        this.state = SELF_CLOSING_START_TAG_STATE;\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.state = DATA_STATE;\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else\r\n        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\r\n};\r\n\r\n\r\n//12.2.4.43 Self-closing start tag state\r\n//------------------------------------------------------------------\r\n_[SELF_CLOSING_START_TAG_STATE] = function selfClosingStartTagState(cp) {\r\n    if (cp === $.GREATER_THAN_SIGN) {\r\n        this.currentToken.selfClosing = true;\r\n        this.state = DATA_STATE;\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else if (cp === $.EOF)\r\n        this._reconsumeInState(DATA_STATE);\r\n\r\n    else\r\n        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);\r\n};\r\n\r\n\r\n//12.2.4.44 Bogus comment state\r\n//------------------------------------------------------------------\r\n_[BOGUS_COMMENT_STATE] = function bogusCommentState(cp) {\r\n    this._createCommentToken();\r\n\r\n    while (true) {\r\n        if (cp === $.GREATER_THAN_SIGN) {\r\n            this.state = DATA_STATE;\r\n            break;\r\n        }\r\n\r\n        else if (cp === $.EOF) {\r\n            this._reconsumeInState(DATA_STATE);\r\n            break;\r\n        }\r\n\r\n        else {\r\n            this.currentToken.data += cp === $.NULL ? UNICODE.REPLACEMENT_CHARACTER : toChar(cp);\r\n            cp = this._consume();\r\n        }\r\n    }\r\n\r\n    this._emitCurrentToken();\r\n};\r\n\r\n\r\n//12.2.4.45 Markup declaration open state\r\n//------------------------------------------------------------------\r\n_[MARKUP_DECLARATION_OPEN_STATE] = function markupDeclarationOpenState(cp) {\r\n    if (this._consumeSubsequentIfMatch($$.DASH_DASH_STRING, cp, true)) {\r\n        this._createCommentToken();\r\n        this.state = COMMENT_START_STATE;\r\n    }\r\n\r\n    else if (this._consumeSubsequentIfMatch($$.DOCTYPE_STRING, cp, false))\r\n        this.state = DOCTYPE_STATE;\r\n\r\n    else if (this.allowCDATA && this._consumeSubsequentIfMatch($$.CDATA_START_STRING, cp, true))\r\n        this.state = CDATA_SECTION_STATE;\r\n\r\n    else {\r\n        //NOTE: call bogus comment state directly with current consumed character to avoid unnecessary reconsumption.\r\n        this[BOGUS_COMMENT_STATE](cp);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.46 Comment start state\r\n//------------------------------------------------------------------\r\n_[COMMENT_START_STATE] = function commentStartState(cp) {\r\n    if (cp === $.HYPHEN_MINUS)\r\n        this.state = COMMENT_START_DASH_STATE;\r\n\r\n    else if (cp === $.NULL) {\r\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\r\n        this.state = COMMENT_STATE;\r\n    }\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.state = DATA_STATE;\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else {\r\n        this.currentToken.data += toChar(cp);\r\n        this.state = COMMENT_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.47 Comment start dash state\r\n//------------------------------------------------------------------\r\n_[COMMENT_START_DASH_STATE] = function commentStartDashState(cp) {\r\n    if (cp === $.HYPHEN_MINUS)\r\n        this.state = COMMENT_END_STATE;\r\n\r\n    else if (cp === $.NULL) {\r\n        this.currentToken.data += '-';\r\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\r\n        this.state = COMMENT_STATE;\r\n    }\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.state = DATA_STATE;\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else {\r\n        this.currentToken.data += '-';\r\n        this.currentToken.data += toChar(cp);\r\n        this.state = COMMENT_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.48 Comment state\r\n//------------------------------------------------------------------\r\n_[COMMENT_STATE] = function commentState(cp) {\r\n    if (cp === $.HYPHEN_MINUS)\r\n        this.state = COMMENT_END_DASH_STATE;\r\n\r\n    else if (cp === $.NULL)\r\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\r\n\r\n    else if (cp === $.EOF) {\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else\r\n        this.currentToken.data += toChar(cp);\r\n};\r\n\r\n\r\n//12.2.4.49 Comment end dash state\r\n//------------------------------------------------------------------\r\n_[COMMENT_END_DASH_STATE] = function commentEndDashState(cp) {\r\n    if (cp === $.HYPHEN_MINUS)\r\n        this.state = COMMENT_END_STATE;\r\n\r\n    else if (cp === $.NULL) {\r\n        this.currentToken.data += '-';\r\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\r\n        this.state = COMMENT_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else {\r\n        this.currentToken.data += '-';\r\n        this.currentToken.data += toChar(cp);\r\n        this.state = COMMENT_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.50 Comment end state\r\n//------------------------------------------------------------------\r\n_[COMMENT_END_STATE] = function commentEndState(cp) {\r\n    if (cp === $.GREATER_THAN_SIGN) {\r\n        this.state = DATA_STATE;\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else if (cp === $.EXCLAMATION_MARK)\r\n        this.state = COMMENT_END_BANG_STATE;\r\n\r\n    else if (cp === $.HYPHEN_MINUS)\r\n        this.currentToken.data += '-';\r\n\r\n    else if (cp === $.NULL) {\r\n        this.currentToken.data += '--';\r\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\r\n        this.state = COMMENT_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this._reconsumeInState(DATA_STATE);\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else {\r\n        this.currentToken.data += '--';\r\n        this.currentToken.data += toChar(cp);\r\n        this.state = COMMENT_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.51 Comment end bang state\r\n//------------------------------------------------------------------\r\n_[COMMENT_END_BANG_STATE] = function commentEndBangState(cp) {\r\n    if (cp === $.HYPHEN_MINUS) {\r\n        this.currentToken.data += '--!';\r\n        this.state = COMMENT_END_DASH_STATE;\r\n    }\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.state = DATA_STATE;\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else if (cp === $.NULL) {\r\n        this.currentToken.data += '--!';\r\n        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;\r\n        this.state = COMMENT_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else {\r\n        this.currentToken.data += '--!';\r\n        this.currentToken.data += toChar(cp);\r\n        this.state = COMMENT_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.52 DOCTYPE state\r\n//------------------------------------------------------------------\r\n_[DOCTYPE_STATE] = function doctypeState(cp) {\r\n    if (isWhitespace(cp))\r\n        this.state = BEFORE_DOCTYPE_NAME_STATE;\r\n\r\n    else if (cp === $.EOF) {\r\n        this._createDoctypeToken();\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else\r\n        this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);\r\n};\r\n\r\n\r\n//12.2.4.53 Before DOCTYPE name state\r\n//------------------------------------------------------------------\r\n_[BEFORE_DOCTYPE_NAME_STATE] = function beforeDoctypeNameState(cp) {\r\n    if (isWhitespace(cp))\r\n        return;\r\n\r\n    if (isAsciiUpper(cp)) {\r\n        this._createDoctypeToken(toAsciiLowerChar(cp));\r\n        this.state = DOCTYPE_NAME_STATE;\r\n    }\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this._createDoctypeToken();\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this._createDoctypeToken();\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else if (cp === $.NULL) {\r\n        this._createDoctypeToken(UNICODE.REPLACEMENT_CHARACTER);\r\n        this.state = DOCTYPE_NAME_STATE;\r\n    }\r\n\r\n    else {\r\n        this._createDoctypeToken(toChar(cp));\r\n        this.state = DOCTYPE_NAME_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.54 DOCTYPE name state\r\n//------------------------------------------------------------------\r\n_[DOCTYPE_NAME_STATE] = function doctypeNameState(cp) {\r\n    if (isWhitespace(cp))\r\n        this.state = AFTER_DOCTYPE_NAME_STATE;\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (isAsciiUpper(cp))\r\n        this.currentToken.name += toAsciiLowerChar(cp);\r\n\r\n    else if (cp === $.NULL)\r\n        this.currentToken.name += UNICODE.REPLACEMENT_CHARACTER;\r\n\r\n    else if (cp === $.EOF) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else\r\n        this.currentToken.name += toChar(cp);\r\n};\r\n\r\n\r\n//12.2.4.55 After DOCTYPE name state\r\n//------------------------------------------------------------------\r\n_[AFTER_DOCTYPE_NAME_STATE] = function afterDoctypeNameState(cp) {\r\n    if (isWhitespace(cp))\r\n        return;\r\n\r\n    if (cp === $.GREATER_THAN_SIGN) {\r\n        this.state = DATA_STATE;\r\n        this._emitCurrentToken();\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else if (this._consumeSubsequentIfMatch($$.PUBLIC_STRING, cp, false))\r\n        this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE;\r\n\r\n    else if (this._consumeSubsequentIfMatch($$.SYSTEM_STRING, cp, false))\r\n        this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE;\r\n\r\n    else {\r\n        this.currentToken.forceQuirks = true;\r\n        this.state = BOGUS_DOCTYPE_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.56 After DOCTYPE public keyword state\r\n//------------------------------------------------------------------\r\n_[AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE] = function afterDoctypePublicKeywordState(cp) {\r\n    if (isWhitespace(cp))\r\n        this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\r\n\r\n    else if (cp === $.QUOTATION_MARK) {\r\n        this.currentToken.publicId = '';\r\n        this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\r\n    }\r\n\r\n    else if (cp === $.APOSTROPHE) {\r\n        this.currentToken.publicId = '';\r\n        this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\r\n    }\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else {\r\n        this.currentToken.forceQuirks = true;\r\n        this.state = BOGUS_DOCTYPE_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.57 Before DOCTYPE public identifier state\r\n//------------------------------------------------------------------\r\n_[BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function beforeDoctypePublicIdentifierState(cp) {\r\n    if (isWhitespace(cp))\r\n        return;\r\n\r\n    if (cp === $.QUOTATION_MARK) {\r\n        this.currentToken.publicId = '';\r\n        this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;\r\n    }\r\n\r\n    else if (cp === $.APOSTROPHE) {\r\n        this.currentToken.publicId = '';\r\n        this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;\r\n    }\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else {\r\n        this.currentToken.forceQuirks = true;\r\n        this.state = BOGUS_DOCTYPE_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.58 DOCTYPE public identifier (double-quoted) state\r\n//------------------------------------------------------------------\r\n_[DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypePublicIdentifierDoubleQuotedState(cp) {\r\n    if (cp === $.QUOTATION_MARK)\r\n        this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\r\n\r\n    else if (cp === $.NULL)\r\n        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else\r\n        this.currentToken.publicId += toChar(cp);\r\n};\r\n\r\n\r\n//12.2.4.59 DOCTYPE public identifier (single-quoted) state\r\n//------------------------------------------------------------------\r\n_[DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypePublicIdentifierSingleQuotedState(cp) {\r\n    if (cp === $.APOSTROPHE)\r\n        this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;\r\n\r\n    else if (cp === $.NULL)\r\n        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else\r\n        this.currentToken.publicId += toChar(cp);\r\n};\r\n\r\n\r\n//12.2.4.60 After DOCTYPE public identifier state\r\n//------------------------------------------------------------------\r\n_[AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function afterDoctypePublicIdentifierState(cp) {\r\n    if (isWhitespace(cp))\r\n        this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (cp === $.QUOTATION_MARK) {\r\n        this.currentToken.systemId = '';\r\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\r\n    }\r\n\r\n    else if (cp === $.APOSTROPHE) {\r\n        this.currentToken.systemId = '';\r\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else {\r\n        this.currentToken.forceQuirks = true;\r\n        this.state = BOGUS_DOCTYPE_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.61 Between DOCTYPE public and system identifiers state\r\n//------------------------------------------------------------------\r\n_[BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE] = function betweenDoctypePublicAndSystemIdentifiersState(cp) {\r\n    if (isWhitespace(cp))\r\n        return;\r\n\r\n    if (cp === $.GREATER_THAN_SIGN) {\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (cp === $.QUOTATION_MARK) {\r\n        this.currentToken.systemId = '';\r\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\r\n    }\r\n\r\n\r\n    else if (cp === $.APOSTROPHE) {\r\n        this.currentToken.systemId = '';\r\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else {\r\n        this.currentToken.forceQuirks = true;\r\n        this.state = BOGUS_DOCTYPE_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.62 After DOCTYPE system keyword state\r\n//------------------------------------------------------------------\r\n_[AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE] = function afterDoctypeSystemKeywordState(cp) {\r\n    if (isWhitespace(cp))\r\n        this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\r\n\r\n    else if (cp === $.QUOTATION_MARK) {\r\n        this.currentToken.systemId = '';\r\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\r\n    }\r\n\r\n    else if (cp === $.APOSTROPHE) {\r\n        this.currentToken.systemId = '';\r\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\r\n    }\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else {\r\n        this.currentToken.forceQuirks = true;\r\n        this.state = BOGUS_DOCTYPE_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.63 Before DOCTYPE system identifier state\r\n//------------------------------------------------------------------\r\n_[BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function beforeDoctypeSystemIdentifierState(cp) {\r\n    if (isWhitespace(cp))\r\n        return;\r\n\r\n    if (cp === $.QUOTATION_MARK) {\r\n        this.currentToken.systemId = '';\r\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;\r\n    }\r\n\r\n    else if (cp === $.APOSTROPHE) {\r\n        this.currentToken.systemId = '';\r\n        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;\r\n    }\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else {\r\n        this.currentToken.forceQuirks = true;\r\n        this.state = BOGUS_DOCTYPE_STATE;\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.64 DOCTYPE system identifier (double-quoted) state\r\n//------------------------------------------------------------------\r\n_[DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypeSystemIdentifierDoubleQuotedState(cp) {\r\n    if (cp === $.QUOTATION_MARK)\r\n        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (cp === $.NULL)\r\n        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;\r\n\r\n    else if (cp === $.EOF) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else\r\n        this.currentToken.systemId += toChar(cp);\r\n};\r\n\r\n\r\n//12.2.4.65 DOCTYPE system identifier (single-quoted) state\r\n//------------------------------------------------------------------\r\n_[DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypeSystemIdentifierSingleQuotedState(cp) {\r\n    if (cp === $.APOSTROPHE)\r\n        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;\r\n\r\n    else if (cp === $.GREATER_THAN_SIGN) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (cp === $.NULL)\r\n        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;\r\n\r\n    else if (cp === $.EOF) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else\r\n        this.currentToken.systemId += toChar(cp);\r\n};\r\n\r\n\r\n//12.2.4.66 After DOCTYPE system identifier state\r\n//------------------------------------------------------------------\r\n_[AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function afterDoctypeSystemIdentifierState(cp) {\r\n    if (isWhitespace(cp))\r\n        return;\r\n\r\n    if (cp === $.GREATER_THAN_SIGN) {\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this.currentToken.forceQuirks = true;\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n\r\n    else\r\n        this.state = BOGUS_DOCTYPE_STATE;\r\n};\r\n\r\n\r\n//12.2.4.67 Bogus DOCTYPE state\r\n//------------------------------------------------------------------\r\n_[BOGUS_DOCTYPE_STATE] = function bogusDoctypeState(cp) {\r\n    if (cp === $.GREATER_THAN_SIGN) {\r\n        this._emitCurrentToken();\r\n        this.state = DATA_STATE;\r\n    }\r\n\r\n    else if (cp === $.EOF) {\r\n        this._emitCurrentToken();\r\n        this._reconsumeInState(DATA_STATE);\r\n    }\r\n};\r\n\r\n\r\n//12.2.4.68 CDATA section state\r\n//------------------------------------------------------------------\r\n_[CDATA_SECTION_STATE] = function cdataSectionState(cp) {\r\n    while (true) {\r\n        if (cp === $.EOF) {\r\n            this._reconsumeInState(DATA_STATE);\r\n            break;\r\n        }\r\n\r\n        else if (this._consumeSubsequentIfMatch($$.CDATA_END_STRING, cp, true)) {\r\n            this.state = DATA_STATE;\r\n            break;\r\n        }\r\n\r\n        else {\r\n            this._emitCodePoint(cp);\r\n            cp = this._consume();\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}