{"ast":null,"code":"'use strict'; //Node construction\n\nexports.createDocument = function () {\n  return {\n    nodeName: '#document',\n    quirksMode: false,\n    childNodes: []\n  };\n};\n\nexports.createDocumentFragment = function () {\n  return {\n    nodeName: '#document-fragment',\n    quirksMode: false,\n    childNodes: []\n  };\n};\n\nexports.createElement = function (tagName, namespaceURI, attrs) {\n  return {\n    nodeName: tagName,\n    tagName: tagName,\n    attrs: attrs,\n    namespaceURI: namespaceURI,\n    childNodes: [],\n    parentNode: null\n  };\n};\n\nexports.createCommentNode = function (data) {\n  return {\n    nodeName: '#comment',\n    data: data,\n    parentNode: null\n  };\n};\n\nvar createTextNode = function (value) {\n  return {\n    nodeName: '#text',\n    value: value,\n    parentNode: null\n  };\n}; //Tree mutation\n\n\nexports.setDocumentType = function (document, name, publicId, systemId) {\n  var doctypeNode = null;\n\n  for (var i = 0; i < document.childNodes.length; i++) {\n    if (document.childNodes[i].nodeName === '#documentType') {\n      doctypeNode = document.childNodes[i];\n      break;\n    }\n  }\n\n  if (doctypeNode) {\n    doctypeNode.name = name;\n    doctypeNode.publicId = publicId;\n    doctypeNode.systemId = systemId;\n  } else {\n    appendChild(document, {\n      nodeName: '#documentType',\n      name: name,\n      publicId: publicId,\n      systemId: systemId\n    });\n  }\n};\n\nexports.setQuirksMode = function (document) {\n  document.quirksMode = true;\n};\n\nexports.isQuirksMode = function (document) {\n  return document.quirksMode;\n};\n\nvar appendChild = exports.appendChild = function (parentNode, newNode) {\n  parentNode.childNodes.push(newNode);\n  newNode.parentNode = parentNode;\n};\n\nvar insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {\n  var insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n  parentNode.childNodes.splice(insertionIdx, 0, newNode);\n  newNode.parentNode = parentNode;\n};\n\nexports.detachNode = function (node) {\n  if (node.parentNode) {\n    var idx = node.parentNode.childNodes.indexOf(node);\n    node.parentNode.childNodes.splice(idx, 1);\n    node.parentNode = null;\n  }\n};\n\nexports.insertText = function (parentNode, text) {\n  if (parentNode.childNodes.length) {\n    var prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n\n    if (prevNode.nodeName === '#text') {\n      prevNode.value += text;\n      return;\n    }\n  }\n\n  appendChild(parentNode, createTextNode(text));\n};\n\nexports.insertTextBefore = function (parentNode, text, referenceNode) {\n  var prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n  if (prevNode && prevNode.nodeName === '#text') prevNode.value += text;else insertBefore(parentNode, createTextNode(text), referenceNode);\n};\n\nexports.adoptAttributes = function (recipientNode, attrs) {\n  var recipientAttrsMap = [];\n\n  for (var i = 0; i < recipientNode.attrs.length; i++) recipientAttrsMap.push(recipientNode.attrs[i].name);\n\n  for (var j = 0; j < attrs.length; j++) {\n    if (recipientAttrsMap.indexOf(attrs[j].name) === -1) recipientNode.attrs.push(attrs[j]);\n  }\n}; //Tree traversing\n\n\nexports.getFirstChild = function (node) {\n  return node.childNodes[0];\n};\n\nexports.getChildNodes = function (node) {\n  return node.childNodes;\n};\n\nexports.getParentNode = function (node) {\n  return node.parentNode;\n};\n\nexports.getAttrList = function (node) {\n  return node.attrs;\n}; //Node data\n\n\nexports.getTagName = function (element) {\n  return element.tagName;\n};\n\nexports.getNamespaceURI = function (element) {\n  return element.namespaceURI;\n};\n\nexports.getTextNodeContent = function (textNode) {\n  return textNode.value;\n};\n\nexports.getCommentNodeContent = function (commentNode) {\n  return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function (doctypeNode) {\n  return doctypeNode.name;\n};\n\nexports.getDocumentTypeNodePublicId = function (doctypeNode) {\n  return doctypeNode.publicId;\n};\n\nexports.getDocumentTypeNodeSystemId = function (doctypeNode) {\n  return doctypeNode.systemId;\n}; //Node types\n\n\nexports.isTextNode = function (node) {\n  return node.nodeName === '#text';\n};\n\nexports.isCommentNode = function (node) {\n  return node.nodeName === '#comment';\n};\n\nexports.isDocumentTypeNode = function (node) {\n  return node.nodeName === '#documentType';\n};\n\nexports.isElementNode = function (node) {\n  return !!node.tagName;\n};","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/node_modules/parse5/lib/tree_adapters/default.js"],"names":["exports","createDocument","nodeName","quirksMode","childNodes","createDocumentFragment","createElement","tagName","namespaceURI","attrs","parentNode","createCommentNode","data","createTextNode","value","setDocumentType","document","name","publicId","systemId","doctypeNode","i","length","appendChild","setQuirksMode","isQuirksMode","newNode","push","insertBefore","referenceNode","insertionIdx","indexOf","splice","detachNode","node","idx","insertText","text","prevNode","insertTextBefore","adoptAttributes","recipientNode","recipientAttrsMap","j","getFirstChild","getChildNodes","getParentNode","getAttrList","getTagName","element","getNamespaceURI","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isTextNode","isCommentNode","isDocumentTypeNode","isElementNode"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\n//Node construction\r\nexports.createDocument = function () {\r\n    return {\r\n        nodeName: '#document',\r\n        quirksMode: false,\r\n        childNodes: []\r\n    };\r\n};\r\n\r\nexports.createDocumentFragment = function () {\r\n    return {\r\n        nodeName: '#document-fragment',\r\n        quirksMode: false,\r\n        childNodes: []\r\n    };\r\n};\r\n\r\nexports.createElement = function (tagName, namespaceURI, attrs) {\r\n    return {\r\n        nodeName: tagName,\r\n        tagName: tagName,\r\n        attrs: attrs,\r\n        namespaceURI: namespaceURI,\r\n        childNodes: [],\r\n        parentNode: null\r\n    };\r\n};\r\n\r\nexports.createCommentNode = function (data) {\r\n    return {\r\n        nodeName: '#comment',\r\n        data: data,\r\n        parentNode: null\r\n    };\r\n};\r\n\r\nvar createTextNode = function (value) {\r\n    return {\r\n        nodeName: '#text',\r\n        value: value,\r\n        parentNode: null\r\n    }\r\n};\r\n\r\n\r\n//Tree mutation\r\nexports.setDocumentType = function (document, name, publicId, systemId) {\r\n    var doctypeNode = null;\r\n\r\n    for (var i = 0; i < document.childNodes.length; i++) {\r\n        if (document.childNodes[i].nodeName === '#documentType') {\r\n            doctypeNode = document.childNodes[i];\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (doctypeNode) {\r\n        doctypeNode.name = name;\r\n        doctypeNode.publicId = publicId;\r\n        doctypeNode.systemId = systemId;\r\n    }\r\n\r\n    else {\r\n        appendChild(document, {\r\n            nodeName: '#documentType',\r\n            name: name,\r\n            publicId: publicId,\r\n            systemId: systemId\r\n        });\r\n    }\r\n};\r\n\r\nexports.setQuirksMode = function (document) {\r\n    document.quirksMode = true;\r\n};\r\n\r\nexports.isQuirksMode = function (document) {\r\n    return document.quirksMode;\r\n};\r\n\r\nvar appendChild = exports.appendChild = function (parentNode, newNode) {\r\n    parentNode.childNodes.push(newNode);\r\n    newNode.parentNode = parentNode;\r\n};\r\n\r\nvar insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {\r\n    var insertionIdx = parentNode.childNodes.indexOf(referenceNode);\r\n\r\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\r\n    newNode.parentNode = parentNode;\r\n};\r\n\r\nexports.detachNode = function (node) {\r\n    if (node.parentNode) {\r\n        var idx = node.parentNode.childNodes.indexOf(node);\r\n\r\n        node.parentNode.childNodes.splice(idx, 1);\r\n        node.parentNode = null;\r\n    }\r\n};\r\n\r\nexports.insertText = function (parentNode, text) {\r\n    if (parentNode.childNodes.length) {\r\n        var prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\r\n\r\n        if (prevNode.nodeName === '#text') {\r\n            prevNode.value += text;\r\n            return;\r\n        }\r\n    }\r\n\r\n    appendChild(parentNode, createTextNode(text));\r\n};\r\n\r\nexports.insertTextBefore = function (parentNode, text, referenceNode) {\r\n    var prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\r\n\r\n    if (prevNode && prevNode.nodeName === '#text')\r\n        prevNode.value += text;\r\n    else\r\n        insertBefore(parentNode, createTextNode(text), referenceNode);\r\n};\r\n\r\nexports.adoptAttributes = function (recipientNode, attrs) {\r\n    var recipientAttrsMap = [];\r\n\r\n    for (var i = 0; i < recipientNode.attrs.length; i++)\r\n        recipientAttrsMap.push(recipientNode.attrs[i].name);\r\n\r\n    for (var j = 0; j < attrs.length; j++) {\r\n        if (recipientAttrsMap.indexOf(attrs[j].name) === -1)\r\n            recipientNode.attrs.push(attrs[j]);\r\n    }\r\n};\r\n\r\n\r\n//Tree traversing\r\nexports.getFirstChild = function (node) {\r\n    return node.childNodes[0];\r\n};\r\n\r\nexports.getChildNodes = function (node) {\r\n    return node.childNodes;\r\n};\r\n\r\nexports.getParentNode = function (node) {\r\n    return node.parentNode;\r\n};\r\n\r\nexports.getAttrList = function (node) {\r\n    return node.attrs;\r\n};\r\n\r\n//Node data\r\nexports.getTagName = function (element) {\r\n    return element.tagName;\r\n};\r\n\r\nexports.getNamespaceURI = function (element) {\r\n    return element.namespaceURI;\r\n};\r\n\r\nexports.getTextNodeContent = function (textNode) {\r\n    return textNode.value;\r\n};\r\n\r\nexports.getCommentNodeContent = function (commentNode) {\r\n    return commentNode.data;\r\n};\r\n\r\nexports.getDocumentTypeNodeName = function (doctypeNode) {\r\n    return doctypeNode.name;\r\n};\r\n\r\nexports.getDocumentTypeNodePublicId = function (doctypeNode) {\r\n    return doctypeNode.publicId;\r\n};\r\n\r\nexports.getDocumentTypeNodeSystemId = function (doctypeNode) {\r\n    return doctypeNode.systemId;\r\n};\r\n\r\n//Node types\r\nexports.isTextNode = function (node) {\r\n    return node.nodeName === '#text';\r\n};\r\n\r\nexports.isCommentNode = function (node) {\r\n    return node.nodeName === '#comment';\r\n};\r\n\r\nexports.isDocumentTypeNode = function (node) {\r\n    return node.nodeName === '#documentType';\r\n};\r\n\r\nexports.isElementNode = function (node) {\r\n    return !!node.tagName;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}