{"ast":null,"code":"'use strict';\n\nvar Doctype = require('../common/doctype'); //Conversion tables for DOM Level1 structure emulation\n\n\nvar nodeTypes = {\n  element: 1,\n  text: 3,\n  cdata: 4,\n  comment: 8\n};\nvar nodePropertyShorthands = {\n  tagName: 'name',\n  childNodes: 'children',\n  parentNode: 'parent',\n  previousSibling: 'prev',\n  nextSibling: 'next',\n  nodeValue: 'data'\n}; //Node\n\nvar Node = function (props) {\n  for (var key in props) {\n    if (props.hasOwnProperty(key)) this[key] = props[key];\n  }\n};\n\nNode.prototype = {\n  get firstChild() {\n    var children = this.children;\n    return children && children[0] || null;\n  },\n\n  get lastChild() {\n    var children = this.children;\n    return children && children[children.length - 1] || null;\n  },\n\n  get nodeType() {\n    return nodeTypes[this.type] || nodeTypes.element;\n  }\n\n};\nObject.keys(nodePropertyShorthands).forEach(function (key) {\n  var shorthand = nodePropertyShorthands[key];\n  Object.defineProperty(Node.prototype, key, {\n    get: function () {\n      return this[shorthand] || null;\n    },\n    set: function (val) {\n      this[shorthand] = val;\n      return val;\n    }\n  });\n}); //Node construction\n\nexports.createDocument = exports.createDocumentFragment = function () {\n  return new Node({\n    type: 'root',\n    name: 'root',\n    parent: null,\n    prev: null,\n    next: null,\n    children: []\n  });\n};\n\nexports.createElement = function (tagName, namespaceURI, attrs) {\n  var attribs = {},\n      attribsNamespace = {},\n      attribsPrefix = {};\n\n  for (var i = 0; i < attrs.length; i++) {\n    var attrName = attrs[i].name;\n    attribs[attrName] = attrs[i].value;\n    attribsNamespace[attrName] = attrs[i].namespace;\n    attribsPrefix[attrName] = attrs[i].prefix;\n  }\n\n  return new Node({\n    type: tagName === 'script' || tagName === 'style' ? tagName : 'tag',\n    name: tagName,\n    namespace: namespaceURI,\n    attribs: attribs,\n    'x-attribsNamespace': attribsNamespace,\n    'x-attribsPrefix': attribsPrefix,\n    children: [],\n    parent: null,\n    prev: null,\n    next: null\n  });\n};\n\nexports.createCommentNode = function (data) {\n  return new Node({\n    type: 'comment',\n    data: data,\n    parent: null,\n    prev: null,\n    next: null\n  });\n};\n\nvar createTextNode = function (value) {\n  return new Node({\n    type: 'text',\n    data: value,\n    parent: null,\n    prev: null,\n    next: null\n  });\n}; //Tree mutation\n\n\nexports.setDocumentType = function (document, name, publicId, systemId) {\n  var data = Doctype.serializeContent(name, publicId, systemId),\n      doctypeNode = null;\n\n  for (var i = 0; i < document.children.length; i++) {\n    if (document.children[i].type === 'directive' && document.children[i].name === '!doctype') {\n      doctypeNode = document.children[i];\n      break;\n    }\n  }\n\n  if (doctypeNode) {\n    doctypeNode.data = data;\n    doctypeNode['x-name'] = name;\n    doctypeNode['x-publicId'] = publicId;\n    doctypeNode['x-systemId'] = systemId;\n  } else {\n    appendChild(document, new Node({\n      type: 'directive',\n      name: '!doctype',\n      data: data,\n      'x-name': name,\n      'x-publicId': publicId,\n      'x-systemId': systemId\n    }));\n  }\n};\n\nexports.setQuirksMode = function (document) {\n  document.quirksMode = true;\n};\n\nexports.isQuirksMode = function (document) {\n  return document.quirksMode;\n};\n\nvar appendChild = exports.appendChild = function (parentNode, newNode) {\n  var prev = parentNode.children[parentNode.children.length - 1];\n\n  if (prev) {\n    prev.next = newNode;\n    newNode.prev = prev;\n  }\n\n  parentNode.children.push(newNode);\n  newNode.parent = parentNode;\n};\n\nvar insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {\n  var insertionIdx = parentNode.children.indexOf(referenceNode),\n      prev = referenceNode.prev;\n\n  if (prev) {\n    prev.next = newNode;\n    newNode.prev = prev;\n  }\n\n  referenceNode.prev = newNode;\n  newNode.next = referenceNode;\n  parentNode.children.splice(insertionIdx, 0, newNode);\n  newNode.parent = parentNode;\n};\n\nexports.detachNode = function (node) {\n  if (node.parent) {\n    var idx = node.parent.children.indexOf(node),\n        prev = node.prev,\n        next = node.next;\n    node.prev = null;\n    node.next = null;\n    if (prev) prev.next = next;\n    if (next) next.prev = prev;\n    node.parent.children.splice(idx, 1);\n    node.parent = null;\n  }\n};\n\nexports.insertText = function (parentNode, text) {\n  var lastChild = parentNode.children[parentNode.children.length - 1];\n  if (lastChild && lastChild.type === 'text') lastChild.data += text;else appendChild(parentNode, createTextNode(text));\n};\n\nexports.insertTextBefore = function (parentNode, text, referenceNode) {\n  var prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n  if (prevNode && prevNode.type === 'text') prevNode.data += text;else insertBefore(parentNode, createTextNode(text), referenceNode);\n};\n\nexports.adoptAttributes = function (recipientNode, attrs) {\n  for (var i = 0; i < attrs.length; i++) {\n    var attrName = attrs[i].name;\n\n    if (typeof recipientNode.attribs[attrName] === 'undefined') {\n      recipientNode.attribs[attrName] = attrs[i].value;\n      recipientNode['x-attribsNamespace'][attrName] = attrs[i].namespace;\n      recipientNode['x-attribsPrefix'][attrName] = attrs[i].prefix;\n    }\n  }\n}; //Tree traversing\n\n\nexports.getFirstChild = function (node) {\n  return node.children[0];\n};\n\nexports.getChildNodes = function (node) {\n  return node.children;\n};\n\nexports.getParentNode = function (node) {\n  return node.parent;\n};\n\nexports.getAttrList = function (node) {\n  var attrList = [];\n\n  for (var name in node.attribs) {\n    if (node.attribs.hasOwnProperty(name)) {\n      attrList.push({\n        name: name,\n        value: node.attribs[name],\n        namespace: node['x-attribsNamespace'][name],\n        prefix: node['x-attribsPrefix'][name]\n      });\n    }\n  }\n\n  return attrList;\n}; //Node data\n\n\nexports.getTagName = function (element) {\n  return element.name;\n};\n\nexports.getNamespaceURI = function (element) {\n  return element.namespace;\n};\n\nexports.getTextNodeContent = function (textNode) {\n  return textNode.data;\n};\n\nexports.getCommentNodeContent = function (commentNode) {\n  return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function (doctypeNode) {\n  return doctypeNode['x-name'];\n};\n\nexports.getDocumentTypeNodePublicId = function (doctypeNode) {\n  return doctypeNode['x-publicId'];\n};\n\nexports.getDocumentTypeNodeSystemId = function (doctypeNode) {\n  return doctypeNode['x-systemId'];\n}; //Node types\n\n\nexports.isTextNode = function (node) {\n  return node.type === 'text';\n};\n\nexports.isCommentNode = function (node) {\n  return node.type === 'comment';\n};\n\nexports.isDocumentTypeNode = function (node) {\n  return node.type === 'directive' && node.name === '!doctype';\n};\n\nexports.isElementNode = function (node) {\n  return !!node.attribs;\n};","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/node_modules/parse5/lib/tree_adapters/htmlparser2.js"],"names":["Doctype","require","nodeTypes","element","text","cdata","comment","nodePropertyShorthands","tagName","childNodes","parentNode","previousSibling","nextSibling","nodeValue","Node","props","key","hasOwnProperty","prototype","firstChild","children","lastChild","length","nodeType","type","Object","keys","forEach","shorthand","defineProperty","get","set","val","exports","createDocument","createDocumentFragment","name","parent","prev","next","createElement","namespaceURI","attrs","attribs","attribsNamespace","attribsPrefix","i","attrName","value","namespace","prefix","createCommentNode","data","createTextNode","setDocumentType","document","publicId","systemId","serializeContent","doctypeNode","appendChild","setQuirksMode","quirksMode","isQuirksMode","newNode","push","insertBefore","referenceNode","insertionIdx","indexOf","splice","detachNode","node","idx","insertText","insertTextBefore","prevNode","adoptAttributes","recipientNode","getFirstChild","getChildNodes","getParentNode","getAttrList","attrList","getTagName","getNamespaceURI","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isTextNode","isCommentNode","isDocumentTypeNode","isElementNode"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar Doctype = require('../common/doctype');\r\n\r\n//Conversion tables for DOM Level1 structure emulation\r\nvar nodeTypes = {\r\n    element: 1,\r\n    text: 3,\r\n    cdata: 4,\r\n    comment: 8\r\n};\r\n\r\nvar nodePropertyShorthands = {\r\n    tagName: 'name',\r\n    childNodes: 'children',\r\n    parentNode: 'parent',\r\n    previousSibling: 'prev',\r\n    nextSibling: 'next',\r\n    nodeValue: 'data'\r\n};\r\n\r\n//Node\r\nvar Node = function (props) {\r\n    for (var key in props) {\r\n        if (props.hasOwnProperty(key))\r\n            this[key] = props[key];\r\n    }\r\n};\r\n\r\nNode.prototype = {\r\n    get firstChild() {\r\n        var children = this.children;\r\n        return children && children[0] || null;\r\n    },\r\n\r\n    get lastChild() {\r\n        var children = this.children;\r\n        return children && children[children.length - 1] || null;\r\n    },\r\n\r\n    get nodeType() {\r\n        return nodeTypes[this.type] || nodeTypes.element;\r\n    }\r\n};\r\n\r\nObject.keys(nodePropertyShorthands).forEach(function (key) {\r\n    var shorthand = nodePropertyShorthands[key];\r\n\r\n    Object.defineProperty(Node.prototype, key, {\r\n        get: function () {\r\n            return this[shorthand] || null;\r\n        },\r\n        set: function (val) {\r\n            this[shorthand] = val;\r\n            return val;\r\n        }\r\n    });\r\n});\r\n\r\n\r\n//Node construction\r\nexports.createDocument =\r\nexports.createDocumentFragment = function () {\r\n    return new Node({\r\n        type: 'root',\r\n        name: 'root',\r\n        parent: null,\r\n        prev: null,\r\n        next: null,\r\n        children: []\r\n    });\r\n};\r\n\r\nexports.createElement = function (tagName, namespaceURI, attrs) {\r\n    var attribs = {},\r\n        attribsNamespace = {},\r\n        attribsPrefix = {};\r\n\r\n    for (var i = 0; i < attrs.length; i++) {\r\n        var attrName = attrs[i].name;\r\n\r\n        attribs[attrName] = attrs[i].value;\r\n        attribsNamespace[attrName] = attrs[i].namespace;\r\n        attribsPrefix[attrName] = attrs[i].prefix;\r\n    }\r\n\r\n    return new Node({\r\n        type: tagName === 'script' || tagName === 'style' ? tagName : 'tag',\r\n        name: tagName,\r\n        namespace: namespaceURI,\r\n        attribs: attribs,\r\n        'x-attribsNamespace': attribsNamespace,\r\n        'x-attribsPrefix': attribsPrefix,\r\n        children: [],\r\n        parent: null,\r\n        prev: null,\r\n        next: null\r\n    });\r\n};\r\n\r\nexports.createCommentNode = function (data) {\r\n    return new Node({\r\n        type: 'comment',\r\n        data: data,\r\n        parent: null,\r\n        prev: null,\r\n        next: null\r\n    });\r\n};\r\n\r\nvar createTextNode = function (value) {\r\n    return new Node({\r\n        type: 'text',\r\n        data: value,\r\n        parent: null,\r\n        prev: null,\r\n        next: null\r\n    });\r\n};\r\n\r\n\r\n//Tree mutation\r\nexports.setDocumentType = function (document, name, publicId, systemId) {\r\n    var data = Doctype.serializeContent(name, publicId, systemId),\r\n        doctypeNode = null;\r\n\r\n    for (var i = 0; i < document.children.length; i++) {\r\n        if (document.children[i].type === 'directive' && document.children[i].name === '!doctype') {\r\n            doctypeNode = document.children[i];\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (doctypeNode) {\r\n        doctypeNode.data = data;\r\n        doctypeNode['x-name'] = name;\r\n        doctypeNode['x-publicId'] = publicId;\r\n        doctypeNode['x-systemId'] = systemId;\r\n    }\r\n\r\n    else {\r\n        appendChild(document, new Node({\r\n            type: 'directive',\r\n            name: '!doctype',\r\n            data: data,\r\n            'x-name': name,\r\n            'x-publicId': publicId,\r\n            'x-systemId': systemId\r\n        }));\r\n    }\r\n\r\n};\r\n\r\nexports.setQuirksMode = function (document) {\r\n    document.quirksMode = true;\r\n};\r\n\r\nexports.isQuirksMode = function (document) {\r\n    return document.quirksMode;\r\n};\r\n\r\nvar appendChild = exports.appendChild = function (parentNode, newNode) {\r\n    var prev = parentNode.children[parentNode.children.length - 1];\r\n\r\n    if (prev) {\r\n        prev.next = newNode;\r\n        newNode.prev = prev;\r\n    }\r\n\r\n    parentNode.children.push(newNode);\r\n    newNode.parent = parentNode;\r\n};\r\n\r\nvar insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {\r\n    var insertionIdx = parentNode.children.indexOf(referenceNode),\r\n        prev = referenceNode.prev;\r\n\r\n    if (prev) {\r\n        prev.next = newNode;\r\n        newNode.prev = prev;\r\n    }\r\n\r\n    referenceNode.prev = newNode;\r\n    newNode.next = referenceNode;\r\n\r\n    parentNode.children.splice(insertionIdx, 0, newNode);\r\n    newNode.parent = parentNode;\r\n};\r\n\r\nexports.detachNode = function (node) {\r\n    if (node.parent) {\r\n        var idx = node.parent.children.indexOf(node),\r\n            prev = node.prev,\r\n            next = node.next;\r\n\r\n        node.prev = null;\r\n        node.next = null;\r\n\r\n        if (prev)\r\n            prev.next = next;\r\n\r\n        if (next)\r\n            next.prev = prev;\r\n\r\n        node.parent.children.splice(idx, 1);\r\n        node.parent = null;\r\n    }\r\n};\r\n\r\nexports.insertText = function (parentNode, text) {\r\n    var lastChild = parentNode.children[parentNode.children.length - 1];\r\n\r\n    if (lastChild && lastChild.type === 'text')\r\n        lastChild.data += text;\r\n    else\r\n        appendChild(parentNode, createTextNode(text));\r\n};\r\n\r\nexports.insertTextBefore = function (parentNode, text, referenceNode) {\r\n    var prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\r\n\r\n    if (prevNode && prevNode.type === 'text')\r\n        prevNode.data += text;\r\n    else\r\n        insertBefore(parentNode, createTextNode(text), referenceNode);\r\n};\r\n\r\nexports.adoptAttributes = function (recipientNode, attrs) {\r\n    for (var i = 0; i < attrs.length; i++) {\r\n        var attrName = attrs[i].name;\r\n\r\n        if (typeof recipientNode.attribs[attrName] === 'undefined') {\r\n            recipientNode.attribs[attrName] = attrs[i].value;\r\n            recipientNode['x-attribsNamespace'][attrName] = attrs[i].namespace;\r\n            recipientNode['x-attribsPrefix'][attrName] = attrs[i].prefix;\r\n        }\r\n    }\r\n};\r\n\r\n\r\n//Tree traversing\r\nexports.getFirstChild = function (node) {\r\n    return node.children[0];\r\n};\r\n\r\nexports.getChildNodes = function (node) {\r\n    return node.children;\r\n};\r\n\r\nexports.getParentNode = function (node) {\r\n    return node.parent;\r\n};\r\n\r\nexports.getAttrList = function (node) {\r\n    var attrList = [];\r\n\r\n    for (var name in node.attribs) {\r\n        if (node.attribs.hasOwnProperty(name)) {\r\n            attrList.push({\r\n                name: name,\r\n                value: node.attribs[name],\r\n                namespace: node['x-attribsNamespace'][name],\r\n                prefix: node['x-attribsPrefix'][name]\r\n            });\r\n        }\r\n    }\r\n\r\n    return attrList;\r\n};\r\n\r\n\r\n//Node data\r\nexports.getTagName = function (element) {\r\n    return element.name;\r\n};\r\n\r\nexports.getNamespaceURI = function (element) {\r\n    return element.namespace;\r\n};\r\n\r\nexports.getTextNodeContent = function (textNode) {\r\n    return textNode.data;\r\n};\r\n\r\nexports.getCommentNodeContent = function (commentNode) {\r\n    return commentNode.data;\r\n};\r\n\r\nexports.getDocumentTypeNodeName = function (doctypeNode) {\r\n    return doctypeNode['x-name'];\r\n};\r\n\r\nexports.getDocumentTypeNodePublicId = function (doctypeNode) {\r\n    return doctypeNode['x-publicId'];\r\n};\r\n\r\nexports.getDocumentTypeNodeSystemId = function (doctypeNode) {\r\n    return doctypeNode['x-systemId'];\r\n};\r\n\r\n\r\n//Node types\r\nexports.isTextNode = function (node) {\r\n    return node.type === 'text';\r\n};\r\n\r\nexports.isCommentNode = function (node) {\r\n    return node.type === 'comment';\r\n};\r\n\r\nexports.isDocumentTypeNode = function (node) {\r\n    return node.type === 'directive' && node.name === '!doctype';\r\n};\r\n\r\nexports.isElementNode = function (node) {\r\n    return !!node.attribs;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}