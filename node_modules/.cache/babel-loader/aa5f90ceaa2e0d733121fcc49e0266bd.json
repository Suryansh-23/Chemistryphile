{"ast":null,"code":"\"use strict\";\n\nvar xnv = require(\"xml-name-validator\"); // https://dom.spec.whatwg.org/#validate\n\n\nexports.name = function (name, core) {\n  try {\n    xnv.name(name);\n  } catch (e) {\n    throw new core.DOMException(core.DOMException.INVALID_CHARACTER_ERR, \"\\\"\" + name + \"\\\" did not match the Name production: \" + e.message);\n  }\n};\n\nexports.qname = function (qname, core) {\n  exports.name(qname, core);\n\n  try {\n    xnv.qname(qname);\n  } catch (e) {\n    throw new core.DOMException(core.DOMException.NAMESPACE_ERR, \"\\\"\" + qname + \"\\\" did not match the QName production: \" + e.message);\n  }\n};\n\nexports.validateAndExtract = function (namespace, qualifiedName, core) {\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  exports.qname(qualifiedName, core);\n  var prefix = null;\n  var localName = qualifiedName;\n  var colonIndex = qualifiedName.indexOf(\":\");\n\n  if (colonIndex !== -1) {\n    prefix = qualifiedName.substring(0, colonIndex);\n    localName = qualifiedName.substring(colonIndex + 1);\n  }\n\n  if (prefix !== null && namespace === null) {\n    throw new core.DOMException(core.DOMException.NAMESPACE_ERR, \"A namespace was given but a prefix was also extracted from the qualifiedName\");\n  }\n\n  if (prefix === \"xml\" && namespace !== \"http://www.w3.org/XML/1998/namespace\") {\n    throw new core.DOMException(core.DOMException.NAMESPACE_ERR, \"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\");\n  }\n\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== \"http://www.w3.org/2000/xmlns/\") {\n    throw new core.DOMException(core.DOMException.NAMESPACE_ERR, \"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS namespace\");\n  }\n\n  if (namespace === \"http://www.w3.org/2000/xmlns/\" && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\n    throw new core.DOMException(core.DOMException.NAMESPACE_ERR, \"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\");\n  }\n\n  return {\n    namespace: namespace,\n    prefix: prefix,\n    localName: localName,\n    qualifiedName: qualifiedName\n  };\n};","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/lib/jsdom/living/helpers/validate-names.js"],"names":["xnv","require","exports","name","core","e","DOMException","INVALID_CHARACTER_ERR","message","qname","NAMESPACE_ERR","validateAndExtract","namespace","qualifiedName","prefix","localName","colonIndex","indexOf","substring"],"mappings":"AAAA;;AACA,IAAIA,GAAG,GAAGC,OAAO,CAAC,oBAAD,CAAjB,C,CAEA;;;AAEAC,OAAO,CAACC,IAAR,GAAe,UAAUA,IAAV,EAAgBC,IAAhB,EAAsB;AACnC,MAAI;AACFJ,IAAAA,GAAG,CAACG,IAAJ,CAASA,IAAT;AACD,GAFD,CAEE,OAAOE,CAAP,EAAU;AACV,UAAM,IAAID,IAAI,CAACE,YAAT,CAAsBF,IAAI,CAACE,YAAL,CAAkBC,qBAAxC,EACJ,OAAOJ,IAAP,GAAc,wCAAd,GAAyDE,CAAC,CAACG,OADvD,CAAN;AAED;AACF,CAPD;;AASAN,OAAO,CAACO,KAAR,GAAgB,UAAUA,KAAV,EAAiBL,IAAjB,EAAuB;AACrCF,EAAAA,OAAO,CAACC,IAAR,CAAaM,KAAb,EAAoBL,IAApB;;AAEA,MAAI;AACFJ,IAAAA,GAAG,CAACS,KAAJ,CAAUA,KAAV;AACD,GAFD,CAEE,OAAOJ,CAAP,EAAU;AACV,UAAM,IAAID,IAAI,CAACE,YAAT,CAAsBF,IAAI,CAACE,YAAL,CAAkBI,aAAxC,EACJ,OAAOD,KAAP,GAAe,yCAAf,GAA2DJ,CAAC,CAACG,OADzD,CAAN;AAED;AACF,CATD;;AAWAN,OAAO,CAACS,kBAAR,GAA6B,UAAUC,SAAV,EAAqBC,aAArB,EAAoCT,IAApC,EAA0C;AACrE,MAAIQ,SAAS,KAAK,EAAlB,EAAsB;AACpBA,IAAAA,SAAS,GAAG,IAAZ;AACD;;AAEDV,EAAAA,OAAO,CAACO,KAAR,CAAcI,aAAd,EAA6BT,IAA7B;AAEA,MAAIU,MAAM,GAAG,IAAb;AACA,MAAIC,SAAS,GAAGF,aAAhB;AAEA,MAAIG,UAAU,GAAGH,aAAa,CAACI,OAAd,CAAsB,GAAtB,CAAjB;;AACA,MAAID,UAAU,KAAK,CAAC,CAApB,EAAuB;AACrBF,IAAAA,MAAM,GAAGD,aAAa,CAACK,SAAd,CAAwB,CAAxB,EAA2BF,UAA3B,CAAT;AACAD,IAAAA,SAAS,GAAGF,aAAa,CAACK,SAAd,CAAwBF,UAAU,GAAG,CAArC,CAAZ;AACD;;AAED,MAAIF,MAAM,KAAK,IAAX,IAAmBF,SAAS,KAAK,IAArC,EAA2C;AACzC,UAAM,IAAIR,IAAI,CAACE,YAAT,CAAsBF,IAAI,CAACE,YAAL,CAAkBI,aAAxC,EACJ,8EADI,CAAN;AAED;;AAED,MAAII,MAAM,KAAK,KAAX,IAAoBF,SAAS,KAAK,sCAAtC,EAA8E;AAC5E,UAAM,IAAIR,IAAI,CAACE,YAAT,CAAsBF,IAAI,CAACE,YAAL,CAAkBI,aAAxC,EACJ,2EADI,CAAN;AAED;;AAED,MAAI,CAACG,aAAa,KAAK,OAAlB,IAA6BC,MAAM,KAAK,OAAzC,KAAqDF,SAAS,KAAK,+BAAvE,EAAwG;AACtG,UAAM,IAAIR,IAAI,CAACE,YAAT,CAAsBF,IAAI,CAACE,YAAL,CAAkBI,aAAxC,EACJ,gGADI,CAAN;AAED;;AAED,MAAIE,SAAS,KAAK,+BAAd,IAAiDC,aAAa,KAAK,OAAnE,IAA8EC,MAAM,KAAK,OAA7F,EAAsG;AACpG,UAAM,IAAIV,IAAI,CAACE,YAAT,CAAsBF,IAAI,CAACE,YAAL,CAAkBI,aAAxC,EACJ,sFADI,CAAN;AAED;;AAED,SAAO;AAAEE,IAAAA,SAAS,EAAEA,SAAb;AAAwBE,IAAAA,MAAM,EAAEA,MAAhC;AAAwCC,IAAAA,SAAS,EAAEA,SAAnD;AAA8DF,IAAAA,aAAa,EAAEA;AAA7E,GAAP;AACD,CArCD","sourcesContent":["\"use strict\";\nvar xnv = require(\"xml-name-validator\");\n\n// https://dom.spec.whatwg.org/#validate\n\nexports.name = function (name, core) {\n  try {\n    xnv.name(name);\n  } catch (e) {\n    throw new core.DOMException(core.DOMException.INVALID_CHARACTER_ERR,\n      \"\\\"\" + name + \"\\\" did not match the Name production: \" + e.message);\n  }\n};\n\nexports.qname = function (qname, core) {\n  exports.name(qname, core);\n\n  try {\n    xnv.qname(qname);\n  } catch (e) {\n    throw new core.DOMException(core.DOMException.NAMESPACE_ERR,\n      \"\\\"\" + qname + \"\\\" did not match the QName production: \" + e.message);\n  }\n};\n\nexports.validateAndExtract = function (namespace, qualifiedName, core) {\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  exports.qname(qualifiedName, core);\n\n  var prefix = null;\n  var localName = qualifiedName;\n\n  var colonIndex = qualifiedName.indexOf(\":\");\n  if (colonIndex !== -1) {\n    prefix = qualifiedName.substring(0, colonIndex);\n    localName = qualifiedName.substring(colonIndex + 1);\n  }\n\n  if (prefix !== null && namespace === null) {\n    throw new core.DOMException(core.DOMException.NAMESPACE_ERR,\n      \"A namespace was given but a prefix was also extracted from the qualifiedName\");\n  }\n\n  if (prefix === \"xml\" && namespace !== \"http://www.w3.org/XML/1998/namespace\") {\n    throw new core.DOMException(core.DOMException.NAMESPACE_ERR,\n      \"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\");\n  }\n\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== \"http://www.w3.org/2000/xmlns/\") {\n    throw new core.DOMException(core.DOMException.NAMESPACE_ERR,\n      \"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS namespace\");\n  }\n\n  if (namespace === \"http://www.w3.org/2000/xmlns/\" && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\n    throw new core.DOMException(core.DOMException.NAMESPACE_ERR,\n      \"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\");\n  }\n\n  return { namespace: namespace, prefix: prefix, localName: localName, qualifiedName: qualifiedName };\n};\n"]},"metadata":{},"sourceType":"script"}