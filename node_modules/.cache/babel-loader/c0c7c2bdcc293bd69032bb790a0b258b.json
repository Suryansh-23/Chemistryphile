{"ast":null,"code":"'use strict'; //Const\n\nvar NOAH_ARK_CAPACITY = 3; //List of formatting elements\n\nvar FormattingElementList = module.exports = function (treeAdapter) {\n  this.length = 0;\n  this.entries = [];\n  this.treeAdapter = treeAdapter;\n  this.bookmark = null;\n}; //Entry types\n\n\nFormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';\nFormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY'; //Noah Ark's condition\n//OPTIMIZATION: at first we try to find possible candidates for exclusion using\n//lightweight heuristics without thorough attributes check.\n\nFormattingElementList.prototype._getNoahArkConditionCandidates = function (newElement) {\n  var candidates = [];\n\n  if (this.length >= NOAH_ARK_CAPACITY) {\n    var neAttrsLength = this.treeAdapter.getAttrList(newElement).length,\n        neTagName = this.treeAdapter.getTagName(newElement),\n        neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var entry = this.entries[i];\n      if (entry.type === FormattingElementList.MARKER_ENTRY) break;\n      var element = entry.element,\n          elementAttrs = this.treeAdapter.getAttrList(element);\n\n      if (this.treeAdapter.getTagName(element) === neTagName && this.treeAdapter.getNamespaceURI(element) === neNamespaceURI && elementAttrs.length === neAttrsLength) {\n        candidates.push({\n          idx: i,\n          attrs: elementAttrs\n        });\n      }\n    }\n  }\n\n  return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;\n};\n\nFormattingElementList.prototype._ensureNoahArkCondition = function (newElement) {\n  var candidates = this._getNoahArkConditionCandidates(newElement),\n      cLength = candidates.length;\n\n  if (cLength) {\n    var neAttrs = this.treeAdapter.getAttrList(newElement),\n        neAttrsLength = neAttrs.length,\n        neAttrsMap = {}; //NOTE: build attrs map for the new element so we can perform fast lookups\n\n    for (var i = 0; i < neAttrsLength; i++) {\n      var neAttr = neAttrs[i];\n      neAttrsMap[neAttr.name] = neAttr.value;\n    }\n\n    for (var i = 0; i < neAttrsLength; i++) {\n      for (var j = 0; j < cLength; j++) {\n        var cAttr = candidates[j].attrs[i];\n\n        if (neAttrsMap[cAttr.name] !== cAttr.value) {\n          candidates.splice(j, 1);\n          cLength--;\n        }\n\n        if (candidates.length < NOAH_ARK_CAPACITY) return;\n      }\n    } //NOTE: remove bottommost candidates until Noah's Ark condition will not be met\n\n\n    for (var i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {\n      this.entries.splice(candidates[i].idx, 1);\n      this.length--;\n    }\n  }\n}; //Mutations\n\n\nFormattingElementList.prototype.insertMarker = function () {\n  this.entries.push({\n    type: FormattingElementList.MARKER_ENTRY\n  });\n  this.length++;\n};\n\nFormattingElementList.prototype.pushElement = function (element, token) {\n  this._ensureNoahArkCondition(element);\n\n  this.entries.push({\n    type: FormattingElementList.ELEMENT_ENTRY,\n    element: element,\n    token: token\n  });\n  this.length++;\n};\n\nFormattingElementList.prototype.insertElementAfterBookmark = function (element, token) {\n  var bookmarkIdx = this.length - 1;\n\n  for (; bookmarkIdx >= 0; bookmarkIdx--) {\n    if (this.entries[bookmarkIdx] === this.bookmark) break;\n  }\n\n  this.entries.splice(bookmarkIdx + 1, 0, {\n    type: FormattingElementList.ELEMENT_ENTRY,\n    element: element,\n    token: token\n  });\n  this.length++;\n};\n\nFormattingElementList.prototype.removeEntry = function (entry) {\n  for (var i = this.length - 1; i >= 0; i--) {\n    if (this.entries[i] === entry) {\n      this.entries.splice(i, 1);\n      this.length--;\n      break;\n    }\n  }\n};\n\nFormattingElementList.prototype.clearToLastMarker = function () {\n  while (this.length) {\n    var entry = this.entries.pop();\n    this.length--;\n    if (entry.type === FormattingElementList.MARKER_ENTRY) break;\n  }\n}; //Search\n\n\nFormattingElementList.prototype.getElementEntryInScopeWithTagName = function (tagName) {\n  for (var i = this.length - 1; i >= 0; i--) {\n    var entry = this.entries[i];\n    if (entry.type === FormattingElementList.MARKER_ENTRY) return null;\n    if (this.treeAdapter.getTagName(entry.element) === tagName) return entry;\n  }\n\n  return null;\n};\n\nFormattingElementList.prototype.getElementEntry = function (element) {\n  for (var i = this.length - 1; i >= 0; i--) {\n    var entry = this.entries[i];\n    if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element == element) return entry;\n  }\n\n  return null;\n};","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/node_modules/parse5/lib/tree_construction/formatting_element_list.js"],"names":["NOAH_ARK_CAPACITY","FormattingElementList","module","exports","treeAdapter","length","entries","bookmark","MARKER_ENTRY","ELEMENT_ENTRY","prototype","_getNoahArkConditionCandidates","newElement","candidates","neAttrsLength","getAttrList","neTagName","getTagName","neNamespaceURI","getNamespaceURI","i","entry","type","element","elementAttrs","push","idx","attrs","_ensureNoahArkCondition","cLength","neAttrs","neAttrsMap","neAttr","name","value","j","cAttr","splice","insertMarker","pushElement","token","insertElementAfterBookmark","bookmarkIdx","removeEntry","clearToLastMarker","pop","getElementEntryInScopeWithTagName","tagName","getElementEntry"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\n//Const\r\nvar NOAH_ARK_CAPACITY = 3;\r\n\r\n//List of formatting elements\r\nvar FormattingElementList = module.exports = function (treeAdapter) {\r\n    this.length = 0;\r\n    this.entries = [];\r\n    this.treeAdapter = treeAdapter;\r\n    this.bookmark = null;\r\n};\r\n\r\n//Entry types\r\nFormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';\r\nFormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';\r\n\r\n//Noah Ark's condition\r\n//OPTIMIZATION: at first we try to find possible candidates for exclusion using\r\n//lightweight heuristics without thorough attributes check.\r\nFormattingElementList.prototype._getNoahArkConditionCandidates = function (newElement) {\r\n    var candidates = [];\r\n\r\n    if (this.length >= NOAH_ARK_CAPACITY) {\r\n        var neAttrsLength = this.treeAdapter.getAttrList(newElement).length,\r\n            neTagName = this.treeAdapter.getTagName(newElement),\r\n            neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\r\n\r\n        for (var i = this.length - 1; i >= 0; i--) {\r\n            var entry = this.entries[i];\r\n\r\n            if (entry.type === FormattingElementList.MARKER_ENTRY)\r\n                break;\r\n\r\n            var element = entry.element,\r\n                elementAttrs = this.treeAdapter.getAttrList(element);\r\n\r\n            if (this.treeAdapter.getTagName(element) === neTagName &&\r\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI &&\r\n                elementAttrs.length === neAttrsLength) {\r\n                candidates.push({idx: i, attrs: elementAttrs});\r\n            }\r\n        }\r\n    }\r\n\r\n    return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;\r\n};\r\n\r\nFormattingElementList.prototype._ensureNoahArkCondition = function (newElement) {\r\n    var candidates = this._getNoahArkConditionCandidates(newElement),\r\n        cLength = candidates.length;\r\n\r\n    if (cLength) {\r\n        var neAttrs = this.treeAdapter.getAttrList(newElement),\r\n            neAttrsLength = neAttrs.length,\r\n            neAttrsMap = {};\r\n\r\n        //NOTE: build attrs map for the new element so we can perform fast lookups\r\n        for (var i = 0; i < neAttrsLength; i++) {\r\n            var neAttr = neAttrs[i];\r\n\r\n            neAttrsMap[neAttr.name] = neAttr.value;\r\n        }\r\n\r\n        for (var i = 0; i < neAttrsLength; i++) {\r\n            for (var j = 0; j < cLength; j++) {\r\n                var cAttr = candidates[j].attrs[i];\r\n\r\n                if (neAttrsMap[cAttr.name] !== cAttr.value) {\r\n                    candidates.splice(j, 1);\r\n                    cLength--;\r\n                }\r\n\r\n                if (candidates.length < NOAH_ARK_CAPACITY)\r\n                    return;\r\n            }\r\n        }\r\n\r\n        //NOTE: remove bottommost candidates until Noah's Ark condition will not be met\r\n        for (var i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {\r\n            this.entries.splice(candidates[i].idx, 1);\r\n            this.length--;\r\n        }\r\n    }\r\n};\r\n\r\n//Mutations\r\nFormattingElementList.prototype.insertMarker = function () {\r\n    this.entries.push({type: FormattingElementList.MARKER_ENTRY});\r\n    this.length++;\r\n};\r\n\r\nFormattingElementList.prototype.pushElement = function (element, token) {\r\n    this._ensureNoahArkCondition(element);\r\n\r\n    this.entries.push({\r\n        type: FormattingElementList.ELEMENT_ENTRY,\r\n        element: element,\r\n        token: token\r\n    });\r\n\r\n    this.length++;\r\n};\r\n\r\nFormattingElementList.prototype.insertElementAfterBookmark = function (element, token) {\r\n    var bookmarkIdx = this.length - 1;\r\n\r\n    for (; bookmarkIdx >= 0; bookmarkIdx--) {\r\n        if (this.entries[bookmarkIdx] === this.bookmark)\r\n            break;\r\n    }\r\n\r\n    this.entries.splice(bookmarkIdx + 1, 0, {\r\n        type: FormattingElementList.ELEMENT_ENTRY,\r\n        element: element,\r\n        token: token\r\n    });\r\n\r\n    this.length++;\r\n};\r\n\r\nFormattingElementList.prototype.removeEntry = function (entry) {\r\n    for (var i = this.length - 1; i >= 0; i--) {\r\n        if (this.entries[i] === entry) {\r\n            this.entries.splice(i, 1);\r\n            this.length--;\r\n            break;\r\n        }\r\n    }\r\n};\r\n\r\nFormattingElementList.prototype.clearToLastMarker = function () {\r\n    while (this.length) {\r\n        var entry = this.entries.pop();\r\n\r\n        this.length--;\r\n\r\n        if (entry.type === FormattingElementList.MARKER_ENTRY)\r\n            break;\r\n    }\r\n};\r\n\r\n//Search\r\nFormattingElementList.prototype.getElementEntryInScopeWithTagName = function (tagName) {\r\n    for (var i = this.length - 1; i >= 0; i--) {\r\n        var entry = this.entries[i];\r\n\r\n        if (entry.type === FormattingElementList.MARKER_ENTRY)\r\n            return null;\r\n\r\n        if (this.treeAdapter.getTagName(entry.element) === tagName)\r\n            return entry;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nFormattingElementList.prototype.getElementEntry = function (element) {\r\n    for (var i = this.length - 1; i >= 0; i--) {\r\n        var entry = this.entries[i];\r\n\r\n        if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element == element)\r\n            return entry;\r\n    }\r\n\r\n    return null;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}