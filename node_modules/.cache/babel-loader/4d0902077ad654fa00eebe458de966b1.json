{"ast":null,"code":"\"use strict\";\n\nvar URL = require(\"url\");\n\nvar resolveHref = require(\"../utils\").resolveHref;\n\nvar NOT_IMPLEMENTED = require(\"./utils\").NOT_IMPLEMENTED;\n\nmodule.exports = Location;\n\nfunction Location(urlString, document) {\n  this._url = URL.parse(urlString);\n  this._document = document;\n}\n\nLocation.prototype = {\n  constructor: Location,\n  reload: function () {\n    NOT_IMPLEMENTED(this._document, \"location.reload\")();\n  },\n\n  get protocol() {\n    return this._url.protocol || \":\";\n  },\n\n  get host() {\n    return this._url.host || \"\";\n  },\n\n  get auth() {\n    return this._url.auth;\n  },\n\n  get hostname() {\n    return this._url.hostname || \"\";\n  },\n\n  get origin() {\n    return (this._url.protocol !== undefined && this._url.protocol !== null ? this._url.protocol + \"//\" : this._url.protocol) + this._url.host || \"\";\n  },\n\n  get port() {\n    return this._url.port || \"\";\n  },\n\n  get pathname() {\n    return this._url.pathname || \"\";\n  },\n\n  get href() {\n    return this._url.href;\n  },\n\n  get hash() {\n    return this._url.hash || \"\";\n  },\n\n  get search() {\n    return this._url.search || \"\";\n  },\n\n  set href(val) {\n    var oldUrl = this._url.href;\n    var oldProtocol = this._url.protocol;\n    var oldHost = this._url.host;\n    var oldPathname = this._url.pathname;\n    var oldHash = this._url.hash || \"\";\n    this._url = URL.parse(resolveHref(oldUrl, val));\n    var newUrl = this._url.href;\n    var newProtocol = this._url.protocol;\n    var newHost = this._url.host;\n    var newPathname = this._url.pathname;\n    var newHash = this._url.hash || \"\";\n\n    if (oldProtocol === newProtocol && oldHost === newHost && oldPathname === newPathname && oldHash !== newHash) {\n      this._signalHashChange(oldUrl, newUrl);\n    } else {\n      NOT_IMPLEMENTED(this._document, \"location.href (no reload)\")();\n    }\n  },\n\n  set hash(val) {\n    var oldUrl = this._url.href;\n    var oldHash = this._url.hash || \"\";\n\n    if (val.lastIndexOf(\"#\", 0) !== 0) {\n      val = \"#\" + val;\n    }\n\n    this._url = URL.parse(resolveHref(oldUrl, val));\n    var newUrl = this._url.href;\n    var newHash = this._url.hash || \"\";\n\n    if (oldHash !== newHash) {\n      this._signalHashChange(oldUrl, newUrl);\n    }\n  },\n\n  set search(val) {\n    var oldUrl = this._url.href;\n    var oldHash = this._url.hash || \"\";\n\n    if (val.length) {\n      if (val.lastIndexOf(\"?\", 0) !== 0) {\n        val = \"?\" + val;\n      }\n\n      this._url = URL.parse(resolveHref(oldUrl, val + oldHash));\n    } else {\n      this._url = URL.parse(oldUrl.replace(/\\?([^#]+)/, \"\"));\n    }\n  },\n\n  replace: function (val) {\n    this.href = val;\n  },\n  toString: function () {\n    return this._url.href;\n  },\n  _signalHashChange: function (oldUrl, newUrl) {\n    var ev = this._document.createEvent(\"HTMLEvents\");\n\n    ev.initEvent(\"hashchange\", false, false);\n    ev.oldUrl = oldUrl;\n    ev.newUrl = newUrl;\n    process.nextTick(function () {\n      this._document.parentWindow.dispatchEvent(ev);\n    }.bind(this));\n  }\n};","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/lib/jsdom/browser/location.js"],"names":["URL","require","resolveHref","NOT_IMPLEMENTED","module","exports","Location","urlString","document","_url","parse","_document","prototype","constructor","reload","protocol","host","auth","hostname","origin","undefined","port","pathname","href","hash","search","val","oldUrl","oldProtocol","oldHost","oldPathname","oldHash","newUrl","newProtocol","newHost","newPathname","newHash","_signalHashChange","lastIndexOf","length","replace","toString","ev","createEvent","initEvent","process","nextTick","parentWindow","dispatchEvent","bind"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar URL = require(\"url\");\nvar resolveHref = require(\"../utils\").resolveHref;\nvar NOT_IMPLEMENTED = require(\"./utils\").NOT_IMPLEMENTED;\n\nmodule.exports = Location;\n\nfunction Location(urlString, document) {\n  this._url = URL.parse(urlString);\n  this._document = document;\n}\n\nLocation.prototype = {\n  constructor: Location,\n  reload: function () {\n    NOT_IMPLEMENTED(this._document, \"location.reload\")();\n  },\n  get protocol() { return this._url.protocol || \":\"; },\n  get host() { return this._url.host || \"\"; },\n  get auth() { return this._url.auth; },\n  get hostname() { return this._url.hostname || \"\"; },\n  get origin() {\n    return ((this._url.protocol !== undefined && this._url.protocol !== null) ?\n              this._url.protocol + \"//\" :\n              this._url.protocol) +\n        this._url.host || \"\";\n  },\n  get port() { return this._url.port || \"\"; },\n  get pathname() { return this._url.pathname || \"\"; },\n  get href() { return this._url.href; },\n  get hash() { return this._url.hash || \"\"; },\n  get search() { return this._url.search || \"\"; },\n\n  set href(val) {\n    var oldUrl = this._url.href;\n    var oldProtocol = this._url.protocol;\n    var oldHost = this._url.host;\n    var oldPathname = this._url.pathname;\n    var oldHash = this._url.hash || \"\";\n\n    this._url = URL.parse(resolveHref(oldUrl, val));\n    var newUrl = this._url.href;\n    var newProtocol = this._url.protocol;\n    var newHost = this._url.host;\n    var newPathname = this._url.pathname;\n    var newHash = this._url.hash || \"\";\n\n    if (oldProtocol === newProtocol && oldHost === newHost && oldPathname === newPathname && oldHash !== newHash) {\n      this._signalHashChange(oldUrl, newUrl);\n    } else {\n      NOT_IMPLEMENTED(this._document, \"location.href (no reload)\")();\n    }\n  },\n\n  set hash(val) {\n    var oldUrl = this._url.href;\n    var oldHash = this._url.hash || \"\";\n\n    if (val.lastIndexOf(\"#\", 0) !== 0) {\n      val = \"#\" + val;\n    }\n\n    this._url = URL.parse(resolveHref(oldUrl, val));\n    var newUrl = this._url.href;\n    var newHash = this._url.hash || \"\";\n\n    if (oldHash !== newHash) {\n      this._signalHashChange(oldUrl, newUrl);\n    }\n  },\n\n  set search(val) {\n    var oldUrl = this._url.href;\n    var oldHash = this._url.hash || \"\";\n    if (val.length) {\n      if (val.lastIndexOf(\"?\", 0) !== 0) {\n        val = \"?\" + val;\n      }\n      this._url = URL.parse(resolveHref(oldUrl, val + oldHash));\n    } else {\n      this._url = URL.parse(oldUrl.replace(/\\?([^#]+)/, \"\"));\n    }\n  },\n\n  replace: function (val) {\n    this.href = val;\n  },\n\n  toString: function () {\n    return this._url.href;\n  },\n\n  _signalHashChange: function (oldUrl, newUrl) {\n    var ev = this._document.createEvent(\"HTMLEvents\");\n    ev.initEvent(\"hashchange\", false, false);\n    ev.oldUrl = oldUrl;\n    ev.newUrl = newUrl;\n    process.nextTick(function () {\n      this._document.parentWindow.dispatchEvent(ev);\n    }.bind(this));\n  }\n};\n"]},"metadata":{},"sourceType":"script"}