{"ast":null,"code":"\"use strict\";\n\nvar path = require(\"path\");\n\nvar url = require(\"url\");\n\nexports.toFileUrl = function (fileName) {\n  // Beyond just the `path.resolve`, this is mostly for the benefit of Windows,\n  // where we need to convert \"\\\" to \"/\" and add an extra \"/\" prefix before the\n  // drive letter.\n  var pathname = path.resolve(process.cwd(), fileName).replace(/\\\\/g, \"/\");\n\n  if (pathname[0] !== \"/\") {\n    pathname = \"/\" + pathname;\n  }\n\n  return \"file://\" + pathname;\n};\n/**\n * Define a setter on an object\n *\n * This method replaces any existing setter but leaves getters in place.\n *\n * - `object` {Object} the object to define the setter on\n * - `property` {String} the name of the setter\n * - `setterFn` {Function} the setter\n */\n\n\nexports.defineSetter = function defineSetter(object, property, setterFn) {\n  var descriptor = Object.getOwnPropertyDescriptor(object, property) || {\n    configurable: true,\n    enumerable: true\n  };\n  descriptor.set = setterFn;\n  Object.defineProperty(object, property, descriptor);\n};\n/**\n * Define a getter on an object\n *\n * This method replaces any existing getter but leaves setters in place.\n *\n * - `object` {Object} the object to define the getter on\n * - `property` {String} the name of the getter\n * - `getterFn` {Function} the getter\n */\n\n\nexports.defineGetter = function defineGetter(object, property, getterFn) {\n  var descriptor = Object.getOwnPropertyDescriptor(object, property) || {\n    configurable: true,\n    enumerable: true\n  };\n  descriptor.get = getterFn;\n  Object.defineProperty(object, property, descriptor);\n};\n/**\n * Create an object with the given prototype\n *\n * Optionally augment the created object.\n *\n * - `prototype` {Object} the created object's prototype\n * - `[properties]` {Object} properties to attach to the created object\n */\n\n\nexports.createFrom = function createFrom(prototype, properties) {\n  properties = properties || {};\n  var descriptors = {};\n  Object.getOwnPropertyNames(properties).forEach(function (name) {\n    descriptors[name] = Object.getOwnPropertyDescriptor(properties, name);\n  });\n  return Object.create(prototype, descriptors);\n};\n/**\n * Create an inheritance relationship between two classes\n *\n * Optionally augment the inherited prototype.\n *\n * - `Superclass` {Function} the inherited class\n * - `Subclass` {Function} the inheriting class\n * - `[properties]` {Object} properties to attach to the inherited prototype\n */\n\n\nexports.inheritFrom = function inheritFrom(Superclass, Subclass, properties) {\n  properties = properties || {};\n  Object.defineProperty(properties, \"constructor\", {\n    value: Subclass,\n    writable: true,\n    configurable: true\n  });\n  Subclass.prototype = exports.createFrom(Superclass.prototype, properties);\n};\n/**\n * Define a list of constants on a constructor and its .prototype\n *\n * - `Constructor` {Function} the constructor to define the constants on\n * - `propertyMap` {Object}  key/value map of properties to define\n */\n\n\nexports.addConstants = function addConstants(Constructor, propertyMap) {\n  for (var property in propertyMap) {\n    var value = propertyMap[property];\n    addConstant(Constructor, property, value);\n    addConstant(Constructor.prototype, property, value);\n  }\n};\n\nfunction addConstant(object, property, value) {\n  Object.defineProperty(object, property, {\n    configurable: false,\n    enumerable: true,\n    value: value,\n    writable: false\n  });\n}\n\nvar memoizeQueryTypeCounter = 0;\n/**\n * Returns a version of a method that memoizes specific types of calls on the object\n *\n * - `fn` {Function} the method to be memozied\n */\n\nexports.memoizeQuery = function memoizeQuery(fn) {\n  // Only memoize query functions with arity <= 2\n  if (fn.length > 2) {\n    return fn;\n  }\n\n  var type = memoizeQueryTypeCounter++;\n  return function () {\n    if (!this._memoizedQueries) {\n      return fn.apply(this, arguments);\n    }\n\n    if (!this._memoizedQueries[type]) {\n      this._memoizedQueries[type] = Object.create(null);\n    }\n\n    var key;\n\n    if (arguments.length === 1 && typeof arguments[0] === \"string\") {\n      key = arguments[0];\n    } else if (arguments.length === 2 && typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n      key = arguments[0] + \"::\" + arguments[1];\n    } else {\n      return fn.apply(this, arguments);\n    }\n\n    if (!(key in this._memoizedQueries[type])) {\n      this._memoizedQueries[type][key] = fn.apply(this, arguments);\n    }\n\n    return this._memoizedQueries[type][key];\n  };\n};\n/**\n* A slightly-more-compliant version of `url.resolve`, taking care of a few Node bugs.\n*/\n\n\nexports.resolveHref = function resolveHref(baseUrl, href) {\n  // If href is \"about:blank\", Node tries to be too clever.\n  if (href === \"about:blank\") {\n    return href;\n  }\n\n  if (baseUrl === resolveHref.memoizedUrl && resolveHref.cache && resolveHref.cache[href]) {\n    return resolveHref.cache[href];\n  } // When switching protocols, the path doesn't get canonicalized (i.e. .s and ..s are still left):\n  // https://github.com/joyent/node/issues/5453\n\n\n  var intermediate = url.resolve(baseUrl, href); // This canonicalizes the path, at the cost of overwriting the hash.\n\n  var nextStep = url.resolve(intermediate, \"#\"); // But it breaks file URLs by removing their colon O_o, so put that back.\n\n  nextStep = nextStep.replace(/^file:\\/\\/([a-z])\\//i, \"file:///$1:/\"); // So, insert the hash back in, if there was one.\n\n  var parsed = url.parse(intermediate);\n  var fixed = nextStep.slice(0, -1) + (parsed.hash || \"\"); // Finally, fix file:/// URLs on Windows, where Node removes their drive letters:\n  // https://github.com/joyent/node/issues/5452\n\n  if (/^file\\:\\/\\/\\/[a-z]\\:\\//i.test(baseUrl) && /^file\\:\\/\\/\\//.test(fixed) && !/^file\\:\\/\\/\\/[a-z]\\:\\//i.test(fixed)) {\n    fixed = fixed.replace(/^file\\:\\/\\/\\//, baseUrl.substring(0, 11));\n  } // HORRIBLE HACK: encode \\u00E4 correctly just so that we pass\n  // https://github.com/w3c/web-platform-tests/blob/e75f01a689a3481f5c773315c2c2527712cf8c2c/dom/nodes/DOMImplementation-createHTMLDocument.html#L71-L72\n  // Eventually we should replace this with a real URL parser based on the URL standard.\n\n\n  fixed = fixed.replace(/\\u00E4/, \"%C3%A4\");\n\n  if (baseUrl !== resolveHref.memoizedUrl) {\n    resolveHref.memoizedUrl = baseUrl;\n    resolveHref.cache = {};\n  }\n\n  resolveHref.cache[href] = fixed;\n  return fixed;\n};","map":{"version":3,"sources":["F:/JavaScript/Projects/chemistryphile/node_modules/jsdom-no-contextify/lib/jsdom/utils.js"],"names":["path","require","url","exports","toFileUrl","fileName","pathname","resolve","process","cwd","replace","defineSetter","object","property","setterFn","descriptor","Object","getOwnPropertyDescriptor","configurable","enumerable","set","defineProperty","defineGetter","getterFn","get","createFrom","prototype","properties","descriptors","getOwnPropertyNames","forEach","name","create","inheritFrom","Superclass","Subclass","value","writable","addConstants","Constructor","propertyMap","addConstant","memoizeQueryTypeCounter","memoizeQuery","fn","length","type","_memoizedQueries","apply","arguments","key","resolveHref","baseUrl","href","memoizedUrl","cache","intermediate","nextStep","parsed","parse","fixed","slice","hash","test","substring"],"mappings":"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","sourcesContent":["\"use strict\";\nvar path = require(\"path\");\nvar url = require(\"url\");\n\nexports.toFileUrl = function (fileName) {\n  // Beyond just the `path.resolve`, this is mostly for the benefit of Windows,\n  // where we need to convert \"\\\" to \"/\" and add an extra \"/\" prefix before the\n  // drive letter.\n  var pathname = path.resolve(process.cwd(), fileName).replace(/\\\\/g, \"/\");\n  if (pathname[0] !== \"/\") {\n    pathname = \"/\" + pathname;\n  }\n\n  return \"file://\" + pathname;\n};\n\n/**\n * Define a setter on an object\n *\n * This method replaces any existing setter but leaves getters in place.\n *\n * - `object` {Object} the object to define the setter on\n * - `property` {String} the name of the setter\n * - `setterFn` {Function} the setter\n */\nexports.defineSetter = function defineSetter(object, property, setterFn) {\n  var descriptor = Object.getOwnPropertyDescriptor(object, property) || {\n    configurable: true,\n    enumerable: true\n  };\n\n  descriptor.set = setterFn;\n\n  Object.defineProperty(object, property, descriptor);\n};\n\n/**\n * Define a getter on an object\n *\n * This method replaces any existing getter but leaves setters in place.\n *\n * - `object` {Object} the object to define the getter on\n * - `property` {String} the name of the getter\n * - `getterFn` {Function} the getter\n */\nexports.defineGetter = function defineGetter(object, property, getterFn) {\n  var descriptor = Object.getOwnPropertyDescriptor(object, property) || {\n    configurable: true,\n    enumerable: true\n  };\n\n  descriptor.get = getterFn;\n\n  Object.defineProperty(object, property, descriptor);\n};\n\n/**\n * Create an object with the given prototype\n *\n * Optionally augment the created object.\n *\n * - `prototype` {Object} the created object's prototype\n * - `[properties]` {Object} properties to attach to the created object\n */\nexports.createFrom = function createFrom(prototype, properties) {\n  properties = properties || {};\n\n  var descriptors = {};\n  Object.getOwnPropertyNames(properties).forEach(function (name) {\n    descriptors[name] = Object.getOwnPropertyDescriptor(properties, name);\n  });\n\n  return Object.create(prototype, descriptors);\n};\n\n/**\n * Create an inheritance relationship between two classes\n *\n * Optionally augment the inherited prototype.\n *\n * - `Superclass` {Function} the inherited class\n * - `Subclass` {Function} the inheriting class\n * - `[properties]` {Object} properties to attach to the inherited prototype\n */\nexports.inheritFrom = function inheritFrom(Superclass, Subclass, properties) {\n  properties = properties || {};\n\n  Object.defineProperty(properties, \"constructor\", {\n    value: Subclass,\n    writable: true,\n    configurable: true\n  });\n\n  Subclass.prototype = exports.createFrom(Superclass.prototype, properties);\n};\n\n/**\n * Define a list of constants on a constructor and its .prototype\n *\n * - `Constructor` {Function} the constructor to define the constants on\n * - `propertyMap` {Object}  key/value map of properties to define\n */\nexports.addConstants = function addConstants(Constructor, propertyMap) {\n  for (var property in propertyMap) {\n    var value = propertyMap[property];\n    addConstant(Constructor, property, value);\n    addConstant(Constructor.prototype, property, value);\n  }\n};\n\nfunction addConstant(object, property, value) {\n  Object.defineProperty(object, property, {\n    configurable: false,\n    enumerable: true,\n    value: value,\n    writable: false\n  });\n}\n\nvar memoizeQueryTypeCounter = 0;\n\n/**\n * Returns a version of a method that memoizes specific types of calls on the object\n *\n * - `fn` {Function} the method to be memozied\n */\nexports.memoizeQuery = function memoizeQuery(fn) {\n  // Only memoize query functions with arity <= 2\n  if (fn.length > 2) {\n    return fn;\n  }\n\n  var type = memoizeQueryTypeCounter++;\n\n  return function () {\n    if (!this._memoizedQueries) {\n      return fn.apply(this, arguments);\n    }\n\n    if (!this._memoizedQueries[type]) {\n      this._memoizedQueries[type] = Object.create(null);\n    }\n\n    var key;\n    if (arguments.length === 1 && typeof arguments[0] === \"string\") {\n      key = arguments[0];\n    } else if (arguments.length === 2 && typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n      key = arguments[0] + \"::\" + arguments[1];\n    } else {\n      return fn.apply(this, arguments);\n    }\n\n    if (!(key in this._memoizedQueries[type])) {\n      this._memoizedQueries[type][key] = fn.apply(this, arguments);\n    }\n    return this._memoizedQueries[type][key];\n  };\n};\n\n/**\n* A slightly-more-compliant version of `url.resolve`, taking care of a few Node bugs.\n*/\nexports.resolveHref = function resolveHref(baseUrl, href) {\n  // If href is \"about:blank\", Node tries to be too clever.\n  if (href === \"about:blank\") {\n    return href;\n  }\n\n  if (baseUrl === resolveHref.memoizedUrl && resolveHref.cache && resolveHref.cache[href]) {\n    return resolveHref.cache[href];\n  }\n\n  // When switching protocols, the path doesn't get canonicalized (i.e. .s and ..s are still left):\n  // https://github.com/joyent/node/issues/5453\n  var intermediate = url.resolve(baseUrl, href);\n\n  // This canonicalizes the path, at the cost of overwriting the hash.\n  var nextStep = url.resolve(intermediate, \"#\");\n\n  // But it breaks file URLs by removing their colon O_o, so put that back.\n  nextStep = nextStep.replace(/^file:\\/\\/([a-z])\\//i, \"file:///$1:/\");\n\n  // So, insert the hash back in, if there was one.\n  var parsed = url.parse(intermediate);\n  var fixed = nextStep.slice(0, -1) + (parsed.hash || \"\");\n\n  // Finally, fix file:/// URLs on Windows, where Node removes their drive letters:\n  // https://github.com/joyent/node/issues/5452\n  if (/^file\\:\\/\\/\\/[a-z]\\:\\//i.test(baseUrl) && /^file\\:\\/\\/\\//.test(fixed) &&\n      !/^file\\:\\/\\/\\/[a-z]\\:\\//i.test(fixed)) {\n    fixed = fixed.replace(/^file\\:\\/\\/\\//, baseUrl.substring(0, 11));\n  }\n\n  // HORRIBLE HACK: encode \\u00E4 correctly just so that we pass\n  // https://github.com/w3c/web-platform-tests/blob/e75f01a689a3481f5c773315c2c2527712cf8c2c/dom/nodes/DOMImplementation-createHTMLDocument.html#L71-L72\n  // Eventually we should replace this with a real URL parser based on the URL standard.\n  fixed = fixed.replace(/\\u00E4/, \"%C3%A4\");\n\n  if (baseUrl !== resolveHref.memoizedUrl) {\n    resolveHref.memoizedUrl = baseUrl;\n    resolveHref.cache = {};\n  }\n  resolveHref.cache[href] = fixed;\n\n  return fixed;\n};\n"]},"metadata":{},"sourceType":"script"}